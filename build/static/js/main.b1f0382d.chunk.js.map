{"version":3,"sources":["res/data/farm-sizes.csv","res/imgs/cow.svg","res/imgs/wheat.svg","services/DataService.js","components/RelativeLineChart.js","components/Header.js","res/imgs/SvgImage.js","res/imgs/Icons.js","components/AnimatedRelations.js","components/Introduction.js","components/DraggableBarChart.js","components/QuizPage.js","components/FarmsCountStackedAreaChart.js","components/Footer.js","components/GrowPossibilities.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","DataService","data","yearMin","yearMax","length","minSmall","area_size_0_1","area_size_1_3","area_size_3_5","area_size_5_10","minMedium","area_size_20_30","area_size_10_20","minLarge","area_size_50_n","area_size_30_50","maxSmall","maxMedium","maxLarge","value","label","size","minYearData","maxYearData","minYear","year","maxYear","random1","random2","maxInPct","activeIndex","i","d3","farmsData","d","total_farms_count","area_valley_in_percent","area_mountain_in_percent","parseDate","maxRatio","Infinity","minRatio","newData","name","values","j","perYearRatio","push","ratio","min","max","Object","keys","filter","RelativeLineChart","params","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","margin","top","right","bottom","left","width","height","_this$props","props","labelMap","metaData","pop","colorScale","range","xScale","domain","yScale","Math","round","xAxis","tickSizeOuter","yAxis","tickValues","tickFormat","line","x","y","svg","select","append","attr","mainGroup","lineGroup","selectAll","enter","style","on","remove","mouse","labelGroup","concat","text","formattedRratio","invert","axisGroup","drawChart","react","className","React","Header","SvgImage","vbWidth","vbHeight","viewBox","undefined","fill","xmlns","xmlnsXlink","src","fillRule","Icons","farmSmall","farmSmallBackground","farmMedium","farmMediumBackround","farmLarge","farmLargeBackround","farmOriginal","cow","wheat","grass","AnimatedRelations","animObjW","animObjH","padding","innerWidth","innerHeight","_this$props2","staticObjW","staticObjH","backgroundGroup","getRandomInRange","_this$props3","staticObj","staticObjBackground","staticObjFill","staticGroup","_this$props4","animObj","animObjCount","animObjGroup","class","exit","transition","ease","walkAnimation","duration","randomDuration","_this$props5","animObjName","random","start","end","floor","prepareData","drawStaticSvg","drawDynamicObjects","drawStaticObjects","Introduction","state","areaSize","sizeState","_this2","_this$state","SvgImage_SvgImage","AnimatedRelations_AnimatedRelations","getExplanationText","id","type","list","onChange","changeElementsCount","newValue","document","getElementById","valueAsNumber","setState","DraggableBarChart","showAnswer","chartWidth","chartHeight","maxScaleValue","durations","anim1","anim2","anim3","animSum","scaleX","map","rangeRound","scaleY","brushY","extent","barsGap","sourceEvent","selection","d0","datum","barContainer","move","drawHandleNorth","bandwidth","textLeft","initExplanationContainer","explanationContainer","textContainer","delay","_this5","tween","that","replace","t","_this3","_this4","classed","setTimeout","_this6","isAnimating","animateBars","animateExplanationLabel","QuizPage","handleScroll","e","scrollTop","target","scrollingElement","offsetTop","componentRef","current","elementHeight","offsetHeight","window","quizStarted","addEventListener","removeEventListener","getQuizData","ref","onScroll","DraggableBarChart_DraggableBarChart","Button_default","a","onClick","variant","FarmsCountStackedAreaChart","getLabelMap","getFilteredFarmsKeys","series","stack","area","y0","y1","key","initAxes","initLegend","scale","legendHeight","legendEntry","reverse","init","Footer","rel","href","GrowPossibilities","react_default","createElement","printIcons","cowImg","wheatImg","count","container","Image","Component","App","loadData","lineChartData","dataReady","Header_Header","GrowPossibilities_GrowPossibilities","Introduction_Introduction","QuizPage_QuizPage","FarmsCountStackedAreaChart_FarmsCountStackedAreaChart","RelativeLineChart_RelativeLineChart","Footer_Footer","getFullData","getNormalizedLineChartData","ReactDOM","render","src_App"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,2DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,oDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,oQCGnBC,2GAEAC,GACjB,IAAMC,EAAUD,EAAK,GACfE,EAAUF,EAAKA,EAAKG,OAAS,GAE/BC,EAAWH,EAAQI,cACnBJ,EAAQK,cACRL,EAAQM,cACRN,EAAQO,eAERC,EAAYR,EAAQS,gBAAkBT,EAAQU,gBAE9CC,EAAWX,EAAQY,eAAiBZ,EAAQa,gBAE5CC,EAAWb,EAAQG,cACnBH,EAAQI,cACRJ,EAAQK,cACRL,EAAQM,eAERQ,EAAYd,EAAQQ,gBAAkBR,EAAQS,gBAE9CM,EAAWf,EAAQW,eAAiBX,EAAQY,gBAEhD,MAAO,CACL,CACEI,MAAO,EACPC,MAAO,uBACPC,KAAM,YACNC,YAAajB,EACbkB,YAAaP,EACbQ,QAAStB,EAAQuB,KACjBC,QAASvB,EAAQsB,KACjBE,QAAS,IACTC,QAAS,GACTC,SAAUb,EAAWX,GAEvB,CACEc,MAAO,EACPC,MAAO,yBACPC,KAAM,eACNC,YAAaZ,EACba,YAAaN,EACbO,QAAStB,EAAQuB,KACjBC,QAASvB,EAAQsB,KACjBE,QAAS,IACTC,QAAS,GACTC,SAAUZ,EAAYP,GAExB,CACES,MAAO,EACPC,MAAO,uBACPC,KAAM,WACNC,YAAaT,EACbU,YAAaL,EACbM,QAAStB,EAAQuB,KACjBC,QAASvB,EAAQsB,KACjBE,QAAS,GACTC,QAAS,GACTC,SAAUX,EAAWL,+CAKDZ,EAAMwB,GAG9B,IAFA,IAAIK,EAAc,EAETC,EAAI,EAAGA,EAAI9B,EAAKG,OAAQ2B,IAC/B,GAAI9B,EAAK8B,GAAGN,KAAOA,EAEjBK,EAAcC,OACT,GAAI9B,EAAK8B,GAAGN,OAASA,EAAM,CAEhCK,EAAcC,EACd,MAIJ,IAAM7B,EAAUD,EAAK,GACfE,EAAUF,EAAK6B,GAErB,MAAO,CACL,CACET,KAAM,MACND,MAAO,cACPE,YAAapB,EAAQI,cACrBiB,YAAapB,EAAQG,cACrBkB,QAAStB,EAAQuB,KACjBC,QAASvB,EAAQsB,KACjBI,SAAU1B,EAAQG,cAAgBJ,EAAQI,eAE5C,CACEe,KAAM,MACND,MAAO,cACPE,YAAapB,EAAQK,cACrBgB,YAAapB,EAAQI,cACrBiB,QAAStB,EAAQuB,KACjBC,QAASvB,EAAQsB,KACjBI,SAAU1B,EAAQI,cAAgBL,EAAQK,eAE5C,CACEc,KAAM,MACND,MAAO,cACPE,YAAapB,EAAQM,cACrBe,YAAapB,EAAQK,cACrBgB,QAAStB,EAAQuB,KACjBC,QAASvB,EAAQsB,KACjBI,SAAU1B,EAAQK,cAAgBN,EAAQM,eAE5C,CACEa,KAAM,OACND,MAAO,eACPE,YAAapB,EAAQO,eACrBc,YAAapB,EAAQM,eACrBe,QAAStB,EAAQuB,KACjBC,QAASvB,EAAQsB,KACjBI,SAAU1B,EAAQM,eAAiBP,EAAQO,gBAE7C,CACEY,KAAM,QACND,MAAO,gBACPE,YAAapB,EAAQU,gBACrBW,YAAapB,EAAQS,gBACrBY,QAAStB,EAAQuB,KACjBC,QAASvB,EAAQsB,KACjBI,SAAU1B,EAAQS,gBAAkBV,EAAQU,iBAE9C,CACES,KAAM,QACND,MAAO,gBACPE,YAAapB,EAAQS,gBACrBY,YAAapB,EAAQQ,gBACrBa,QAAStB,EAAQuB,KACjBC,QAASvB,EAAQsB,KACjBI,SAAU1B,EAAQQ,gBAAkBT,EAAQS,iBAE9C,CACEU,KAAM,QACND,MAAO,gBACPE,YAAapB,EAAQa,gBACrBQ,YAAapB,EAAQY,gBACrBS,QAAStB,EAAQuB,KACjBC,QAASvB,EAAQsB,KACjBI,SAAU1B,EAAQY,gBAAkBb,EAAQa,iBAE9C,CACEM,KAAM,MACND,MAAO,SACPE,YAAapB,EAAQY,eACrBS,YAAapB,EAAQW,eACrBU,QAAStB,EAAQuB,KACjBC,QAASvB,EAAQsB,KACjBI,SAAU1B,EAAQW,eAAiBZ,EAAQY,uDAM/C,OAAOkB,IAAOC,IACZ,SAAAC,GAAC,MAAK,CACJT,MAAOS,EAAET,KACTU,mBAAoBD,EAAEC,kBACtBC,wBAAyBF,EAAEE,uBAC3BC,0BAA2BH,EAAEG,yBAC7B/B,eAAgB4B,EAAE5B,cAClBC,eAAgB2B,EAAE3B,cAClBC,eAAgB0B,EAAE1B,cAClBC,gBAAiByB,EAAEzB,eACnBG,iBAAkBsB,EAAEtB,gBACpBD,iBAAkBuB,EAAEvB,gBACpBI,iBAAkBmB,EAAEnB,gBACpBD,gBAAiBoB,EAAEpB,qEAISb,GAgBhC,IAfA,IAAMqC,EAAYN,IAAa,MAC3BO,GAAYC,IACZC,EAAWD,IAETE,EAAU,CACd,CAACC,KAAM,gBAAiBC,OAAQ,IAChC,CAACD,KAAM,gBAAiBC,OAAQ,IAChC,CAACD,KAAM,gBAAiBC,OAAQ,IAChC,CAACD,KAAM,iBAAkBC,OAAQ,IACjC,CAACD,KAAM,kBAAmBC,OAAQ,IAClC,CAACD,KAAM,kBAAmBC,OAAQ,IAClC,CAACD,KAAM,kBAAmBC,OAAQ,IAClC,CAACD,KAAM,iBAAkBC,OAAQ,KAG1Bb,EAAI,EAAGA,EAAIW,EAAQtC,OAAQ2B,IAElC,IAAK,IAAIc,EAAI,EAAGA,EAAI5C,EAAKG,OAAQyC,IAAK,CACpC,IAAIF,EAAOD,EAAQX,GAAGY,KAClBG,EAAe7C,EAAK4C,GAAGF,GAAM1C,EAAK,GAAG0C,GAEtCG,EAAeP,EAAUA,EAAWO,EAC/BA,EAAeL,IAAUA,EAAWK,GAE5CJ,EAAQX,GAAGa,OAAOG,KAAK,CAACtB,KAAMa,EAAUrC,EAAK4C,GAAGpB,MAAOuB,MAAOF,IAIlE,OADAJ,EAAQK,KAAK,CAACC,MAAO,CAACC,IAAKR,EAAUS,IAAKX,KACnCG,wCAIP,MAAO,CACLjB,KAAM,OACNU,kBAAmB,oBACnBC,uBAAwB,iBACxBC,yBAA0B,kBAC1B/B,cAAe,WACfC,cAAe,aACfC,cAAe,aACfC,eAAgB,cAChBG,gBAAiB,eACjBD,gBAAiB,eACjBI,gBAAiB,eACjBD,eAAgB,+DAIQb,GAC1B,OAAOkD,OAAOC,KAAKnD,EAAK,IAAIoD,OAAO,SAAAnB,GAAC,MAC5B,kBAANA,GACM,kBAANA,GACM,kBAANA,GACM,mBAANA,GACM,oBAANA,GACM,oBAANA,GACM,oBAANA,GACM,mBAANA,aCtOeoB,cAEnB,SAAAA,EAAYC,GAAQ,IAAAC,EAAA,OAAAL,OAAAM,EAAA,EAAAN,CAAAO,KAAAJ,IAClBE,EAAAL,OAAAQ,EAAA,EAAAR,CAAAO,KAAAP,OAAAS,EAAA,EAAAT,CAAAG,GAAAO,KAAAH,KAAMH,KAEDO,OAAS,CAACC,IAAK,GAAIC,MAAO,IAAKC,OAAQ,GAAIC,KAAM,KACtDV,EAAKW,MAAQ,IAAMX,EAAKM,OAAOI,KAAOV,EAAKM,OAAOE,MAClDR,EAAKY,OAAS,IAAMZ,EAAKM,OAAOC,IAAMP,EAAKM,OAAOG,OALhCT,2EAQR,IAAAa,EACeX,KAAKY,MAAvBrE,EADGoE,EACHpE,KAAMsE,EADHF,EACGE,SACPC,EAAWvE,EAAKwE,MAKhBC,EAAa1C,MAChB2C,MAAM,CAAC,UAAW,UAAW,UAAW,UACvC,UAAW,UACX,UAAW,YAERR,EAAyBT,KAAzBS,MAAOC,EAAkBV,KAAlBU,OAAQN,EAAUJ,KAAVI,OAEhBc,EAAS5C,MACZ6C,OAAO7C,IAAU/B,EAAK,GAAG2C,OAAQ,SAAAV,GAAC,OAAIA,EAAET,QACxCkD,MAAM,CAAC,EAAGR,IAEPW,EAAS9C,MACZ6C,OAAO,CAACE,KAAKC,MAA2B,GAArBR,EAASxB,MAAMC,KAAY,GAAI8B,KAAKC,MAAMR,EAASxB,MAAME,OAC5EyB,MAAM,CAACP,EAAQ,IAEZa,EAAQjD,IAAc4C,GACzBM,cAAc,GACXC,EAAQnD,IAAY8C,GACvBM,WAAW,CAAC,IAAO,EAAI,EAAG,GAAO,EAAG,EAAG,EAAG,IAC1CC,WAAW,SAAAnD,GAAC,OAAU,IAANA,EAAUF,IAAU,OAAVA,CAAkBE,EAAI,GAAKF,IAAU,MAAVA,CAAiBE,EAAI,KAGvEoD,EAAOtD,MACVuD,EAAE,SAAArD,GAAC,OAAI0C,EAAO1C,EAAET,QAChB+D,EAAE,SAAAtD,GAAC,OAAI4C,EAAO5C,EAAEc,SAGbyC,EAAMzD,IAAU,sBACnB0D,OAAO,oBAAoBC,OAAO,OAClCC,KAAK,QAASzB,EAAQL,EAAOI,KAAOJ,EAAOE,OAC3C4B,KAAK,SAAUxB,EAASN,EAAOC,IAAMD,EAAOG,QAEzC4B,EAAYJ,EAAIE,OAAO,KAC1BC,KAAK,YAAa,aAAe9B,EAAOI,KAAO,IAAMJ,EAAOC,IAAM,KAErE8B,EAAUF,OAAO,QACdC,KAAK,QAASzB,GACdyB,KAAK,SAAU,GACfA,KAAK,IAAKd,EAAO,IACjBc,KAAK,OAAQ,WAGhB,IAAME,EAAYD,EAAUE,UAAU,eACnC9F,KAAKA,GAAM+F,QACXL,OAAO,KACPC,KAAK,QAAS,cACjBE,EACGH,OAAO,QACPC,KAAK,QAAS,iBACdA,KAAK,IAAK,SAAA1D,GAAC,OAAIoD,EAAKpD,EAAEU,UACtBqD,MAAM,SAAU,SAAC/D,EAAGH,GAAJ,OAAU2C,EAAW3C,KACrCkE,MAAM,eAAgB,OACtBA,MAAM,OAAQ,QACdA,MAAM,UAxDW,KAyDpBH,EACGI,GAAG,YAAa,SAAUhE,EAAGH,GAC5B0D,EAAIM,UAAU,gBAAgBI,SAG9B,IAAMC,EAAQpE,IAAS0B,MAEjB2C,EAAaZ,EAAIE,OAAO,KAC3BC,KAAK,QAAS,eACjBS,EAAWV,OAAO,QACfC,KAAK,cAAe,OACvBS,EAAWV,OAAO,QACfC,KAAK,YADR,aAAAU,OACkCnC,EAAQL,EAAOI,KADjD,KAAAoC,OACyDxC,EAAOC,IAAMe,EAAO5C,EAAEU,OAAOV,EAAEU,OAAOxC,OAAS,GAAG4C,OAD3G,MAEG4C,KAAK,IAAK,GACVA,KAAK,KAAM,GACXD,OAAO,SACPM,MAAM,OAAQvB,EAAW3C,IACzB6D,KAAK,cAAe,KACpBW,KAAK,kBAAMhC,EAASrC,EAAES,QACtBgD,OAAO,SACPC,KAAK,IAAK,GACVA,KAAK,IAAK,IACVK,MAAM,OAAQ,gBACdL,KAAK,KAAM,GACXW,KAAK,WACJ,IAAIpF,EAAQlB,EAAK8B,GAAGa,OAAO3C,EAAK8B,GAAGa,OAAOxC,OAAS,GAC/CoG,EAAkBxE,IAAU,OAAVA,CAAkBb,EAAM6B,MAAQ,GAClDvB,EAAOO,IAAc,KAAdA,CAAoBb,EAAMM,MACrC,SAAA6E,OAAUE,EAAV,MAAAF,OAA8B7E,EAA9B,OAEJ4E,EAAWV,OAAO,QACfC,KAAK,YADR,aAAAU,OACkCxC,EAAOI,KAAOkC,EAAM,GADtD,KAAAE,OAC4DxC,EAAOC,IAAMqC,EAAM,GAAK,GADpF,MAEGR,KAAK,cAAe,OACpBW,KAAKvE,IAAU,OAAVA,CAAkB8C,EAAO2B,OAAOL,EAAM,IAAM,IACpDC,EAAWV,OAAO,UACfC,KAAK,QAAS,UACdA,KAAK,iBAAkB,QACvBA,KAAK,KAAM9B,EAAOI,KAAOkC,EAAM,IAC/BR,KAAK,KAAM9B,EAAOC,IAAMqC,EAAM,IAC9BR,KAAK,IAAK,GACVK,MAAM,OAAQvB,EAAW3C,IAG5B8D,EAAUE,UAAU,SACjBE,MAAM,UApGkB,OAqG3BjE,IAAU0B,MAAMqC,UAAU,SACvBE,MAAM,UAvGO,KAwGbA,MAAM,SAAU,aAEpBC,GAAG,aAAc,WAEhBL,EAAUE,UAAU,SACjBE,MAAM,UA7GO,KA8GhBjE,IAAU0B,MAAMqC,UAAU,SACvBE,MAAM,SAAU,QAEnBR,EAAIM,UAAU,gBAAgBI,WAIlC,IAAMO,EAAYb,EAAUF,OAAO,KAAKC,KAAK,QAAS,cAEtDc,EAAUf,OAAO,KACdC,KAAK,QAAS,UACdA,KAAK,YAFR,eAAAU,OAEoClC,EAFpC,MAGGP,KAAKoB,GACLU,OAAO,QACPC,KAAK,QAAS,UACdA,KAAK,IAAKzB,EAAQ,GAClByB,KAAK,IAAK,IACVW,KAAK,QACLN,MAAM,cAAe,UAExBS,EAAUf,OAAO,KACdC,KAAK,QAAS,UACd/B,KAAKsB,GACLQ,OAAO,QACPC,KAAK,QAAS,UACdA,KAAK,KAAMxB,EAAS,GACpBwB,KAAK,KAAM,IACXA,KAAK,YAAa,eAClBW,KAAK,6BACLX,KAAK,cAAe,sDAIvBlC,KAAKiD,6CAIL,OAAOC,EAAA,qBAAKC,UAAU,qBACpBD,EAAA,kEAGAA,EAAA,qBAAKC,UAAU,oBAEfD,EAAA,kGAAwEA,EAAA,sBACtEC,UAAU,gBAD4D,iBAAxE,mFAEyED,EAAA,sBACrEC,UAAU,YAD2D,mBAFzE,4CAIAD,EAAA,sEAA+CA,EAAA,sBAAMC,UAAU,cAAhB,gBAA/C,iJA3KyCC,aCJ1BC,mLAEjB,OACEH,EAAA,qBAAKC,UAAU,UAEbD,EAAA,qBAAKC,UAAU,8BACbD,EAAA,yJAMFA,EAAA,gEAEAA,EAAA,gOAEAA,EAAA,yKAhB4BE,aCAfE,cAEnB,SAAAA,EAAYzD,GAAQ,IAAAC,EAAAL,OAAAM,EAAA,EAAAN,CAAAO,KAAAsD,GAAA,IAAA3C,GAClBb,EAAAL,OAAAQ,EAAA,EAAAR,CAAAO,KAAAP,OAAAS,EAAA,EAAAT,CAAA6D,GAAAnD,KAAAH,KAAMH,KAC2Be,MAA1B2C,EAFW5C,EAEX4C,QAASC,EAFE7C,EAEF6C,SAFE,OAIlB1D,EAAKyC,MAAQ,CACXkB,QAAO,OAAAb,OAASW,EAAT,KAAAX,OAAoBY,IAE7B1D,EAAKW,WAA6BiD,IAArB5D,EAAKc,MAAMH,MAAsB,IAAMX,EAAKc,MAAMH,MAC/DX,EAAK6D,UAA2BD,IAApB5D,EAAKc,MAAM+C,KAAqB,OAAS7D,EAAKc,MAAM+C,KAR9C7D,wEAWX,IACAyC,EAAwCvC,KAAxCuC,MAAO9B,EAAiCT,KAAjCS,MAAOkD,EAA0B3D,KAA1B2D,KAAcF,EAAYzD,KAApBuC,MAAQkB,QAEnC,OACEP,EAAA,qBACEzC,MAAOA,EAAQ,KACfC,OAAQD,EAAQ,KAChB8B,MAAOA,EACPkB,QAASA,EACTG,MAAM,6BACNT,UAAS,QAAAP,OAAU5C,KAAKY,MAAMuC,WAAa,IAC3CU,WAAW,gCACXX,EAAA,mBAAGS,KAAMA,GAAO3D,KAAKY,MAAMkD,IAA3B,IACEZ,EAAA,sBAAM1E,EAAGwB,KAAKY,MAAMkD,IAAKH,KAAK,GAAGI,SAAS,qBA1BdX,aCDzBY,EAAb,SAAAA,IAAAvE,OAAAM,EAAA,EAAAN,CAAAO,KAAAgE,IAAaA,EAEJC,UAAY,skFAFRD,EAGJE,oBAAsB,sNAHlBF,EAKJG,WAAa,k8HALTH,EAMJI,oBAAsB,uWANlBJ,EAQJK,UAAY,syNARRL,EASJM,mBAAqB,gbATjBN,EAWJO,aAAe,oiIAXXP,EAaJQ,IAAM,k3EAbFR,EAeJS,MAAQ,u/GAfJT,EAiBJU,MAAQ,suCCbIC,cAEnB,SAAAA,EAAY9E,GAAQ,IAAAC,EAAAL,OAAAM,EAAA,EAAAN,CAAAO,KAAA2E,GAAA,IAAAhE,GAClBb,EAAAL,OAAAQ,EAAA,EAAAR,CAAAO,KAAAP,OAAAS,EAAA,EAAAT,CAAAkF,GAAAxE,KAAAH,KAAMH,KAE4Be,MAA3BgE,EAHWjE,EAGXiE,SAAUC,EAHClE,EAGDkE,SAHC,OAIlB/E,EAAKvD,KAAO,GAEZuD,EAAKW,MAAQ,IACbX,EAAKY,OAAS,IACdZ,EAAKgF,QAAU,CAACzE,IAAK,EAAGC,MAAkB,EAAXsE,EAAcrE,OAAQsE,EAAUrE,KAAiB,EAAXoE,GACrE9E,EAAKiF,WAAajF,EAAKW,MAAQX,EAAKgF,QAAQtE,KAAOV,EAAKgF,QAAQxE,MAChER,EAAKkF,YAAclF,EAAKY,OAASZ,EAAKgF,QAAQzE,IAAMP,EAAKgF,QAAQvE,OAV/CT,+EAaJ,IACPW,EAAmDT,KAAnDS,MAAOC,EAA4CV,KAA5CU,OAAQoE,EAAoC9E,KAApC8E,QAASC,EAA2B/E,KAA3B+E,WAAYC,EAAehF,KAAfgF,YAD7BC,EAEmBjF,KAAKY,MAA/BsE,EAFOD,EAEPC,WAAYC,EAFLF,EAEKE,WAEbpD,EAAMzD,IAAU,sBACnB2D,OAAO,OACPC,KAAK,QAASzB,GACdyB,KAAK,SAAUxB,GAElBV,KAAKmC,UAAYJ,EAAIE,OAAO,KACzBC,KAAK,QAAS6C,GACd7C,KAAK,SAAU8C,GACf9C,KAAK,QAAS,cACdA,KAAK,YAJS,aAAAU,OAIiBkC,EAAQtE,KAJzB,KAAAoC,OAIiCkC,EAAQzE,IAJzC,MAQjB,IAFA,IAAM+E,EAAkBpF,KAAKmC,UAAUF,OAAO,KAC3CC,KAAK,QAAS,oBACR7D,EAAI,EAAGA,EAAI,GAAIA,IACtB+G,EAAgBnD,OAAO,QACpBC,KAAK,IAAK8B,EAAMU,OAChBxC,KAAK,OAAQ,WACbA,KAAK,YAHR,aAAAU,OAGkC5C,KAAKqF,iBAAiB,EAAGN,GAH3D,KAAAnC,OAG0E5C,KAAKqF,iBAAiB,EAAGL,GAHnG,MAMFhF,KAAKmC,UAAUF,OAAO,KACnBC,KAAK,QAAS,oBACdA,KAAK,YAFR,aAAAU,OAEkCmC,EAAa,EAAIG,EAAa,EAFhE,KAAAtC,OAEqEoC,EAAc,EAAIG,EAFvF,MAIAnF,KAAKmC,UAAUF,OAAO,KACnBC,KAAK,QAAS,8DAGC,IAAAoD,EAC4CtF,KAAKY,MAA5D3B,EADWqG,EACXrG,KAAMsG,EADKD,EACLC,UAAWC,EADNF,EACME,oBAAqBC,EAD3BH,EAC2BG,cAEvCC,EAAc1F,KAAKmC,UAAUE,UAAU,qBAC7CqD,EAAYrD,UAAU,QAAQI,SAC9BiD,EACGzD,OAAO,QACPC,KAAK,QAAS,cACdA,KAAK,IAAKsD,GACVtD,KAAK,OAAQ,SAChBwD,EACGzD,OAAO,QACPC,KAAK,QAASjD,GACdiD,KAAK,IAAKqD,GACVrD,KAAK,OAAQuD,gDAGG,IAAAE,EACuB3F,KAAKY,MAAxCgF,EADYD,EACZC,QAAShB,EADGe,EACHf,SAAUiB,EADPF,EACOE,aAEpBC,EAAe9F,KAAKmC,UAAUE,UAAU,mBAC3CA,UAAU,KACV9F,KAAKyD,KAAKzD,MAEbuJ,EAAaxD,QACV3C,OAAO,SAACnB,EAAGH,GAAJ,OAAUA,EAAIwH,IACrB5D,OAAO,KACPC,KAAK,YAAa,SAAA1D,GAAC,mBAAAoE,OAAiBpE,EAAEqD,EAAnB,KAAAe,OAAwBpE,EAAEsD,EAA1B,OACnBI,KAAK,QAAS,SAAA1D,GAAC,MAAI,YAAcA,EAAEuH,QACnC9D,OAAO,QACPC,KAAK,OAAQ,SAAA1D,GAAC,OAAIA,EAAEmF,OACpBzB,KAAK,IAAK0D,GAEbE,EAAaE,OAAOvD,SAEpBzC,KAAKmC,UAAUE,UAAU,QACtB4D,aACAC,KAAK5H,KACLkE,GAAG,QAAS,SAAS2D,IACpB7H,IAAU0B,MACPoG,SAAS,SAAA5H,GAAC,OAAIA,EAAE6H,iBAChBnE,KAAK,YAAa,SAAA1D,GAAC,mBAAAoE,OAAiBpE,EAAEqD,EAAI+C,EAAvB,KAAAhC,OAAmCpE,EAAEsD,EAArC,kBACnBmE,aACAG,SAAS,KACTlE,KAAK,YAAa,SAAA1D,GAAC,mBAAAoE,OAAiBpE,EAAEqD,EAAI+C,EAAvB,KAAAhC,OAAmCpE,EAAEsD,EAArC,mBACnBmE,aACAG,SAAS,SAAA5H,GAAC,OAAIA,EAAE6H,iBAChBnE,KAAK,YAAa,SAAA1D,GAAC,mBAAAoE,OAAiBpE,EAAEqD,EAAI+C,EAAvB,KAAAhC,OAAmCpE,EAAEsD,EAArC,mBACnBmE,aACAG,SAAS,KACTlE,KAAK,YAAa,SAAA1D,GAAC,mBAAAoE,OAAiBpE,EAAEqD,EAAI+C,EAAvB,KAAAhC,OAAmCpE,EAAEsD,EAArC,kBACnBmE,aACAzD,GAAG,QAAS2D,2CAIP,IACLpB,EAA2B/E,KAA3B+E,WAAYC,EAAehF,KAAfgF,YADPsB,EAEwBtG,KAAKY,MAAlC2F,EAFKD,EAELC,YAAaV,EAFRS,EAEQT,aAEpB7F,KAAKzD,KAAO,GAEZ,IAAK,IAAI8B,EAAI,EAAGA,EAAIwH,EAAcxH,IAChC2B,KAAKzD,KAAK8C,KAAK,CACbwC,EAAGR,KAAKmF,SAAWzB,EACnBjD,EAAGT,KAAKmF,SAAWxB,EACnBrB,KAAM,KAAO,IAAM3D,KAAKqF,iBAAiB,EAAG,GAAK,KACjDU,MAAOQ,EACPF,eAAgBrG,KAAKqF,iBAAiB,IAAM,gDAKjCoB,EAAOC,GACtB,OAAOrF,KAAKsF,MAAMtF,KAAKmF,UAAYE,EAAMD,GAASA,gDAIlDzG,KAAK4G,0DAIL5G,KAAK6G,6DAIL7G,KAAK4G,cACL5G,KAAK8G,qBACL9G,KAAK+G,qDAIL,OACE7D,EAAA,qBAAKC,UAAU,6BA5I0BC,aCA1B4D,cAEnB,SAAAA,EAAYnH,GAAQ,IAAAC,EAAA,OAAAL,OAAAM,EAAA,EAAAN,CAAAO,KAAAgH,IAClBlH,EAAAL,OAAAQ,EAAA,EAAAR,CAAAO,KAAAP,OAAAS,EAAA,EAAAT,CAAAuH,GAAA7G,KAAAH,KAAMH,KAEDoH,MAAQ,CACXC,SAAU,GACVC,UAAW,EACX5B,UAAWvB,EAAMC,UACjBuB,oBAAqBxB,EAAME,oBAC3BuB,cAAe,WARC3F,wEAYX,IAAAsH,EAAApH,KAAAqH,EACsErH,KAAKiH,MAA3EC,EADAG,EACAH,SAAUC,EADVE,EACUF,UAAW5B,EADrB8B,EACqB9B,UAAWC,EADhC6B,EACgC7B,oBAAqBC,EADrD4B,EACqD5B,cAC5D,OACEvC,EAAA,qBAAKC,UAAU,gBACbD,EAAA,gDAEAA,EAAA,qBAAKC,UAAU,4BACbD,EAAA,cAACoE,EAAD,CAAUnE,UAAU,YACVW,IAAKE,EAAMC,UAAWxD,MAAO,GAAI8C,QAAS,IAAKC,SAAU,IACzDG,KAAM,YAChBT,EAAA,cAACoE,EAAD,CAAUnE,UAAU,aACVW,IAAKE,EAAMG,WAAY1D,MAAO,IAAK8C,QAAS,IAAKC,SAAU,IAC3DG,KAAM,YAChBT,EAAA,cAACoE,EAAD,CAAUnE,UAAU,YACVW,IAAKE,EAAMK,UAAW5D,MAAO,IAAK8C,QAAS,IAAKC,SAAU,IAC1DG,KAAM,aAGlBT,EAAA,qBAAKC,UAAU,+BACbD,EAAA,yBACEA,EAAA,2CACAA,EAAA,yCAEFA,EAAA,yBACEA,EAAA,6CACAA,EAAA,qDAEFA,EAAA,yBACEA,EAAA,yCACAA,EAAA,+CAIJA,EAAA,qBAAKC,UAAU,sBACbD,EAAA,cAACqE,EAAD,CAAmBtI,KAAK,YAAYsH,YAAY,MAC7BX,QAAS5B,EAAMQ,IACfqB,aAAyB,EAAXqB,EAActC,SAAU,GAAIC,SAAU,GACpDU,UAAWA,EACXC,oBAAqBA,EACrBN,WAAY,IAAKC,WAAY,GAAIM,cAAeA,IAEnEvC,EAAA,qBAAKC,UAAU,mBACbD,EAAA,uBAAIlD,KAAKwH,mBAAmBL,KAG9BjE,EAAA,qBAAKC,UAAU,oBACbD,EAAA,uBAAOuE,GAAG,kBAAkBC,KAAK,QAC1BnI,IAAK,EAAGC,IAAK,GACb/B,MAAOyJ,EACPS,KAAK,YACLC,SAAU,kBAAMR,EAAKS,yBAC5B3E,EAAA,0BAAUuE,GAAG,aACXvE,EAAA,wBAAQzF,MAAM,OACdyF,EAAA,wBAAQzF,MAAM,QAEhByF,EAAA,qBAAKC,UAAU,eACbD,EAAA,gCACAA,EAAA,gCACAA,EAAA,gFASOiE,GAAW,IACrBD,EAAYlH,KAAKiH,MAAjBC,SACP,OAAQC,GACN,KAAK,EACH,mCAAAvE,OAAoCsE,EAApC,sBAAAtE,OAAyE,EAAXsE,EAA9D,oFAAAtE,OAA4J,EAAXsE,EAAjJ,6BACF,KAAK,EACH,0GAAAtE,OAAkGsE,EAAlG,8BAAAtE,OAAkJ,EAAXsE,EAAvI,4BAAAtE,OAAsL,EAAXsE,EAA3K,6BACF,KAAK,EACH,oHAAAtE,OAAqHsE,EAArH,2FACF,QACE,MAAO,mDAKX,IAAMY,EAAWC,SAASC,eAAe,mBAAmBC,cACxDH,GAAY,GACd9H,KAAKkI,SAAS,CACZf,UAAW,EACX5B,UAAWvB,EAAMC,UACjBuB,oBAAqBxB,EAAME,oBAC3BuB,cAAe,YAERqC,EAAW,IAAMA,EAAW,GACrC9H,KAAKkI,SAAS,CACZf,UAAW,EACX5B,UAAWvB,EAAMG,WACjBqB,oBAAqBxB,EAAMI,oBAC3BqB,cAAe,YAGjBzF,KAAKkI,SAAS,CACZf,UAAW,EACX5B,UAAWvB,EAAMK,UACjBmB,oBAAqBxB,EAAMM,mBAC3BmB,cAAe,YAGnBzF,KAAKkI,SAAS,CAAChB,SAAUY,WAvHa1E,aCFrB+E,cAEnB,SAAAA,EAAYvH,GAAO,IAAAd,EAAA,OAAAL,OAAAM,EAAA,EAAAN,CAAAO,KAAAmI,IACjBrI,EAAAL,OAAAQ,EAAA,EAAAR,CAAAO,KAAAP,OAAAS,EAAA,EAAAT,CAAA0I,GAAAhI,KAAAH,KAAMY,KAEDqG,MAAQ,CACXmB,WAAYxH,EAAMwH,YAEpBtI,EAAKuI,WAAa,IAClBvI,EAAKwI,YAAc,IAEnBxI,EAAKyI,cAAuE,IAAvDlH,KAAKC,MAAMhD,IAAOwB,EAAKc,MAAMrE,KAAM,SAAAiC,GAAC,OAAIA,EAAEL,YAC/D2B,EAAK0I,UAAY,CACfC,MAAO,IACPC,MAAO,KACPC,MAAO,IACPC,QAAS,MAdM9I,2EAqBP,IACHvD,EAAQyD,KAAKY,MAAbrE,KACA+L,EAA2BtI,KAA3BsI,YAAaD,EAAcrI,KAAdqI,WAIhBjI,EACG,GADHA,EAEK,GAFLA,EAGM,GAHNA,EAII,GAGFyI,EAASvK,MACZ6C,OAAO5E,EAAKuM,IAAI,SAAAtK,GAAC,OAAIA,EAAEd,SACvBqL,WAAW,CAAC,EAAGV,IAEZW,EAAS1K,MACZ6C,OAAO,CAAC,EAAGnB,KAAKuI,gBAChBQ,WAAW,CAACT,EAAa,IAEtBzG,EAAIvD,MACP6C,OAAO,CAAC,EAAG5E,EAAKG,SAChBqM,WAAW,CAAC,EAAGV,IAEZrH,EAAa1C,MAChB2C,MAAM,CAAC,UAAW,UAAW,YAE1Bc,EAAMzD,IAAU,oBACnB2D,OAAO,OACPC,KAAK,QAASmG,EAAajI,EAAcA,GACzC8B,KAAK,SAAUoG,EAAclI,EAAaA,GAEvC6I,EAAS3K,MACZ4K,OAAO,SAAC1K,EAAGH,GAAJ,MAAU,CAAC,CAACwD,EAAExD,GAAK8K,GAAa,GAAI,CAACtH,EAAExD,GAAKwD,EAAE,GAAKsH,GAAab,MACvE9F,GAAG,QA8EN,WACE,IAAKlE,IAAS8K,YAAa,OAC3B,GAAkC,UAA9B9K,IAAS8K,YAAY1B,KAAkB,OAC3C,IAAKpJ,IAAS+K,UAAW,OAEzB,IAAMC,EAAKhL,IAAS+K,UAAUP,IAAIE,EAAOjG,QACnCvE,EAAIF,IAAU0B,MAAMgC,OAAO,cAEjCsH,EAAG,GAAK,EAAI9K,EAAE+K,QAAQ9L,MAAQ6L,EAAG,GAAK9K,EAAE+K,QAAQ9L,MAAQ,IAcxD+L,EACGrJ,KAAK8I,EAAOQ,KAAM,SAAAjL,GAAC,MAAI,CAACA,EAAEf,MAAO,GAAGqL,IAAIE,KACxC3G,UAAU,+CACVH,KAAK,IAAK,SAAA1D,GAAC,OAAIwK,EAAOxK,EAAEf,SAC3B+L,EAAanH,UAAU,cACpBQ,KAAK,SAAArE,GAAC,OAAIF,IAAU,MAAVA,CAAiBE,EAAEf,SAEhCiM,MA1GClH,GAAG,MA0FN,WACE,IAAKlE,IAAS8K,YAAa,OAC3B,GAAkC,UAA9B9K,IAAS8K,YAAY1B,KAAkB,OACtCpJ,IAAS+K,WACZG,EAAarJ,KAAK8I,EAAOQ,KAAM,SAAAjL,GAAC,MAAI,CAACA,EAAEf,MAAO,GAAGqL,IAAIE,OA5FzDjH,EAAIE,OAAO,QACRA,OAAO,WACPC,KAAK,KAAM,eACXA,KAAK,QAAS,GACdA,KAAK,SAAU,GACfA,KAAK,eAAgB,kBACrBD,OAAO,QACPC,KAAK,QAAS,GACdA,KAAK,SAAU,GACfA,KAAK,YAAa,kBAErBlC,KAAKmC,UAAYJ,EAAIE,OAAO,KACzBC,KAAK,YADS,aAAAU,OACiBxC,EADjB,KAAAwC,OACgCxC,EADhC,MAGjB,IAAMoJ,EAAexJ,KAAKmC,UAAUE,UAAU,QAC3C9F,KAAKA,GACL+F,QACAL,OAAO,KACPC,KAAK,KAAM,SAAC1D,EAAGH,GAAJ,MAAU,MAAQA,IAC7B6D,KAAK,QAAS,OACd/B,KAAK8I,GACL9I,KAAK8I,EAAOQ,KAAM,SAAAjL,GAAC,MAAI,CAACA,EAAEf,MAAO,GAAGqL,IAAIE,KAE3ChJ,KAAKmC,UAAUE,UAAU,cACtB9F,KAAKA,GACL2F,KAAK,OAAQ,SAAC1D,EAAGH,GAAJ,OAAU2C,EAAW3C,KAClC6D,KAAK,eAAgB,GACrBA,KAAK,SAAU,SAAA1D,GAAC,OAAI8J,EAAcU,EAAOxK,EAAEf,SAC3CyE,KAAK,IAAK,SAAA1D,GAAC,OAAIwK,EAAOxK,EAAEf,SAE3B+L,EAAavH,OAAO,QACjBC,KAAK,QAAS,cACdA,KAAK,QAAS2G,EAAOc,YAlEV,IAmEXzH,KAAK,SAAU,GACfA,KAAK,IAAK,SAAA1D,GAAC,OAAIwK,EAAOxK,EAAEf,SACxByE,KAAK,IAAK,SAAC1D,EAAGH,GAAJ,OAAUwD,EAAExD,GAAK8K,KAC3BjH,KAAK,OAAQ,qBAEhBsH,EAAavH,OAAO,QACjBC,KAAK,cAAe,UACpBA,KAAK,QAAS,aACdA,KAAK,IAAK,SAAA1D,GAAC,OAAIwK,EAAOxK,EAAEf,SACxByE,KAAK,IAAK,SAAC1D,EAAGH,GAAJ,OAAUwD,EAAExD,GAAKwD,EAAE,MAC7BK,KAAK,MAAO,GACZK,MAAM,OAAQ,gBACdM,KAAK,SAAArE,GAAC,OAAIF,IAAU,MAAVA,CAAiBE,EAAEf,SAEhC+L,EAAavH,OAAO,QACjBC,KAAK,cAAe,UACpBA,KAAK,QAAS,UACdA,KAAK,IAAKoG,GACVpG,KAAK,IAAK,SAAC1D,EAAGH,GAAJ,OAAUwD,EAAExD,GAAKwD,EAAE,MAC7BK,KAAK,KAAM,IACXA,KAAK,OAAQ,gBACbW,KAAK,SAACrE,EAAGH,GAAJ,OAAU9B,EAAK8B,GAAGX,QAE1B,IAAMkM,EAAWJ,EAAavH,OAAO,QAClCC,KAAK,QAAS,kCACdA,KAAK,cAAe,OACpBA,KAAK,YAAa,mBAClBA,KAAK,IAAK,SAAA1D,GAAC,OAAIwK,EAAOxK,EAAEf,SACxByE,KAAK,IAAK,SAAC1D,EAAGH,GAAJ,OAAUwD,EAAExD,KACtB6D,KAAK,OAAQ,gBA6ChB,SAASwH,IACPF,EAAanH,UAAU,cACpBH,KAAK,SAAU,IA7CpB0H,EAAS3H,OAAO,SACbC,KAAK,IAAK,SAAC1D,EAAGH,GAAJ,OAAUwD,EAAExD,KACtBwE,KAAK,SACR+G,EAAS3H,OAAO,SACbC,KAAK,IAAK,SAAC1D,EAAGH,GAAJ,OAAUwD,EAAExD,KACtB6D,KAAK,KAAM,IACXW,KAAK,WAER7C,KAAK6J,2BACLH,uDAwCyB,IAClBrB,EAA2BrI,KAA3BqI,WAAYC,EAAetI,KAAfsI,YAEbU,EAAS1K,MACZ6C,OAAO,CAAC,EAAGnB,KAAKuI,gBAChBQ,WAAW,CAACT,EAAa,IAEtBwB,EAAuB9J,KAAKmC,UAAUF,OAAO,KAChDC,KAAK,QAAS,yBACdA,KAAK,UAAW,GAChB3F,KAAKyD,KAAKY,MAAMrE,MAChB2F,KAAK,YAAa,SAAA1D,GAAC,wBAAAoE,OAAsBoG,EAAOxK,EAAEf,OAAS,GAAxC,OACnByE,KAAK,KAAMmG,EAAa,GACxBnG,KAAK,iBAAkB,QAE1B4H,EAAqB7H,OAAO,QACzBC,KAAK,QAAS,KACdA,KAAK,SAAU,IACfA,KAAK,OAAQ,WAEhB,IAAM6H,EAAgBD,EAAqB7H,OAAO,QAC/CC,KAAK,IAAK,GACVA,KAAK,IAAK,IACVA,KAAK,OAAQ,SAChB6H,EAAc9H,OAAO,SAClBY,KAAK,qDACRkH,EAAc9H,OAAO,SAClBY,KAAK,2CACLX,KAAK,KAAM,IACXA,KAAK,IAAK,qDAGW,IACjBC,EAAqCnC,KAArCmC,UAAWmG,EAA0BtI,KAA1BsI,YAAaE,EAAaxI,KAAbwI,UAEzBQ,EAAS1K,MACZ6C,OAAO,CAAC,EAAGnB,KAAKuI,gBAChBQ,WAAW,CAACT,EAAa,IAEtBwB,EAAuB3H,EAAUE,UAAU,0BAEjDyH,EAAqB7D,aAClBG,SAASoC,EAAUC,OACnBvG,KAAK,YAAa,SAAA1D,GAAC,wBAAAoE,OAAsBoG,EAAOxK,EAAEP,SAAW,GAA1C,OACnBgI,aACAG,SAASoC,EAAUE,OACnBxG,KAAK,YAAa,SAAA1D,GAAC,wBAAAoE,OAAsBoG,EAAOxK,EAAEN,SAAW,GAA1C,OACnB+H,aACAG,SAASoC,EAAUG,OACnBzG,KAAK,YAAa,SAAA1D,GAAC,wBAAAoE,OAAsBoG,EAAOxK,EAAEf,OAAS,GAAxC,OACnBwI,aACA+D,MAAM,KACN5D,SAAS,MACTlE,KAAK,YAAa,sBAErB4H,EAAqB9H,OAAO,QACzBiE,aACA/D,KAAK,OAAQ,WACb+D,aACA+D,MAAMxB,EAAUI,SAChBxC,SAAS,MACTlE,KAAK,OAAQ,eAEF4H,EAAqB7H,OAAO,WACvCC,KAAK,SAAU,gDACfA,KAAK,YAAa,iCAClBA,KAAK,OAAQ,SACbA,KAAK,SAAU,QACfA,KAAK,eAAgB,GAElB+D,aACH+D,MAAMxB,EAAUI,QAAU,KAC1BxC,SAAS,KACTlE,KAAK,UAAW,yCAGP,IAAA+H,EAAAjK,KACLmC,EAAqCnC,KAArCmC,UAAWmG,EAA0BtI,KAA1BsI,YAAaE,EAAaxI,KAAbwI,UAEzBQ,EAAS1K,MACZ6C,OAAO,CAAC,EAAGnB,KAAKuI,gBAChBQ,WAAW,CAACT,EAAa,IAE5BnG,EAAUE,UAAU,cACjB4D,aACAG,SAASoC,EAAUC,OACnBvG,KAAK,SAAU,SAAA1D,GAAC,OAAI8J,EAAcU,EAAOxK,EAAEP,WAC3CiE,KAAK,IAAK,SAAA1D,GAAC,OAAIwK,EAAOxK,EAAEP,WACxBgI,aACAG,SAASoC,EAAUE,OACnBxG,KAAK,SAAU,SAAA1D,GAAC,OAAI8J,EAAcU,EAAOxK,EAAEN,WAC3CgE,KAAK,IAAK,SAAA1D,GAAC,OAAIwK,EAAOxK,EAAEN,WACxB+H,aACAG,SAASoC,EAAUG,OACnBzG,KAAK,SAAU,SAAA1D,GAAC,OAAI8J,EAAcU,EAAOxK,EAAEf,SAC3CyE,KAAK,IAAK,SAAA1D,GAAC,OAAIwK,EAAOxK,EAAEf,SAE3B0E,EAAUE,UAAU,cACjB4D,aACAG,SAASoC,EAAUC,OACnBvG,KAAK,IAAK,SAAA1D,GAAC,OAAIwK,EAAOxK,EAAEP,WACxBuE,GAAG,QAAS,WAAY,IAAA4E,EAAApH,KACvB1B,IAAU0B,MACPkK,MAAM,OAAQ,SAAA1L,GACb,IAAM2L,EAAO7L,IAAU8I,GACjB/I,EAAIC,IAAqB6L,EAAKtH,OAAOuH,QAAQ,KAAM,IAAM,IAAK5L,EAAEP,SACtE,OAAO,SAAAoM,GAAC,OAAIF,EAAKtH,KAAKvE,IAAU,MAAVA,CAAiBD,EAAEgM,UAG9CpE,aACAG,SAASoC,EAAUE,OACnBxG,KAAK,IAAK,SAAA1D,GAAC,OAAIwK,EAAOxK,EAAEN,WACxBsE,GAAG,QAAS,WAAY,IAAA8H,EAAAtK,KACvB1B,IAAU0B,MACPkK,MAAM,OAAQ,SAAA1L,GACb,IAAM2L,EAAO7L,IAAUgM,GACjBjM,EAAIC,IAAqB6L,EAAKtH,OAAOuH,QAAQ,KAAM,IAAM,IAAK5L,EAAEN,SACtE,OAAO,SAAAmM,GAAC,OAAIF,EAAKtH,KAAKvE,IAAU,MAAVA,CAAiBD,EAAEgM,UAG9CpE,aACAG,SAASoC,EAAUG,OACnBzG,KAAK,IAAK,SAAA1D,GAAC,OAAIwK,EAAOxK,EAAEf,SACxB+E,GAAG,QAAS,WAAY,IAAA+H,EAAAvK,KACvB1B,IAAU0B,MACPkK,MAAM,OAAQ,SAAA1L,GACb,IAAM2L,EAAO7L,IAAUiM,GACjBlM,EAAIC,IAAqB6L,EAAKtH,OAAOuH,QAAQ,KAAM,IAAM,IAAK5L,EAAEf,OACtE,OAAO,SAAA4M,GAAC,OAAIF,EAAKtH,KAAKvE,IAAU,MAAVA,CAAiBD,EAAEgM,UAIjDrK,KAAKmC,UAAUE,UAAU,sBACtBmI,QAAQ,iBAAiB,GACzBvE,aACA/D,KAAK,UAAW,GAChBkE,SAASoC,EAAUC,OACnBvG,KAAK,IAAK,SAAA1D,GAAC,OAAIwK,EAAOxK,EAAEP,WACxBgI,aACAG,SAASoC,EAAUE,OACnBxG,KAAK,IAAK,SAAA1D,GAAC,OAAIwK,EAAOxK,EAAEN,WACxB+H,aACAG,SAASoC,EAAUG,OACnBzG,KAAK,IAAK,SAAA1D,GAAC,OAAIwK,EAAOxK,EAAEf,SACxByE,KAAK,UAAW,GAEnBlC,KAAKmC,UAAUE,UAAU,eACtBmI,QAAQ,iBAAiB,GACzBvE,aACA/D,KAAK,UAAW,GAChBkE,SAASoC,EAAUC,OACnBvG,KAAK,IAAK,SAAA1D,GAAC,OAAIwK,EAAOxK,EAAEP,WACxBgI,aACAG,SAASoC,EAAUE,OACnBxG,KAAK,IAAK,SAAA1D,GAAC,OAAIwK,EAAOxK,EAAEN,WACxB+H,aACAG,SAASoC,EAAUG,OACnBzG,KAAK,IAAK,SAAA1D,GAAC,OAAIwK,EAAOxK,EAAEf,SACxByE,KAAK,UAAW,GAEnBuI,WAAW,WACTR,EAAK9H,UAAUE,UAAU,mCACtBmI,QAAQ,iBAAiB,IAC3BhC,EAAUI,8CAGF,IACJrM,EAAQyD,KAAKY,MAAbrE,KAGDyM,EAAS1K,MACZ6C,OAAO,CAAC,EAAGnB,KAAKuI,gBAChBQ,WAAW,CAJI,IAIU,IAE5B/I,KAAKmC,UAAUE,UAAU,cACtB9F,KAAKA,GACL0J,aACAG,SAAS,KACTlE,KAAK,SAAU,SAAA1D,GAAC,OAVD,IAUmBwK,EAAOxK,EAAEL,YAC3C+D,KAAK,IAAK,SAAA1D,GAAC,OAAIwK,EAAOxK,EAAEL,YAE3B6B,KAAKmC,UAAUE,UAAU,cACtB4D,aACAG,SAAS,KACTlE,KAAK,IAAK,SAAA1D,GAAC,OAAIwK,EAAOxK,EAAEL,YACxBqE,GAAG,QAAS,WAAY,IAAAkI,EAAA1K,KACvB1B,IAAU0B,MACPkK,MAAM,OAAQ,SAAA1L,GACb,IAAM2L,EAAO7L,IAAUoM,GACjBrM,EAAIC,IAAqB6L,EAAKtH,OAAOuH,QAAQ,KAAM,IAAM,IAAK5L,EAAEL,UACtE,OAAO,SAAAkM,GAAC,OAAIF,EAAKtH,KAAKvE,IAAU,MAAVA,CAAiBD,EAAEgM,UAIjD,IAAMT,EAAW5J,KAAKmC,UAAUE,UAAU,mCACvCmI,QAAQ,gBAAgB,GACxBA,QAAQ,iBAAiB,GACzBtI,KAAK,UAAW,GAEnB0H,EAASvH,UAAU,SAASI,SAC5BmH,EAAS3H,OAAO,SACbC,KAAK,KAAM,GACXW,KAAK,SAAArE,GAAC,OAAIF,IAAU,MAAVA,CAAiBE,EAAEf,SAEhCuC,KAAKmC,UAAUE,UAAU,KAAKH,KAAK,iBAAkB,oDAIrDlC,KAAKiD,yDAIL,IAAMmF,EAAapI,KAAKY,MAAMwH,WACxBuC,EAAc3K,KAAKY,MAAM+J,YAE3BvC,GAAYpI,KAAKoI,cAChBA,GAAcuC,IACjB3K,KAAK4K,cACL5K,KAAK6K,4DAKP,OACE3H,EAAA,qBAAKC,UAAU,qBACbD,EAAA,qBAAKC,UAAU,4BA/YwBC,8BCE1B0H,cAEnB,SAAAA,EAAYlK,GAAO,IAAAd,EAAA,OAAAL,OAAAM,EAAA,EAAAN,CAAAO,KAAA8K,IACjBhL,EAAAL,OAAAQ,EAAA,EAAAR,CAAAO,KAAAP,OAAAS,EAAA,EAAAT,CAAAqL,GAAA3K,KAAAH,KAAMY,KAkBRmK,aAAe,SAAAC,GACb,IAAMC,EAAYD,EAAEE,OAAOC,iBAAiBF,UACtCG,EAAYtL,EAAKuL,aAAaC,QAAQF,UACtCG,EAAgBzL,EAAKuL,aAAaC,QAAQE,aAG5CP,EAFiBG,EAA4B,IAAhBG,EAAuBE,OAAOzG,aAE/BiG,EAAYG,EAAYG,EAAgB,GACvC,IAA3BzL,EAAKmH,MAAM0D,aACb7K,EAAKoI,SAAS,CAACyC,aAAa,KAGC,IAA3B7K,EAAKmH,MAAM0D,aACb7K,EAAKoI,SAAS,CAACyC,aAAa,KA5BhC7K,EAAKmH,MAAQ,CACXyE,aAAa,EACbtD,YAAY,EACZuC,aAAa,GAEf7K,EAAKuL,aAAejI,cARHtD,mFAYjB2L,OAAOE,iBAAiB,SAAU3L,KAAK+K,6DAIvCU,OAAOG,oBAAoB,SAAU5L,KAAK+K,+CAoBnC,IAAA3D,EAAApH,KACDzD,EAAOD,EAAYuP,YAAY7L,KAAKY,MAAMrE,MAC1C6L,EAAapI,KAAKiH,MAAMmB,WAE9B,OACElF,EAAA,qBAAKC,UAAU,WAAW2I,IAAK9L,KAAKqL,aAAcU,SAAU/L,KAAK+K,cAC/D7H,EAAA,gCAEAA,EAAA,kJAGAA,EAAA,yBACEA,EAAA,cAAC8I,EAAD,CAAmB5D,WAAYA,EACZuC,YAAa3K,KAAKiH,MAAM0D,YACxBpO,KAAMA,IAEzB2G,EAAA,qBAAKC,UAAU,oBACbD,EAAA,mBAAGC,UAAWiF,EAAa,OAAS,QAApC,6SAIAlF,EAAA,cAAC+I,EAAAC,EAAD,CAAQ/I,UAAYiF,EAA8B,OAAjB,eACzB+D,QAAS,kBAAM/E,EAAKc,SAAS,CAACE,YAAY,KAC1CgE,QAAQ,QAFhB,4BA3D0BhJ,aCDjBiJ,cAEnB,SAAAA,EAAYxM,GAAQ,IAAAC,EAAA,OAAAL,OAAAM,EAAA,EAAAN,CAAAO,KAAAqM,IAClBvM,EAAAL,OAAAQ,EAAA,EAAAR,CAAAO,KAAAP,OAAAS,EAAA,EAAAT,CAAA4M,GAAAlM,KAAAH,KAAMH,KAEDY,MAAQ,IACbX,EAAKY,OAAS,IACdZ,EAAKM,OAAS,CAACC,IAAK,GAAIE,OAAQ,GAAIC,KAAM,GAAIF,MAAO,IACrDR,EAAKkF,YAAclF,EAAKY,OAASZ,EAAKM,OAAOC,IAAMP,EAAKM,OAAOG,OAC/DT,EAAKiF,WAAajF,EAAKW,MAAQX,EAAKM,OAAOI,KAAOV,EAAKM,OAAOE,MAC9DR,EAAKe,SAAWvE,EAAYgQ,cARVxM,sEAcb,IACEiF,EAAkD/E,KAAlD+E,WAAYC,EAAsChF,KAAtCgF,YAAavE,EAAyBT,KAAzBS,MAAOC,EAAkBV,KAAlBU,OAAQN,EAAUJ,KAAVI,OACxC7D,EAAQyD,KAAKY,MAAbrE,KAEDmD,EAAOpD,EAAYiQ,qBAAqBhQ,GAExCiQ,EADQlO,MAAWoB,KAAKA,EACf+M,CAAMlQ,GACfyE,EAAa1C,MAChB2C,MAAM,CAAC,UAAW,UAAW,UAAW,UACvC,UAAW,UACX,UAAW,YAETC,EAAS5C,MACZ6C,OAAO7C,IAAU/B,EAAM,SAAAiC,GAAC,OAAIA,EAAET,QAC9BkD,MAAM,CAAC,EAAG8D,IAEP3D,EAAS9C,MACZ6C,OAAO,CAAC,EAAG7C,IAAOkO,EAAQ,SAAAA,GAAM,OAAIlO,IAAOkO,EAAQ,SAAAhO,GAAC,OAAIA,EAAE,SAC1DyC,MAAM,CAAC+D,EAAa,IAEjB0H,EAAOpO,MACVuD,EAAE,SAAArD,GAAC,OAAI0C,EAAO1C,EAAEjC,KAAKwB,QACrB4O,GAAG,SAAAnO,GAAC,OAAI4C,EAAO5C,EAAE,MACjBoO,GAAG,SAAApO,GAAC,OAAI4C,EAAO5C,EAAE,MAEduD,EAAMzD,IAAU,+BACnB0D,OAAO,oBACPC,OAAO,OACPC,KAAK,QAASzB,GACdyB,KAAK,SAAUxB,GAElBV,KAAKmC,UAAYJ,EAAIE,OAAO,KACzBC,KAAK,QAAS,QACdA,KAAK,YAFS,aAAAU,OAEiBxC,EAAOI,KAFxB,MAAAoC,OAEiCxC,EAAOC,IAFxC,MAKjBL,KAAKmC,UAAUF,OAAO,KAAKC,KAAK,QAAS,SACtCG,UAAU,SACV9F,KAAKiQ,GACLlK,QAAQL,OAAO,QACfC,KAAK,QAAS,QACdA,KAAK,OAAQ,SAAA1D,GAAC,OAAIwC,EAAWxC,EAAEqO,OAC/B3K,KAAK,IAAKwK,GAEb1M,KAAK8M,SAAS5L,EAAQE,GACtBpB,KAAK+M,WAAWrN,EAAMsB,oCAGfE,EAAQE,GAAQ,IAChB2D,EAA2B/E,KAA3B+E,WAAYC,EAAehF,KAAfgF,YAEbzD,EAAQjD,MACX0O,MAAM9L,GACNS,WAAWrD,IAAU,KAElBmD,EAAQnD,MACX0O,MAAM5L,GAGTpB,KAAKmC,UAAUF,OAAO,KACnBC,KAAK,QAAS,UACdA,KAAK,YAFR,gBAAAU,OAEqCoC,EAFrC,MAGG7E,KAAKoB,GAGRjD,IAAU,YACP2D,OAAO,QACPC,KAAK,QAAS,UACdA,KAAK,IAAK6C,EAAa,GACvB7C,KAAK,IAAK,IACVW,KAAK,QACLN,MAAM,cAAe,UAGxBvC,KAAKmC,UAAUF,OAAO,KACnBC,KAAK,QAAS,UACd/B,KAAKsB,GAGRnD,IAAU,WACP2D,OAAO,QACPC,KAAK,QAAS,UACdA,KAAK,KAAM8C,EAAc,GACzB9C,KAAK,KAAM,IACXA,KAAK,YAAa,eAClBW,KAAK,sBACLX,KAAK,cAAe,6CAGdxC,EAAMsB,GAAY,IAAAoG,EAAApH,KAKrBiN,EAJa,GAIEvN,EAAKhD,OAHV,EAWVwQ,EANSlN,KAAKmC,UAAUF,OAAO,KAClCC,KAAK,QAAS,UACdA,KAAK,QALY,KAMjBA,KAAK,SAAU+K,GACf/K,KAAK,YAJO,aAAAU,OAImB5C,KAAK+E,WAPnB,IAO8C,GAJnD,KAAAnC,QAIyDkC,GAJzD,MAMY7C,OAAO,KAC/BC,KAAK,QAAS,WACdA,KAAK,YAFY,aAAAU,OAXJ,EAWI,KAAAA,OAEyBkC,EAFzB,MAGjBzC,UAAU,QACV9F,KAAKmD,EAAKyN,WACV7K,QAEH4K,EAAYjL,OAAO,QAChBC,KAAK,IAAK,SAAC1D,EAAGH,GAAJ,OApBM,GAoBiBA,IACjC6D,KAAK,QAAS,IACdA,KAAK,SAAU,IACfA,KAAK,OAAQ,SAAA1D,GAAC,OAAIwC,EAAWxC,KAEhC0O,EAAYjL,OAAO,QAChBC,KAAK,IAAK,IACVA,KAAK,IAAK,SAAC1D,EAAGH,GAAJ,OA3BM,GA2BiBA,EAAI,KACrCwE,KAAK,SAAArE,GAAC,OAAI4I,EAAKvG,SAASrC,iDAI3BwB,KAAKoN,wCAIL,OACElK,EAAA,qBAAKC,UAAU,8BACbD,EAAA,6DACAA,EAAA,qBAAKC,UAAU,oBACfD,EAAA,+JAlJgDE,aCCnCiK,mLAGjB,OACEnK,EAAA,qBAAKC,UAAU,UACbD,EAAA,mCACAA,EAAA,8HAAoGA,EAAA,iDAApG,qBACqCA,EAAA,4CADrC,kBAEAA,EAAA,yFACEA,EAAA,mBAAGgI,OAAO,SAASoC,IAAI,sBACpBC,KAAK,2GADR,MAGFrK,EAAA,qHAEEA,EAAA,mBAAGgI,OAAO,SAASoC,IAAI,sBACpBC,KAAK,gDADR,MAIFrK,EAAA,qBAAKC,UAAU,iCACbD,EAAA,yBACEA,EAAA,cAACoE,EAAD,CAAUnE,UAAU,WAAWW,IAAKE,EAAMO,aAAc9D,MAAO,GAAI8C,QAAS,IAAKC,SAAU,MAC3FN,EAAA,qDAEFA,EAAA,yBACEA,EAAA,cAACoE,EAAD,CAAUnE,UAAU,MAAMW,IAAKE,EAAMQ,IAAK/D,MAAO,GAAI8C,QAAS,GAAIC,SAAU,KAC5EN,EAAA,8CAEFA,EAAA,yBACEA,EAAA,cAACoE,EAAD,CAAUnE,UAAU,QAAQW,IAAKE,EAAMS,MAAOhE,MAAO,GAAI8C,QAAS,GAAIC,SAAU,KAChFN,EAAA,iDAIJA,EAAA,gEACEA,EAAA,mBAAGgI,OAAO,SAASoC,IAAI,sBACpBC,KAAK,+BADR,cAlC0BnK,uDCAfoK,mLAGjB,OACEC,EAAAvB,EAAAwB,cAAA,OAAKvK,UAAU,qBACbsK,EAAAvB,EAAAwB,cAAA,8CAEAD,EAAAvB,EAAAwB,cAAA,OAAKvK,UAAU,4CACbsK,EAAAvB,EAAAwB,cAAA,WACG1N,KAAK2N,WAAW,MAAOC,IAAQ,GAChCH,EAAAvB,EAAAwB,cAAA,yFAGFD,EAAAvB,EAAAwB,cAAA,WACG1N,KAAK2N,WAAW,QAASE,IAAU,GACpCJ,EAAAvB,EAAAwB,cAAA,wHAQCzO,EAAMyI,EAAMoG,GAErB,IADA,IAAIC,EAAY,GACP1P,EAAI,EAAGA,EAAIyP,EAAOzP,IACzB0P,EAAU1P,GAAKoP,EAAAvB,EAAAwB,cAACM,EAAA,EAAD,CAAOlK,IAAK4D,EAAMmF,IAAK5N,EAAOZ,IAE/C,OAAOoP,EAAAvB,EAAAwB,cAAA,OAAKvK,UAAWlE,GAAO8O,UA5Ba3K,IAAM6K,WC+CtCC,cAxCb,SAAAA,EAAYrO,GAAQ,IAAAC,EAAA,OAAAL,OAAAM,EAAA,EAAAN,CAAAO,KAAAkO,IAClBpO,EAAAL,OAAAQ,EAAA,EAAAR,CAAAO,KAAAP,OAAAS,EAAA,EAAAT,CAAAyO,GAAA/N,KAAAH,KAAMH,KACDoH,MAAQ,GAFKnH,oFAMlBE,KAAKmO,4CAGE,IAAA9G,EACiCrH,KAAKiH,MAAtC1K,EADA8K,EACA9K,KAAM6R,EADN/G,EACM+G,cAAevN,EADrBwG,EACqBxG,SACtBwN,OAAqB3K,IAATnH,EAElB,OACE2G,EAAA,qBAAKC,UAAU,OACbD,EAAA,cAACoL,EAAD,MACApL,EAAA,cAACqL,EAAD,MACArL,EAAA,cAACsL,EAAD,MACCH,EAAYnL,EAAA,cAACuL,EAAD,CAAUlS,KAAMA,IAAU,KACtC8R,EAAYnL,EAAA,cAACwL,EAAD,CAA4BnS,KAAMA,IAAU,KACxD8R,EAAYnL,EAAA,cAACyL,EAAD,CAAmBpS,KAAM6R,EAAevN,SAAUA,IAAc,KAC7EqC,EAAA,cAAC0L,EAAD,4KAMetS,EAAYuS,qBAAzBtS,SACA6R,EAAgB9R,EAAYwS,2BAA2BvS,GACvDsE,EAAWvE,EAAYgQ,cAG7BtM,KAAKkI,SAAS,CACZ3L,KAAMA,EACN6R,cAAeA,EACfvN,SAAUA,6GArCEuC,aCLlB2L,IAASC,OAAOvB,EAAAvB,EAAAwB,cAACuB,EAAD,MAASlH,SAASC,eAAe","file":"static/js/main.b1f0382d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/farm-sizes.e2bbf2b3.csv\";","module.exports = __webpack_public_path__ + \"static/media/cow.d06c764e.svg\";","module.exports = __webpack_public_path__ + \"static/media/wheat.2e463940.svg\";","import * as d3 from \"d3\";\nimport farmsData from \"../res/data/farm-sizes.csv\";\n\nexport default class DataService {\n\n  static getQuizData(data) {\n    const yearMin = data[0];\n    const yearMax = data[data.length - 1];\n\n    let minSmall = yearMin.area_size_0_1\n      + yearMin.area_size_1_3\n      + yearMin.area_size_3_5\n      + yearMin.area_size_5_10;\n\n    let minMedium = yearMin.area_size_20_30 + yearMin.area_size_10_20;\n\n    let minLarge = yearMin.area_size_50_n + yearMin.area_size_30_50;\n\n    let maxSmall = yearMax.area_size_0_1\n      + yearMax.area_size_1_3\n      + yearMax.area_size_3_5\n      + yearMax.area_size_5_10;\n\n    let maxMedium = yearMax.area_size_20_30 + yearMax.area_size_10_20;\n\n    let maxLarge = yearMax.area_size_50_n + yearMax.area_size_30_50;\n\n    return [\n      {\n        value: 1,\n        label: \"Kleine Bauernhöfe\",\n        size: \"bis 20 ha\",\n        minYearData: minSmall,\n        maxYearData: maxSmall,\n        minYear: yearMin.year,\n        maxYear: yearMax.year,\n        random1: 2.5,\n        random2: 0.6,\n        maxInPct: maxSmall / minSmall\n      },\n      {\n        value: 1,\n        label: \"Mittlere Bauernhöfe\",\n        size: \"20 bis 50 ha\",\n        minYearData: minMedium,\n        maxYearData: maxMedium,\n        minYear: yearMin.year,\n        maxYear: yearMax.year,\n        random1: 1.2,\n        random2: 0.2,\n        maxInPct: maxMedium / minMedium\n      },\n      {\n        value: 1,\n        label: \"Grosse Bauernhöfe\",\n        size: \"ab 50 ha\",\n        minYearData: minLarge,\n        maxYearData: maxLarge,\n        minYear: yearMin.year,\n        maxYear: yearMax.year,\n        random1: 0.4,\n        random2: 0.7,\n        maxInPct: maxLarge / minLarge\n      }\n    ]\n  }\n\n  static getCompareYearData(data, year) {\n    let activeIndex = 0;\n\n    for (let i = 0; i < data.length; i++) {\n      if (data[i].year < year) {\n        // setting yer on last available data entry\n        activeIndex = i;\n      } else if (data[i].year === year) {\n        // returning when exact same year was found\n        activeIndex = i;\n        break;\n      }\n    }\n\n    const yearMin = data[0];\n    const yearMax = data[activeIndex];\n\n    return [\n      {\n        size: \"0-1\",\n        label: \"0–1 ha\",\n        minYearData: yearMin.area_size_0_1,\n        maxYearData: yearMax.area_size_0_1,\n        minYear: yearMin.year,\n        maxYear: yearMax.year,\n        maxInPct: yearMax.area_size_0_1 / yearMin.area_size_0_1\n      },\n      {\n        size: \"1-3\",\n        label: \"1–3 ha\",\n        minYearData: yearMin.area_size_1_3,\n        maxYearData: yearMax.area_size_1_3,\n        minYear: yearMin.year,\n        maxYear: yearMax.year,\n        maxInPct: yearMax.area_size_1_3 / yearMin.area_size_1_3\n      },\n      {\n        size: \"3-5\",\n        label: \"3–5 ha\",\n        minYearData: yearMin.area_size_3_5,\n        maxYearData: yearMax.area_size_3_5,\n        minYear: yearMin.year,\n        maxYear: yearMax.year,\n        maxInPct: yearMax.area_size_3_5 / yearMin.area_size_3_5\n      },\n      {\n        size: \"5-10\",\n        label: \"5–10 ha\",\n        minYearData: yearMin.area_size_5_10,\n        maxYearData: yearMax.area_size_5_10,\n        minYear: yearMin.year,\n        maxYear: yearMax.year,\n        maxInPct: yearMax.area_size_5_10 / yearMin.area_size_5_10\n      },\n      {\n        size: \"10-20\",\n        label: \"10–20 ha\",\n        minYearData: yearMin.area_size_10_20,\n        maxYearData: yearMax.area_size_10_20,\n        minYear: yearMin.year,\n        maxYear: yearMax.year,\n        maxInPct: yearMax.area_size_10_20 / yearMin.area_size_10_20\n      },\n      {\n        size: \"20-30\",\n        label: \"20–30 ha\",\n        minYearData: yearMin.area_size_20_30,\n        maxYearData: yearMax.area_size_20_30,\n        minYear: yearMin.year,\n        maxYear: yearMax.year,\n        maxInPct: yearMax.area_size_20_30 / yearMin.area_size_20_30\n      },\n      {\n        size: \"30-50\",\n        label: \"30–50 ha\",\n        minYearData: yearMin.area_size_30_50,\n        maxYearData: yearMax.area_size_30_50,\n        minYear: yearMin.year,\n        maxYear: yearMax.year,\n        maxInPct: yearMax.area_size_30_50 / yearMin.area_size_30_50\n      },\n      {\n        size: \"50+\",\n        label: \"50 ha+\",\n        minYearData: yearMin.area_size_50_n,\n        maxYearData: yearMax.area_size_50_n,\n        minYear: yearMin.year,\n        maxYear: yearMax.year,\n        maxInPct: yearMax.area_size_50_n / yearMin.area_size_50_n\n      }\n    ];\n  }\n\n  static getFullData() {\n    return d3.csv(farmsData,\n      d => ({\n        year: +d.year,\n        total_farms_count: +d.total_farms_count,\n        area_valley_in_percent: +d.area_valley_in_percent,\n        area_mountain_in_percent: +d.area_mountain_in_percent,\n        area_size_0_1: +d.area_size_0_1,\n        area_size_1_3: +d.area_size_1_3,\n        area_size_3_5: +d.area_size_3_5,\n        area_size_5_10: +d.area_size_5_10,\n        area_size_10_20: +d.area_size_10_20,\n        area_size_20_30: +d.area_size_20_30,\n        area_size_30_50: +d.area_size_30_50,\n        area_size_50_n: +d.area_size_50_n\n      }))\n  }\n\n  static getNormalizedLineChartData(data) {\n    const parseDate = d3.timeParse(\"%Y\");\n    let maxRatio = -Infinity;\n    let minRatio = Infinity;\n\n    const newData = [\n      {name: \"area_size_0_1\", values: []},\n      {name: \"area_size_1_3\", values: []},\n      {name: \"area_size_3_5\", values: []},\n      {name: \"area_size_5_10\", values: []},\n      {name: \"area_size_10_20\", values: []},\n      {name: \"area_size_20_30\", values: []},\n      {name: \"area_size_30_50\", values: []},\n      {name: \"area_size_50_n\", values: []}\n    ];\n\n    for (let i = 0; i < newData.length; i++) {\n\n      for (let j = 0; j < data.length; j++) {\n        let name = newData[i].name;\n        let perYearRatio = data[j][name]/data[0][name];\n\n        if(perYearRatio > maxRatio) maxRatio = perYearRatio;\n        else if(perYearRatio < minRatio) minRatio = perYearRatio;\n\n        newData[i].values.push({year: parseDate(data[j].year), ratio: perYearRatio})\n      }\n    }\n    newData.push({ratio: {min: minRatio, max: maxRatio}})\n    return newData\n  }\n\n  static getLabelMap() {\n    return {\n      year: 'Jahr',\n      total_farms_count: 'Total Anz. Farmen',\n      area_valley_in_percent: 'Talgebiet in %',\n      area_mountain_in_percent: 'Berggebiet in %',\n      area_size_0_1: 'bis 1 ha',\n      area_size_1_3: '1 bis 3 ha',\n      area_size_3_5: '3 bis 5 ha',\n      area_size_5_10: '5 bis 10 ha',\n      area_size_10_20: '10 bis 20 ha',\n      area_size_20_30: '20 bis 30 ha',\n      area_size_30_50: '30 bis 50 ha',\n      area_size_50_n: '50 ha und mehr'\n    };\n  }\n\n  static getFilteredFarmsKeys(data) {\n    return Object.keys(data[0]).filter(d =>\n      d === 'area_size_0_1' ||\n      d === 'area_size_1_3' ||\n      d === 'area_size_3_5' ||\n      d === 'area_size_5_10' ||\n      d === 'area_size_10_20' ||\n      d === 'area_size_20_30' ||\n      d === 'area_size_30_50' ||\n      d === 'area_size_50_n');\n  }\n}","import * as React from \"react\";\nimport * as d3 from \"d3\";\n\n/**\n * Based on https://codepen.io/zakariachowdhury/pen/JEmjwq\n */\nexport default class RelativeLineChart extends React.Component {\n\n  constructor(params) {\n    super(params);\n\n    this.margin = {top: 20, right: 100, bottom: 80, left: 100};\n    this.width = 800 - this.margin.left - this.margin.right;\n    this.height = 500 - this.margin.top - this.margin.bottom;\n  }\n\n  drawChart() {\n    const {data, labelMap} = this.props;\n    const metaData = data.pop();\n\n    const lineOpacity = \"1\";\n    const otherLinesOpacityHover = \"0.2\";\n\n    const colorScale = d3.scaleOrdinal()\n      .range(['#c2eedc', '#7fd1af', '#1cb373', '#168c5a',\n        '#66bbff', '#1e8cd3',\n        '#ebb0dd', '#d674c0']);\n\n    const {width, height, margin} = this;\n\n    const xScale = d3.scaleTime()\n      .domain(d3.extent(data[7].values, d => d.year))\n      .range([0, width]);\n\n    const yScale = d3.scaleLog()\n      .domain([Math.round(metaData.ratio.min * 10) / 10, Math.round(metaData.ratio.max)])\n      .range([height, 0]);\n\n    const xAxis = d3.axisBottom(xScale)\n      .tickSizeOuter(0);\n    const yAxis = d3.axisLeft(yScale)\n      .tickValues([1 / 4, 1 / 3, 1 / 2, 1, 2, 3, 4])\n      .tickFormat(d => d !== 1 ? d3.format(\"+.0%\")(d - 1) : d3.format(\".0%\")(d - 1));\n    // .tickFormat(d => d >= 1 ? d3.format(\".2\")(d) : '1/' + Math.pow(d , -1));\n\n    const line = d3.line()\n      .x(d => xScale(d.year))\n      .y(d => yScale(d.ratio));\n\n    // init svg\n    const svg = d3.select('.RelativeLineChart')\n      .select(\".chart-container\").append(\"svg\")\n      .attr(\"width\", width + margin.left + margin.right)\n      .attr(\"height\", height + margin.top + margin.bottom);\n\n    const mainGroup = svg.append(\"g\")\n      .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n    mainGroup.append('rect')\n      .attr('width', width)\n      .attr('height', 2)\n      .attr('y', yScale(1))\n      .attr('fill', '#ebebe5')\n\n    // draw lines\n    const lineGroup = mainGroup.selectAll('.line-group')\n      .data(data).enter()\n      .append('g')\n      .attr('class', 'line-group')\n    lineGroup\n      .append('path')\n      .attr('class', 'line top-line')\n      .attr('d', d => line(d.values))\n      .style('stroke', (d, i) => colorScale(i))\n      .style('stroke-width', '2.5')\n      .style('fill', 'none')\n      .style('opacity', lineOpacity);\n    lineGroup\n      .on(\"mousemove\", function (d, i) {\n        svg.selectAll(\".hover-label\").remove()\n\n        // label mouse over\n        const mouse = d3.mouse(this);\n\n        const labelGroup = svg.append('g')\n          .attr(\"class\", \"hover-label\");\n        labelGroup.append(\"text\")\n          .attr(\"text-anchor\", \"end\");\n        labelGroup.append('text')\n          .attr('transform', `translate(${width + margin.left},${margin.top + yScale(d.values[d.values.length - 1].ratio)})`)\n          .attr('x', 8)\n          .attr('dy', 4)\n          .append('tspan')\n          .style(\"fill\", colorScale(i))\n          .attr('font-weight', 500)\n          .text(() => labelMap[d.name])\n          .append('tspan')\n          .attr('x', 8)\n          .attr('y', 20)\n          .style(\"fill\", 'currentColor')\n          .attr('dx', 0)\n          .text(() => {\n            let value = data[i].values[data[i].values.length - 1];\n            let formattedRratio = d3.format(\"+.0%\")(value.ratio - 1);\n            let year = d3.timeFormat(\"%Y\")(value.year);\n            return `${formattedRratio} (${year})`\n          });\n        labelGroup.append('text')\n          .attr('transform', `translate(${margin.left + mouse[0]},${margin.top + mouse[1] - 10})`)\n          .attr(\"text-anchor\", \"end\")\n          .text(d3.format(\"+.0%\")(yScale.invert(mouse[1]) - 1));\n        labelGroup.append('circle')\n          .attr('class', 'marker')\n          .attr('pointer-events', 'none')\n          .attr('cx', margin.left + mouse[0])\n          .attr('cy', margin.top + mouse[1])\n          .attr('r', 4)\n          .style(\"fill\", colorScale(i));\n\n        // line mouse over\n        mainGroup.selectAll('.line')\n          .style('opacity', otherLinesOpacityHover);\n        d3.select(this).selectAll('.line')\n          .style('opacity', lineOpacity)\n          .style(\"cursor\", \"pointer\");\n      })\n      .on(\"mouseleave\", function () {\n        // label mouse out\n        mainGroup.selectAll(\".line\")\n          .style('opacity', lineOpacity);\n        d3.select(this).selectAll('.line')\n          .style(\"cursor\", \"none\");\n        // line mouse out\n        svg.selectAll(\".hover-label\").remove()\n      });\n\n    // draw axis\n    const axisGroup = mainGroup.append('g').attr('class', 'axis-group');\n\n    axisGroup.append(\"g\")\n      .attr('class', 'x-axis')\n      .attr(\"transform\", `translate(0,${height})`)\n      .call(xAxis)\n      .append('text')\n      .attr('class', 'header')\n      .attr('x', width / 2)\n      .attr('y', 50)\n      .text('Jahr')\n      .style('text-anchor', 'middle');\n\n    axisGroup.append(\"g\")\n      .attr('class', 'y-axis')\n      .call(yAxis)\n      .append('text')\n      .attr('class', 'header')\n      .attr('x', -height / 2)\n      .attr('y', -70)\n      .attr('transform', 'rotate(-90)')\n      .text('Veränderung in Prozent')\n      .attr('text-anchor', 'middle');\n  }\n\n  componentDidMount() {\n    this.drawChart();\n  }\n\n  render() {\n    return <div className='RelativeLineChart'>\n      <h2>Relative Entwicklung der Bauernhöfe</h2>\n\n\n      <div className='chart-container'/>\n\n      <p>Die Grossen werden immer mehr, die Kleinen verschwinden: Während die <span\n        className='color50-plus'>Grossbetriebe</span> fast\n        um das 4-fache zugenommen haben, gibt es heute von den Bauernhöfen mit <span\n          className='color1-3'> 1 bis 3 Hektar</span> nur noch 1/4 des Bestandes wie um 1985.</p>\n      <p>Bis um die Jahrtausendwende galten Betriebe <span className='color20-30'>ab 20 Hektar</span> noch als\n        rentabel. Dies trifft heute nicht mehr zu: Höfe, die kleiner als 30 Hektar sind, müssen um ihre Existenz\n        fürchten.</p>\n\n    </div>\n  }\n}","import * as React from \"react\";\n\nexport default class Header extends React.Component {\n  render() {\n    return (\n      <div className='Header'>\n\n        <div className='screen-size-warn-container'>\n          <p>\n            Diese Website ist nicht für Mobiltelefone optimiert. Daheim auf dem grossen Bildschirm macht sie\n            wesentlich mehr Spass. :)\n          </p>\n        </div>\n\n        <h1>Strukturwandel in der Landwirtschaft</h1>\n\n        <p>Seit Jahren spricht man über einen Rückgang von Bauernhöfen: Für viele Bäuerinnen und Bauern lohnt sich\n          offenbar der Landwirtschaftsbetrieb nicht mehr und sie geben ihre Höfe auf.</p>\n        <p>Die folgenden Visualisierungen zeigen, wie sich die Schweizer Landwirtschaft in den letzten 35 Jahren\n          tatsächlich verändert hat.</p>\n      </div>\n    )\n  }\n}","import * as React from \"react\";\n\nexport default class SvgImage extends React.Component {\n\n  constructor(params) {\n    super(params);\n    const {vbWidth, vbHeight} = this.props;\n\n    this.style = {\n      viewBox: `0 0 ${vbWidth} ${vbHeight}`\n    };\n    this.width = this.props.width === undefined ? 100 : this.props.width;\n    this.fill = this.props.fill === undefined ? '#222' : this.props.fill;\n  }\n\n  render() {\n    const {style, width, fill, style: {viewBox}} = this;\n\n    return (\n      <svg\n        width={width + 'px'}\n        height={width + 'px'}\n        style={style}\n        viewBox={viewBox}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        className={`icon ${this.props.className || \"\"}`}\n        xmlnsXlink=\"http://www.w3.org/1999/xlink\">\n        <g fill={fill}>{this.props.src}>\n          <path d={this.props.src} fill=\"\" fillRule=\"nonzero\"/>\n        </g>\n      </svg>)\n\n  }\n}","\nexport class Icons {\n\n  static farmSmall = \"M121.793388,127.91954 C122.694215,127.91954 123.144628,127.468811 123.144628,126.567354 L118.640496,123.412251 L93.6706259,123.409582 L93.6706259,98.5310256 L117.891125,98.5310256 L118.805293,98.5310256 L118.640496,123.412251 L123.144628,126.567354 L123.287141,98.5310256 L123.287141,98.4767541 L123.314108,98.4767541 L123.287141,98.5310256 L128.100679,98.5310256 C128.791024,98.5310256 129.22159,97.7820794 128.880912,97.1869024 L126.254366,92.4969435 L118.50057,78.4523937 C115.067722,72.2283615 109.581817,67.2769952 103.046912,64.5163868 C99.1205753,62.8475393 94.961427,62 90.721379,62 L58.6841622,62 C58.6122513,62 58.5412392,62.0180905 58.4693283,62.0271357 C54.382091,62.0271357 50.3029437,62.8122629 46.4934623,64.3725674 L46.1168288,64.525432 C39.4390004,67.2679499 33.8362403,72.2645425 30.3404703,78.6061628 L22.8284751,92.216541 L22.6765633,92.496039 C22.6765633,92.5050842 22.6675744,92.5050842 22.6675744,92.5141295 L20.1129388,97.1959476 C19.7812496,97.7911246 20.2208051,98.5310256 20.9021612,98.5310256 L25.70671,98.5310256 L25.6887323,98.4857993 C25.6977211,98.4857993 25.6977211,98.4857993 25.70671,98.4857993 L25.70671,98.5310256 L25.70671,125.664561 C25.70671,126.909187 26.7107663,127.91954 27.9476342,127.91954 L90.5514895,127.91954 L91.4297017,127.91954 C111.67216,127.91954 121.793388,127.91954 121.793388,127.91954 Z M30.1876596,95.6085073 L30.8150825,94.4724247 L37.3949323,82.5471755 C40.0035011,77.8210357 44.1806271,74.0862546 49.1649532,72.0483612 L49.5325979,71.894592 C55.3322141,69.5138839 61.9740871,69.5500649 67.7476356,71.9940897 C72.6151065,74.0600234 76.7113327,77.7486737 79.2749572,82.3943109 L85.9348079,94.4724247 L87.0287529,96.4388607 C87.0647084,96.5021774 87.1096527,96.5654941 87.1456082,96.6288108 C87.1815636,96.6921275 87.2175191,96.746399 87.2624634,96.8088112 C87.3972964,96.9978568 87.5402194,97.1787616 87.702019,97.3406715 C87.8629197,97.5034859 88.042697,97.6473053 88.2305643,97.7829839 C88.2844975,97.8191649 88.3294418,97.8463006 88.3743861,97.8824816 C88.5532646,97.9910245 88.7330419,98.0896177 88.9209092,98.1800701 C88.9478758,98.1891154 88.9748424,98.2072058 89.001809,98.2162511 C89.064731,98.2433868 89.1276531,98.2705225 89.1896763,98.288613 L89.1896763,123.410486 L72.9926389,123.410486 L72.9926389,101.296675 C72.9926389,100.051145 71.9894814,99.0416953 70.7517146,99.0416953 L46.0008725,99.0416953 C44.7631056,99.0416953 43.7599482,100.051145 43.7599482,101.296675 L43.7599482,123.409582 L30.1876596,123.409582 L30.1876596,95.6085073 Z M48,103.4 L56,103.4 L56,123.4 L48,123.4 L48,103.4 Z M60.49,103.4 L68.49,103.4 L68.49,123.4 L60.49,123.4 L60.49,103.4 Z\"\n  static farmSmallBackground = \"M42.5,70.8071399 C53,61.9762823 92.5,64.6255396 104,69.4825113 C111.666667,72.7204924 117.333333,80.3739023 121,92.4427411 L121,126 L28,126 L28,92.4427411 C30.6666667,83.9062454 35.5,76.6943783 42.5,70.8071399 Z\"\n\n  static farmMedium = \"M104.072541,128 L91.4297017,128 L90.5514895,128 L27.9476342,128 C26.7107663,128 25.70671,126.988547 25.70671,125.742566 L25.70671,90.5707888 L25.70671,90.5255133 C25.6977211,90.5255133 25.6977211,90.5255133 25.6887323,90.5255133 L25.70671,90.5707888 L20.9021612,90.5707888 C20.2208051,90.5707888 19.7812496,89.8300825 20.1129388,89.2342576 L22.6675744,84.5473434 C22.6675744,84.5382883 22.6765633,84.5382883 22.6765633,84.5292333 L22.8284751,84.249431 L30.3404703,70.6242383 C33.8362403,64.2757152 39.4390004,59.273684 46.1168288,56.5281809 L46.4934623,56.3751499 C50.3029437,54.813147 54.382091,54.0271653 58.4693283,54.0271653 C58.5412392,54.0181102 58.6122513,54 58.6841622,54 L90.721379,54 C94.961427,54 99.1205753,54.8484619 103.046912,56.5191258 C109.581817,59.282739 115.067722,64.2394949 118.50057,70.4703018 L126.254366,84.5301388 L128.880912,89.2252025 C129.22159,89.8210274 128.791024,90.5707888 128.100679,90.5707888 L123.287141,90.5707888 L123.314108,90.5164582 L123.287141,90.5164582 L123.287141,90.5707888 L123.287141,95.9350236 C121.737461,96.2329361 120.239916,96.6748244 118.805293,97.2443895 L118.805293,90.5707888 L117.891125,90.5707888 L93.6706259,90.5707888 L93.6706259,123.485133 L103.124216,123.485133 C103.304892,125.036269 103.6213,126.547564 104.072541,128 Z M30.1876596,87.6450894 L30.1876596,123.485133 L43.7599482,123.485133 L43.7599482,101.348156 C43.7599482,100.10127 44.7631056,99.0907222 46.0008725,99.0907222 L70.7517146,99.0907222 C71.9894814,99.0907222 72.9926389,100.10127 72.9926389,101.348156 L72.9926389,123.486038 L89.1896763,123.486038 L89.1896763,90.3281124 C89.1276531,90.3100022 89.064731,90.2828369 89.001809,90.2556717 C88.9748424,90.2466166 88.9478758,90.2285064 88.9209092,90.2194513 C88.7330419,90.1289004 88.5532646,90.0301999 88.3743861,89.9215389 C88.3294418,89.8853185 88.2844975,89.8581533 88.2305643,89.8219329 C88.042697,89.6861066 87.8629197,89.5421306 87.702019,89.379139 C87.5402194,89.2170529 87.3972964,89.0359512 87.2624634,88.8466998 C87.2175191,88.7842197 87.1815636,88.7298891 87.1456082,88.6665035 C87.1096527,88.6031179 87.0647084,88.5397323 87.0287529,88.4763466 L85.9348079,86.5077702 L79.2749572,74.4165096 C76.7113327,69.7658158 72.6151065,66.0731504 67.7476356,64.0049681 C61.9740871,61.558283 55.3322141,61.5220626 49.5325979,63.9053621 L49.1649532,64.0592986 C44.1806271,66.0994102 40.0035011,69.8382565 37.3949323,74.5695406 L30.8150825,86.5077702 L30.1876596,87.6450894 Z M48,103.5 L48,123.5 L56,123.5 L56,103.5 L48,103.5 Z M60.49,103.5 L60.49,123.5 L68.49,123.5 L68.49,103.5 L60.49,103.5 Z M54.8946875,87 C53.8475738,87 52.9990506,86.1759069 53,85.1598637 L53,75.8401363 C53,74.8240931 53.848524,74 54.8946875,74 L63.1053133,74 C64.1514768,74 65,74.8240931 65,75.8401363 L65,85.1598637 C65,86.1759069 64.152427,87 63.1053133,87 L54.8946875,87 Z M152.730002,138.561634 C153.983828,138.561634 155,139.555059 155,140.780817 C155,142.006575 153.983828,143 152.730002,143 L90.2699981,143 C89.0161724,143 88,142.006575 88,140.780817 C88,139.555059 89.0161724,138.561634 90.2699981,138.561634 L115.644261,138.561634 C109.612786,134.702766 105.62185,128.074592 105.62185,120.556252 C105.62185,108.66987 115.588717,99 127.840151,99 C140.091585,99 150.059362,108.67076 150.059362,120.556252 C150.059362,128.074592 146.067517,134.702766 140.036041,138.561634 L152.730002,138.561634 Z M111.978391,120.557143 C111.978391,129.016387 119.09433,135.899148 127.840151,135.899148 C136.586883,135.899148 143.702821,129.017277 143.702821,120.557143 C143.702821,112.097008 136.586883,105.215137 127.840151,105.215137 C119.09433,105.215137 111.978391,112.097008 111.978391,120.557143 Z M128,125 C125.238517,125 123,122.761236 123,119.999535 C123,117.237834 125.238517,115 128,115 C130.761483,115 133,117.238764 133,119.999535 C133,122.761236 130.761483,125 128,125 Z M81.8368056,139 C83.0321181,139 84,139.895307 84,141 C84,142.104693 83.03125,143 81.8359375,143 L77.1640625,143 C75.96875,143 75,142.104693 75,141 C75,139.895307 75.96875,139 77.1640625,139 L81.8368056,139 Z\"\n  static farmMediumBackround = \"M110.350063,125 L28,125 L28,87 C30.6666667,77.3333333 35.5,69.1666667 42.5,62.5 C53,52.5 92.5,55.5 104,61 C111.666667,64.6666667 117.333333,73.3333333 121,87 L121,105.24691 C123.009582,104.442503 125.203115,104 127.5,104 C137.164983,104 145,111.835017 145,121.5 C145,131.164983 137.164983,139 127.5,139 C119.033647,139 111.97151,132.987841 110.350063,125 Z\"\n\n  static farmLarge = \"M104.072541,128 L91.4297017,128 L90.5514895,128 L27.9476342,128 C26.7107663,128 25.70671,126.988547 25.70671,125.742566 L25.70671,85.5707888 L25.70671,85.5255133 C25.6977211,85.5255133 25.6977211,85.5255133 25.6887323,85.5255133 L25.70671,85.5707888 L20.9021612,85.5707888 C20.2208051,85.5707888 19.7812496,84.8300825 20.1129388,84.2342576 L22.6675744,79.5473434 C22.6675744,79.5382883 22.6765633,79.5382883 22.6765633,79.5292333 L22.8284751,79.249431 L30.3404703,65.6242383 C33.8362403,59.2757152 39.4390004,54.273684 46.1168288,51.5281809 L46.4934623,51.3751499 C50.3029437,49.813147 54.382091,49.0271653 58.4693283,49.0271653 C58.5412392,49.0181102 58.6122513,49 58.6841622,49 L100.721379,48 C104.961427,48 109.120575,48.8484619 113.046912,50.5191258 C119.581817,53.282739 125.067722,58.2394949 128.50057,64.4703018 L136.254366,78.5301388 L138.880912,83.2252025 C139.22159,83.8210274 138.791024,84.5707888 138.100679,84.5707888 L133.287141,84.5164582 L133.29,96.8 C131,96.4 131,96.5 128.805293,96.2443895 L128.805293,84.5707888 L93.6706259,85.5707888 L93.6706259,123.485133 L103.124216,123.485133 C103.304892,125.036269 103.6213,126.547564 104.072541,128 Z M30.1876596,82.6450894 L30.1876596,123.485133 L43.7599482,123.485133 L43.7599482,101.348156 C43.7599482,100.10127 44.7631056,99.0907222 46.0008725,99.0907222 L70.7517146,99.0907222 C71.9894814,99.0907222 72.9926389,100.10127 72.9926389,101.348156 L72.9926389,123.486038 L89.1896763,123.486038 L89.1896763,85.3281124 C89.1276531,85.3100022 89.064731,85.2828369 89.001809,85.2556717 C88.9748424,85.2466166 88.9478758,85.2285064 88.9209092,85.2194513 C88.7330419,85.1289004 88.5532646,85.0301999 88.3743861,84.9215389 C88.3294418,84.8853185 88.2844975,84.8581533 88.2305643,84.8219329 C88.042697,84.6861066 87.8629197,84.5421306 87.702019,84.379139 C87.5402194,84.2170529 87.3972964,84.0359512 87.2624634,83.8466998 C87.2175191,83.7842197 87.1815636,83.7298891 87.1456082,83.6665035 C87.1096527,83.6031179 87.0647084,83.5397323 87.0287529,83.4763466 L85.9348079,81.5077702 L79.2749572,69.4165096 C76.7113327,64.7658158 72.6151065,61.0731504 67.7476356,59.0049681 C61.9740871,56.558283 55.3322141,56.5220626 49.5325979,58.9053621 L49.1649532,59.0592986 C44.1806271,61.0994102 40.0035011,64.8382565 37.3949323,69.5695406 L30.8150825,81.5077702 L30.1876596,82.6450894 Z M60.49,103.5 L60.49,123.5 L68.49,123.5 L68.49,103.5 L60.49,103.5 Z M48.2,103.5 L48.2,123.5 L56.2,123.5 L56.2,103.5 L48.2,103.5 Z M63.3946875,88.5 C62.3475738,88.5 61.4990506,87.6759069 61.5,86.6598637 L61.5,77.3401363 C61.5,76.3240931 62.348524,75.5 63.3946875,75.5 L71.6053133,75.5 C72.6514768,75.5 73.5,76.3240931 73.5,77.3401363 L73.5,86.6598637 C73.5,87.6759069 72.652427,88.5 71.6053133,88.5 L63.3946875,88.5 Z M44.3946875,88.5 C43.3475738,88.5 42.4990506,87.6759069 42.5,86.6598637 L42.5,77.3401363 C42.5,76.3240931 43.348524,75.5 44.3946875,75.5 L52.6053133,75.5 C53.6514768,75.5 54.5,76.3240931 54.5,77.3401363 L54.5,86.6598637 C54.5,87.6759069 53.652427,88.5 52.6053133,88.5 L44.3946875,88.5 Z M128,125 C125.238517,125 123,122.761236 123,119.999535 C123,117.237834 125.238517,115 128,115 C130.761483,115 133,117.238764 133,119.999535 C133,122.761236 130.761483,125 128,125 Z M152.730002,138.561634 C153.983828,138.561634 155,139.555059 155,140.780817 C155,142.006575 153.983828,143 152.730002,143 L90.2699981,143 C89.0161724,143 88,142.006575 88,140.780817 C88,139.555059 89.0161724,138.561634 90.2699981,138.561634 L115.644261,138.561634 C109.612786,134.702766 105.62185,128.074592 105.62185,120.556252 C105.62185,108.66987 115.588717,99 127.840151,99 C140.091585,99 150.059362,108.67076 150.059362,120.556252 C150.059362,128.074592 146.067517,134.702766 140.036041,138.561634 L152.730002,138.561634 Z M111.978391,120.557143 C111.978391,129.016387 119.09433,135.899148 127.840151,135.899148 C136.586883,135.899148 143.702821,129.017277 143.702821,120.557143 C143.702821,112.097008 136.586883,105.215137 127.840151,105.215137 C119.09433,105.215137 111.978391,112.097008 111.978391,120.557143 Z M81.8368056,139 C83.0321181,139 84,139.895307 84,141 C84,142.104693 83.03125,143 81.8359375,143 L77.1640625,143 C75.96875,143 75,142.104693 75,141 C75,139.895307 75.96875,139 77.1640625,139 L81.8368056,139 Z M5.50867247,111.730587 C5.61904307,111.863775 5.80504512,112.037813 6.06328008,112.233675 C6.83019694,112.815356 8.02465155,113.434345 9.50276562,113.995303 C12.8000543,115.246655 16.9880492,116.03605 20.9091078,116.06444 L20.872907,121.064308 C10.983938,120.992709 0.508695652,117.017258 0.508695652,112 L3.00869565,112 L0.508695661,112.000215 L0.500000009,11.0002152 L0.508695658,11.0002145 C0.508695652,4.83936809 13.98232,1.5 31.2521739,1.5 C48.5220279,1.5 61.9956522,4.83936809 61.9956522,11 L61.9956522,45 L56.9956522,45 L56.9956522,16.6331982 C51.5553753,19.1675367 42.1611539,20.5 31.2521739,20.5 C20.3377036,20.5 10.939517,19.1661952 5.50048467,16.6293708 L5.50867247,111.730587 Z M5.50869564,111.999785 L5.50867247,111.730587 C5.48877601,111.706577 5.47133736,111.683895 5.45637642,111.662652 C5.46646146,111.676972 5.50866663,111.791156 5.50869564,111.999785 Z M6.4921282,11.567749 C7.67399862,12.2602908 9.52114384,12.937932 11.8824347,13.5231657 C16.9326029,14.7748238 23.8502747,15.5 31.2521739,15.5 C38.6540731,15.5 45.571745,14.7748238 50.6219132,13.5231657 C52.983204,12.937932 54.8303492,12.2602908 56.0122196,11.567749 C56.3636925,11.3617961 56.6329514,11.1678044 56.8180697,11 C56.6329514,10.8321956 56.3636925,10.6382039 56.0122196,10.432251 C54.8303492,9.73970921 52.983204,9.06206802 50.6219132,8.47683431 C45.571745,7.22517624 38.6540731,6.5 31.2521739,6.5 C23.8502747,6.5 16.9326029,7.22517624 11.8824347,8.47683431 C9.52114384,9.06206802 7.67399862,9.73970921 6.4921282,10.432251 C6.14065534,10.6382039 5.87139645,10.8321956 5.68627814,11 C5.87139645,11.1678044 6.14065534,11.3617961 6.4921282,11.567749 Z M122,50 L121.995168,16.6293708 C116.556135,19.1661952 107.157949,20.5 96.2434783,20.5 C85.3344982,20.5 75.9402769,19.1675367 70.5,16.6331982 L70.5,45 L65.5,45 L65.5,11 C65.5,4.83936809 78.9736243,1.5 96.2434783,1.5 C113.513332,1.5 126.986957,4.83936809 126.986957,11.0002145 L126.995652,11.0002152 L127,55.5 L122,50 Z M121.003524,11.567749 C121.354997,11.3617961 121.624256,11.1678044 121.809374,11 C121.624256,10.8321956 121.354997,10.6382039 121.003524,10.432251 C119.821654,9.73970921 117.974508,9.06206802 115.613218,8.47683431 C110.563049,7.22517624 103.645377,6.5 96.2434783,6.5 C88.8415791,6.5 81.9239072,7.22517624 76.873739,8.47683431 C74.5124482,9.06206802 72.665303,9.73970921 71.4834326,10.432251 C71.1319597,10.6382039 70.8627008,10.8321956 70.6775825,11 C70.8627008,11.1678044 71.1319597,11.3617961 71.4834326,11.567749 C72.665303,12.2602908 74.5124482,12.937932 76.873739,13.5231657 C81.9239072,14.7748238 88.8415791,15.5 96.2434783,15.5 C103.645377,15.5 110.563049,14.7748238 115.613218,13.5231657 C117.974508,12.937932 119.821654,12.2602908 121.003524,11.567749 Z\"\n  static farmLargeBackround = \"M122,11 L125,11 L125,72.5 L131,79.5 L131,103.177222 C139.480735,104.390296 146,111.68382 146,120.5 C146,130.164983 138.164983,138 128.5,138 C120.705515,138 114.101218,132.904197 111.836857,125.862338 C68.3923718,125.498155 41.1134195,124.877375 30,124 C17.3333333,123 9,119 5,112 L5,11 C5,7.13400675 16.6405965,4 31,4 C45.3594035,4 57,7.13400675 57,11 L70,11 C70,7.13400675 81.6405965,4 96,4 C110.359403,4 122,7.13400675 122,11 Z\"\n\n  static farmOriginal = \"M42.0525781,44 C40.9182049,44 39.9989715,43.1125151 40.0000009,42.0183148 L40.0000009,31.9816852 C40.0000009,30.8874849 40.9192343,30 42.0525781,30 L50.9474227,30 C52.0807666,30 53,30.8874849 53,31.9816852 L53,42.0183148 C53,43.1125151 52.0817959,44 50.9474227,44 L42.0525781,44 Z M82.293522,89 L81.3186259,89 L11.8226032,89 C10.4495663,89 9.33497164,87.8792002 9.33497164,86.4985194 L9.33497164,47.5243876 L9.33497164,47.4742175 C9.32499317,47.4742175 9.32499317,47.4742175 9.31501471,47.4742175 L9.33497164,47.5243876 L4.00148168,47.5243876 C3.24511397,47.5243876 2.757167,46.7036049 3.12537238,46.0433665 L5.96125236,40.8497589 C5.96125236,40.8397249 5.97123082,40.8397249 5.97123082,40.8296909 L6.13986689,40.5196398 L14.4788707,25.4214532 C18.3594961,18.3866034 24.5790738,12.8438119 31.992076,9.80149776 L32.4101737,9.63192286 C36.6390475,7.9010548 41.1672753,7.03010205 45.7044837,7.03010205 C45.7843114,7.02006804 45.8631413,7 45.942969,7 L81.5072189,7 C86.2140612,7 90.8310973,7.94018746 95.1896912,9.79146374 C102.444036,12.853846 108.533893,18.3464673 112.34467,25.2508749 L120.952094,40.8306943 L123.867802,46.0333325 C124.245986,46.6935709 123.768017,47.5243876 123.001671,47.5243876 L117.658203,47.5243876 L117.688138,47.4641835 L117.658203,47.4641835 L117.658203,47.5243876 L117.658203,53.4685397 C115.937915,53.7986589 114.275503,54.2883189 112.68294,54.9194587 L112.68294,47.5243876 L111.66813,47.5243876 L84.7811535,47.5243876 L84.7811535,83.9970387 L95.275506,83.9970387 C95.4760732,85.715866 95.8273152,87.3905436 96.3282341,89 L82.293522,89 Z M14.3092368,44.2823964 L14.3092368,83.9970387 L29.3757223,83.9970387 L29.3757223,59.4668755 C29.3757223,58.0851913 30.4893191,56.9653949 31.8633538,56.9653949 L59.3390593,56.9653949 C60.7130941,56.9653949 61.8266909,58.0851913 61.8266909,59.4668755 L61.8266909,83.9980421 L79.8068883,83.9980421 L79.8068883,47.2554759 C79.7380369,47.2354078 79.6681877,47.2053058 79.5983384,47.1752037 C79.568403,47.1651697 79.5384676,47.1451017 79.5085322,47.1350677 C79.2999823,47.0347275 79.100413,46.9253567 78.9018415,46.8049485 C78.8519492,46.7648124 78.8020568,46.7347104 78.742186,46.6945743 C78.5336361,46.544064 78.3340668,46.3845231 78.1554523,46.2039108 C77.9758399,46.0243019 77.8171823,45.8236215 77.6675053,45.6139106 C77.617613,45.5446759 77.5776991,45.4844717 77.5377852,45.4142336 C77.4978714,45.3439955 77.447979,45.2737574 77.4080652,45.2035192 L76.1936859,43.0221238 L68.8006406,29.6236999 C65.9547822,24.4702283 61.4075953,20.3783559 56.0042561,18.0865862 C49.5950875,15.3753946 42.2219991,15.3352586 35.783893,17.976212 L35.3757738,18.1467903 C29.8427145,20.4074545 25.2057215,24.5505005 22.3099707,29.7932748 L15.0057337,43.0221238 L14.3092368,44.2823964 Z M56.85043,80.4429896 L56.85043,61.9693595 L38.5409431,61.9693595 L56.85043,80.4429896 Z M53.3469906,83.9950319 L34.3509853,64.8280512 L34.3509853,83.9950319 L53.3469906,83.9950319 Z M123.5,86 C120.462369,86 118,83.5373593 118,80.4994882 C118,77.4616172 120.462369,75 123.5,75 C126.537631,75 129,77.4626407 129,80.4994882 C129,83.5373593 126.537631,86 123.5,86 Z M150.492838,101.057274 C151.87766,101.057274 153,102.163588 153,103.528637 C153,104.893686 151.87766,106 150.492838,106 L81.5071621,106 C80.1223397,106 79,104.893686 79,103.528637 C79,102.163588 80.1223397,101.057274 81.5071621,101.057274 L109.532467,101.057274 C102.870838,96.759898 98.4629393,89.3785227 98.4629393,81.0058265 C98.4629393,67.7687188 109.471121,57 123.002555,57 C136.533989,57 147.543176,67.7697101 147.543176,81.0058265 C147.543176,89.3785227 143.134272,96.759898 136.472643,101.057274 L150.492838,101.057274 Z M105.483597,81.0068179 C105.483597,90.4273402 113.342991,98.0922333 123.002555,98.0922333 C132.663124,98.0922333 140.522519,90.4283315 140.522519,81.0068179 C140.522519,71.5853042 132.663124,63.9214024 123.002555,63.9214024 C113.342991,63.9214024 105.483597,71.5853042 105.483597,81.0068179 Z M71.5964506,101 C72.9245756,101 74,102.119134 74,103.5 C74,104.880866 72.9236111,106 71.5954861,106 L66.4045139,106 C65.0763889,106 64,104.880866 64,103.5 C64,102.119134 65.0763889,101 66.4045139,101 L71.5964506,101 Z\"\n\n  static cow = \"M39.7700147,9.37375415 C40.0442907,9.68770764 40.0900033,10.1362126 39.8157274,10.5398671 L38.8557615,11.9750831 C38.5814855,12.3787375 38.0786463,12.513289 37.6672323,12.2890365 C36.8901171,11.8853821 35.5187373,11.3023256 34.2844954,11.3023256 C32.4102764,11.3023256 31.0846092,13.7242525 31.0846092,15.3388704 C31.0846092,16.9983389 29.89608,18.3887043 28.3418496,18.7923588 L28.3418496,25.6096346 C28.3418496,26.372093 27.747585,26.9551495 26.9704698,26.9551495 C26.1933545,26.9551495 25.5990899,26.372093 25.5990899,25.6096346 L25.5990899,18.8820598 L23.7705835,18.8820598 L23.7705835,25.6096346 C23.7705835,26.372093 23.1763189,26.9551495 22.3992037,26.9551495 C21.6220885,26.9551495 21.0278239,26.372093 21.0278239,25.6096346 L21.0278239,18.8820598 L11.8852918,18.8820598 C11.8852918,19.8687708 11.0624639,20.6760797 10.0567853,20.6760797 L5.48551927,20.6760797 L5.48551927,25.6096346 C5.48551927,26.372093 4.89125468,26.9551495 4.11413945,26.9551495 C3.33702422,26.9551495 2.74275964,26.372093 2.74275964,25.6096346 L2.74275964,18.8820598 L2.74275964,7.22093023 C2.23992037,7.22093023 1.82850642,7.62458472 1.82850642,8.1179402 L1.82850642,17.9401993 C1.82850642,18.4335548 1.41709248,18.8372093 0.914253212,18.8372093 C0.411413945,18.8372093 1.42108547e-14,18.4335548 1.42108547e-14,17.9401993 L1.42108547e-14,8.0730897 C1.42108547e-14,6.59302326 1.23424184,5.3820598 2.74275964,5.3820598 C2.74275964,4.39534884 3.56558753,3.58803987 4.57126606,3.58803987 L26.0562165,3.58803987 L29.9417927,3.58803987 C29.5303787,3.09468439 29.2561028,2.46677741 29.2561028,1.79401993 L29.2561028,0.897009967 C29.2561028,0.403654485 29.6675167,-3.55271368e-15 30.170356,-3.55271368e-15 C30.6731953,-3.55271368e-15 31.0846092,0.403654485 31.0846092,0.897009967 L31.0846092,1.79401993 C31.0846092,2.28737542 31.4960232,2.6910299 31.9988624,2.6910299 L34.7416221,2.6910299 C35.2444613,2.6910299 35.6558753,2.28737542 35.6558753,1.79401993 L35.6558753,0.897009967 C35.6558753,0.403654485 36.0672892,-3.55271368e-15 36.5701285,-3.55271368e-15 C37.0729677,-3.55271368e-15 37.4843817,0.403654485 37.4843817,0.897009967 L37.4843817,1.79401993 C37.4843817,3.04983389 36.6158411,4.08139535 35.427312,4.39534884 L39.7700147,9.37375415 Z M7.3140257,25.654485 L7.3140257,21.6179402 L10.0567853,21.6179402 L10.0567853,25.654485 C10.0567853,26.4169435 9.46252074,27 8.68540551,27 C7.90829028,27 7.3140257,26.4169435 7.3140257,25.654485 Z\"\n\n  static wheat = \"M4.72027972,8.26701847 C4.27272727,7.73509235 3.46153846,6.5530343 3.46153846,5.223219 C3.46153846,4.0116095 4.13286713,2.94775726 4.58041958,2.35672823 L4.94405594,0.110817942 C4.94405594,-0.036939314 5.13986014,-0.036939314 5.16783217,0.110817942 L5.47552448,2.41583113 C5.92307692,3.00686016 6.53846154,4.04116095 6.53846154,5.223219 C6.53846154,6.5530343 5.72727273,7.73509235 5.27972028,8.26701847 C5.13986014,8.44432718 4.86013986,8.44432718 4.72027972,8.26701847 Z M5,24 C5.41420118,24 5.76923077,24.358209 5.76923077,24.7761194 L5.76923077,27.2238806 C5.76923077,27.6716418 5.44378698,28 5,28 C4.55621302,28 4.23076923,27.641791 4.23076923,27.2238806 L4.23076923,24.7761194 C4.23076923,24.3283582 4.58579882,24 5,24 Z M0.904295684,7.85709594 L0.0111600933,5.8005896 C-0.0446608811,5.6493759 0.122802042,5.52840494 0.206533504,5.6493759 L1.60205786,7.31272662 C2.29982004,7.5244258 3.38832904,8.06879512 4.03027025,9.09704829 C4.72803243,10.2462724 4.64430097,11.7281667 4.56056951,12.4539925 C4.53265902,12.6959344 4.30937512,12.8471481 4.08609122,12.7866626 C3.44415002,12.5749634 2.16026761,12.0608368 1.46250543,10.9116127 C0.848474709,9.91360228 0.848474709,8.64340719 0.904295684,7.85709594 Z M5.96972975,9.10348845 C6.61167096,8.04683348 7.70017996,7.53360106 8.39794214,7.32227007 L9.7934665,5.63162211 C9.87719796,5.54105168 10.0446609,5.66181225 9.98883991,5.78257282 L9.09570432,7.86569263 C9.17943578,8.65063632 9.15152529,9.88843215 8.53749457,10.914897 C7.83973239,12.0923125 6.55584998,12.6055449 5.91390878,12.7866858 C5.69062488,12.8470661 5.46734098,12.6961154 5.43943049,12.4545942 C5.35569903,11.7300308 5.27196757,10.2507139 5.96972975,9.10348845 Z M0.904295684,13.0570959 L0.0111600933,11.0005896 C-0.0446608811,10.8493759 0.122802042,10.7284049 0.206533504,10.8493759 L1.60205786,12.5127266 C2.29982004,12.7244258 3.38832904,13.2687951 4.03027025,14.2970483 C4.72803243,15.4462724 4.64430097,16.9281667 4.56056951,17.6539925 C4.53265902,17.8959344 4.30937512,18.0471481 4.08609122,17.9866626 C3.44415002,17.7749634 2.16026761,17.2608368 1.46250543,16.1116127 C0.848474709,15.1136023 0.848474709,13.8434072 0.904295684,13.0570959 Z M9.7934665,10.8501027 C9.87719796,10.7291441 10.0446609,10.8501027 9.98883991,10.9710614 L9.09570432,13.0575984 C9.17943578,13.8438297 9.15152529,15.083656 8.53749457,16.1118046 C7.83973239,17.2911516 6.55584998,17.805226 5.91390878,17.986664 C5.69062488,18.0471433 5.46734098,17.895945 5.43943049,17.6540276 C5.35569903,16.9282756 5.27196757,15.446532 5.96972975,14.2974247 C6.61167096,13.269276 7.70017996,12.7552017 8.39794214,12.5132844 L9.7934665,10.8501027 Z M4.56056951,22.8268478 C4.53265902,23.0678316 4.30937512,23.2485694 4.08609122,23.1883234 C3.44415002,22.9774627 2.16026761,22.4653722 1.46250543,21.3206995 C0.848474709,20.3266416 0.848474709,19.061477 0.904295684,18.2782799 L0.0111600933,16.1997952 C-0.0446608811,16.0491804 0.122802042,15.9286885 0.206533504,16.0491804 L1.60205786,17.7059435 C2.29982004,17.9168043 3.38832904,18.4590177 4.03027025,19.4831986 C4.72803243,20.6278713 4.64430097,22.1038966 4.56056951,22.8268478 Z M9.7934665,16.0501027 C9.87719796,15.9291441 10.0446609,16.0501027 9.98883991,16.1710614 L9.09570432,18.2575984 C9.17943578,19.0438297 9.15152529,20.283656 8.53749457,21.3118046 C7.83973239,22.4911516 6.55584998,23.005226 5.91390878,23.186664 C5.69062488,23.2471433 5.46734098,23.095945 5.43943049,22.8540276 C5.35569903,22.1282756 5.27196757,20.646532 5.96972975,19.4974247 C6.61167096,18.469276 7.70017996,17.9552017 8.39794214,17.7132844 L9.7934665,16.0501027 Z\"\n\n  static grass = \"M7.84,13.65 C7.84,14.0365993 7.52659932,14.35 7.14,14.35 C6.75340068,14.35 6.44,14.0365993 6.44,13.65 L6.44,1.225 C6.44,0.838400675 6.75340068,0.525 7.14,0.525 C7.52659932,0.525 7.84,0.838400675 7.84,1.225 L7.84,13.65 Z M9.76771633,13.5101307 C9.65166436,13.8789002 9.25863886,14.0837683 8.88986932,13.9677163 C8.52109977,13.8516644 8.3162317,13.4586389 8.43228367,13.0898693 C9.18813658,10.6880529 9.65450794,8.95436614 9.82936267,7.90675821 C10.0346189,6.67700567 10.7835531,5.30096387 12.0601551,3.75439087 C12.3062582,3.45624277 12.747461,3.41405199 13.0456091,3.66015512 C13.3437572,3.90625824 13.385948,4.34746104 13.1398449,4.64560913 C12.0060273,6.01920224 11.368169,7.19116044 11.21026,8.13724179 C11.0219494,9.26546775 10.5417799,11.0504477 9.76771633,13.5101307 Z M5.59075624,13.1866165 C5.65337622,13.5681106 5.39487765,13.9281363 5.01338351,13.9907562 C4.63188938,14.0533762 4.27186375,13.7948776 4.20924376,13.4133835 C3.80261018,10.9360861 3.28292518,9.12384906 2.66724191,7.99263365 L0.785166432,4.53463366 C0.600353367,4.19507045 0.725803141,3.7699795 1.06536634,3.58516643 C1.40492955,3.40035337 1.8300205,3.52580314 2.01483357,3.86536634 L3.89690904,7.32336635 C4.60198048,8.6188176 5.16091184,10.5679139 5.59075624,13.1866165 Z\"\n}","import * as React from \"react\";\nimport * as d3 from \"d3\";\nimport {Icons} from \"../res/imgs/Icons\";\n\n\nexport default class AnimatedRelations extends React.Component {\n\n  constructor(params) {\n    super(params);\n\n    const {animObjW, animObjH} = this.props;\n    this.data = [];\n\n    this.width = 800;\n    this.height = 300;\n    this.padding = {top: 0, right: animObjW * 2, bottom: animObjH, left: animObjW * 2};\n    this.innerWidth = this.width - this.padding.left - this.padding.right;\n    this.innerHeight = this.height - this.padding.top - this.padding.bottom;\n  }\n\n  drawStaticSvg() {\n    const {width, height, padding, innerWidth, innerHeight} = this;\n    const {staticObjW, staticObjH} = this.props;\n\n    const svg = d3.select('.AnimatedRelations')\n      .append('svg')\n      .attr('width', width)\n      .attr('height', height);\n\n    this.mainGroup = svg.append('g')\n      .attr('width', innerWidth)\n      .attr('height', innerHeight)\n      .attr('class', 'main-group')\n      .attr('transform', `translate(${padding.left},${padding.top})`);\n\n    const backgroundGroup = this.mainGroup.append('g')\n      .attr('class', 'background-group')\n    for (let i = 0; i < 30; i++) {\n      backgroundGroup.append('path')\n        .attr('d', Icons.grass)\n        .attr('fill', '#c2eedc')\n        .attr('transform', `translate(${this.getRandomInRange(0, innerWidth)},${this.getRandomInRange(0, innerHeight)})`)\n    }\n\n    this.mainGroup.append('g')\n      .attr('class', 'static-obj-group')\n      .attr('transform', `translate(${innerWidth / 2 - staticObjW / 2},${innerHeight / 2 - staticObjH})`);\n\n    this.mainGroup.append('g')\n      .attr('class', 'anim-obj-group')\n  }\n\n  drawStaticObjects() {\n    const {name, staticObj, staticObjBackground, staticObjFill} = this.props;\n\n    const staticGroup = this.mainGroup.selectAll('.static-obj-group')\n    staticGroup.selectAll('path').remove()\n    staticGroup\n      .append('path')\n      .attr('class', 'background')\n      .attr('d', staticObjBackground)\n      .attr('fill', 'white');\n    staticGroup\n      .append('path')\n      .attr('class', name)\n      .attr('d', staticObj)\n      .attr('fill', staticObjFill);\n  }\n\n  drawDynamicObjects() {\n    const {animObj, animObjW, animObjCount} = this.props;\n\n    const animObjGroup = this.mainGroup.selectAll('.anim-obj-group')\n      .selectAll('g')\n      .data(this.data)\n\n    animObjGroup.enter()\n      .filter((d, i) => i < animObjCount)\n      .append('g')\n      .attr('transform', d => `translate(${d.x},${d.y})`)\n      .attr('class', d => 'animIcon ' + d.class)\n      .append('path')\n      .attr('fill', d => d.fill)\n      .attr('d', animObj)\n\n    animObjGroup.exit().remove()\n\n    this.mainGroup.selectAll('.cow')\n      .transition()\n      .ease(d3.easeLinear)\n      .on('start', function walkAnimation() {\n        d3.active(this)\n          .duration(d => d.randomDuration)\n          .attr('transform', d => `translate(${d.x + animObjW},${d.y}) scale(1,1)`)\n          .transition()\n          .duration(500)\n          .attr('transform', d => `translate(${d.x + animObjW},${d.y}) scale(-1,1)`)\n          .transition()\n          .duration(d => d.randomDuration)\n          .attr('transform', d => `translate(${d.x - animObjW},${d.y}) scale(-1,1)`)\n          .transition()\n          .duration(500)\n          .attr('transform', d => `translate(${d.x - animObjW},${d.y}) scale(1,1)`)\n          .transition()\n          .on('start', walkAnimation)\n      })\n  }\n\n  prepareData() {\n    const {innerWidth, innerHeight} = this;\n    const {animObjName, animObjCount} = this.props;\n\n    this.data = [];\n\n    for (let i = 0; i < animObjCount; i++) {\n      this.data.push({\n        x: Math.random() * innerWidth,\n        y: Math.random() * innerHeight,\n        fill: '#' + (111 * this.getRandomInRange(0, 9) + 222),\n        class: animObjName,\n        randomDuration: this.getRandomInRange(3000, 6000)\n      })\n    }\n  }\n\n  getRandomInRange(start, end) {\n    return Math.floor(Math.random() * (end - start) + start);\n  }\n\n  componentWillMount() {\n    this.prepareData()\n  }\n\n  componentDidMount() {\n    this.drawStaticSvg();\n  }\n\n  componentDidUpdate() {\n    this.prepareData();\n    this.drawDynamicObjects();\n    this.drawStaticObjects();\n  }\n\n  render() {\n    return (\n      <div className='AnimatedRelations'/>\n    )\n  }\n}","import * as React from \"react\";\nimport SvgImage from \"../res/imgs/SvgImage\";\nimport {Icons} from \"../res/imgs/Icons\";\nimport AnimatedRelations from \"./AnimatedRelations\";\n\nexport default class Introduction extends React.Component {\n\n  constructor(params) {\n    super(params);\n\n    this.state = {\n      areaSize: 10,\n      sizeState: 0,\n      staticObj: Icons.farmSmall,\n      staticObjBackground: Icons.farmSmallBackground,\n      staticObjFill: '#4ec291'\n    }\n  }\n\n  render() {\n    const {areaSize, sizeState, staticObj, staticObjBackground, staticObjFill} = this.state;\n    return (\n      <div className='Introduction'>\n        <h2>Grössenkategorien</h2>\n\n        <div className='horizontal-container top'>\n          <SvgImage className='farmSmall'\n                    src={Icons.farmSmall} width={90} vbWidth={155} vbHeight={143}\n                    fill={'#4ec291'}/>\n          <SvgImage className='farmMedium'\n                    src={Icons.farmMedium} width={100} vbWidth={155} vbHeight={143}\n                    fill={'#42a3f1'}/>\n          <SvgImage className='farmLarge'\n                    src={Icons.farmLarge} width={110} vbWidth={155} vbHeight={143}\n                    fill={'#e396d1'}/>\n        </div>\n\n        <div className='horizontal-container bottom'>\n          <div>\n            <h3>kleine Betriebe</h3>\n            <p>bis 10 Hektar</p>\n          </div>\n          <div>\n            <h3>mittlere Betriebe</h3>\n            <p>zwischen 10 und 30 Hektar</p>\n          </div>\n          <div>\n            <h3>Grossbetriebe</h3>\n            <p>50 Hektar und mehr</p>\n          </div>\n        </div>\n\n        <div className='capacity-container'>\n          <AnimatedRelations name='farmSmall' animObjName='cow'\n                             animObj={Icons.cow}\n                             animObjCount={areaSize * 2} animObjW={40} animObjH={27}\n                             staticObj={staticObj}\n                             staticObjBackground={staticObjBackground}\n                             staticObjW={109} staticObjH={66} staticObjFill={staticObjFill}/>\n\n          <div className='label-container'>\n            <p>{this.getExplanationText(sizeState)}</p>\n          </div>\n\n          <div className='slider-container'>\n            <input id='elements-slider' type='range'\n                   min={1} max={50}\n                   value={areaSize}\n                   list='tickMarks'\n                   onChange={() => this.changeElementsCount()}/>\n            <datalist id='tickMarks'>\n              <option value='10'/>\n              <option value='30'/>\n            </datalist>\n            <div className='tick-labels'>\n              <p>10 ha</p>\n              <p>30 ha</p>\n              <p>50+ ha</p>\n            </div>\n          </div>\n\n        </div>\n      </div>\n    )\n  }\n\n  getExplanationText(sizeState) {\n    const {areaSize} = this.state;\n    switch (sizeState) {\n      case 0:\n        return `Auf einem kleinen Hof mit ${areaSize} Hektar können ${areaSize * 2} Kühe gehalten werden. Auf der gleichen Fläche wäre es auch möglich ${areaSize * 6} Tonnen Weizen anzubauen.`;\n      case 1:\n        return `Bei einer mittleren Bauernhofsgrösse können bereits beachtliche Erträge erzielt werden: ${areaSize} reichen aus, um entweder ${areaSize * 2} Kühe zu halten oder ${areaSize * 6} Tonnen Weizen zu ernten.`;\n      case 2:\n        return `Schweizer Grossbetriebe sind zwar nicht mit Grossbetrieben wie jenen aus den USA vergleichbar. Ein Hof mit ${areaSize} Hektar übertrifft die Wirtschaftlichkeit von kleinen Betrieben aber um das x-fache.`\n      default:\n        return '?'\n    }\n  }\n\n  changeElementsCount() {\n    const newValue = document.getElementById('elements-slider').valueAsNumber;\n    if (newValue <= 10) {\n      this.setState({\n        sizeState: 0,\n        staticObj: Icons.farmSmall,\n        staticObjBackground: Icons.farmSmallBackground,\n        staticObjFill: '#4ec291'\n      })\n    } else if (newValue > 10 && newValue < 30) {\n      this.setState({\n        sizeState: 1,\n        staticObj: Icons.farmMedium,\n        staticObjBackground: Icons.farmMediumBackround,\n        staticObjFill: '#42a3f1'\n      })\n    } else {\n      this.setState({\n        sizeState: 2,\n        staticObj: Icons.farmLarge,\n        staticObjBackground: Icons.farmLargeBackround,\n        staticObjFill: '#e396d1'\n      })\n    }\n    this.setState({areaSize: newValue})\n\n  }\n}","import * as React from 'react';\nimport * as d3 from 'd3';\n\nexport default class DraggableBarChart extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      showAnswer: props.showAnswer\n    };\n    this.chartWidth = 500;\n    this.chartHeight = 300;\n\n    this.maxScaleValue = Math.round(d3.max(this.props.data, d => d.maxInPct)) * 1.2;\n    this.durations = {\n      anim1: 1000,\n      anim2: 1500,\n      anim3: 2000,\n      animSum: 4500\n    }\n  }\n\n  /**\n   * Based on https://bl.ocks.org/AlainRo/9264cd08e341f2c92f020c39642c34d1\n   */\n  drawChart() {\n    const {data} = this.props;\n    const {chartHeight, chartWidth} = this;\n\n    let barsGap = 22;\n\n    let margin = {\n      top: 20,\n      right: 30,\n      bottom: 50,\n      left: 50,\n    };\n\n    const scaleX = d3.scaleBand()\n      .domain(data.map(d => d.label))\n      .rangeRound([0, chartWidth]);\n\n    const scaleY = d3.scaleLinear()\n      .domain([0, this.maxScaleValue])\n      .rangeRound([chartHeight, 0]);\n\n    const x = d3.scaleLinear()\n      .domain([0, data.length])\n      .rangeRound([0, chartWidth]);\n\n    const colorScale = d3.scaleOrdinal()\n      .range(['#4ec291', '#42a3f1', '#e396d1']);\n\n    const svg = d3.select('.chart-container')\n      .append('svg')\n      .attr('width', chartWidth + margin.left + margin.right)\n      .attr('height', chartHeight + margin.top + margin.bottom);\n\n    const brushY = d3.brushY()\n      .extent((d, i) => [[x(i) + barsGap / 2, 0], [x(i) + x(1) - barsGap / 2, chartHeight]])\n      .on('brush', brushmove)\n      .on('end', brushend);\n\n    svg.append('defs')\n      .append('pattern')\n      .attr('id', 'dashed-fill')\n      .attr('width', 8)\n      .attr('height', 8)\n      .attr('patternUnits', 'userSpaceOnUse')\n      .append('rect')\n      .attr('width', 4)\n      .attr('height', 8)\n      .attr('transform', 'translate(0,0)');\n\n    this.mainGroup = svg.append('g')\n      .attr('transform', `translate(${margin.left},${margin.top})`);\n\n    const barContainer = this.mainGroup.selectAll('.bar')\n      .data(data)\n      .enter()\n      .append('g')\n      .attr('id', (d, i) => 'bar' + i)\n      .attr('class', 'bar')\n      .call(brushY)\n      .call(brushY.move, d => [d.value, 0].map(scaleY));\n\n    this.mainGroup.selectAll('.selection')\n      .data(data)\n      .attr('fill', (d, i) => colorScale(i))\n      .attr('fill-opacity', 1)\n      .attr('height', d => chartHeight - scaleY(d.value))\n      .attr('y', d => scaleY(d.value));\n\n    barContainer.append('rect')\n      .attr('class', 'handle-bar')\n      .attr('width', scaleX.bandwidth() - barsGap)\n      .attr('height', 2)\n      .attr('y', d => scaleY(d.value))\n      .attr('x', (d, i) => x(i) + barsGap / 2)\n      .attr('fill', 'url(#dashed-fill)');\n\n    barContainer.append('text')\n      .attr('text-anchor', 'middle')\n      .attr('class', 'label-top')\n      .attr('y', d => scaleY(d.value))\n      .attr('x', (d, i) => x(i) + x(0.5))\n      .attr('dy', -4)\n      .style('fill', 'currentColor')\n      .text(d => d3.format('.0%')(d.value));\n\n    barContainer.append('text')\n      .attr('text-anchor', 'middle')\n      .attr('class', 'x-axis')\n      .attr('y', chartHeight)\n      .attr('x', (d, i) => x(i) + x(0.5))\n      .attr('dy', 22)\n      .attr('fill', 'currentColor')\n      .text((d, i) => data[i].label);\n\n    const textLeft = barContainer.append('text')\n      .attr('class', 'label-answer-left header-small')\n      .attr('text-anchor', 'end')\n      .attr('transform', 'translate(6,-2)')\n      .attr('y', d => scaleY(d.value))\n      .attr('x', (d, i) => x(i))\n      .attr('fill', 'currentColor');\n\n    textLeft.append('tspan')\n      .attr('x', (d, i) => x(i))\n      .text(\"deine\");\n    textLeft.append('tspan')\n      .attr('x', (d, i) => x(i))\n      .attr('dy', 12)\n      .text(\"Antwort\");\n\n    this.initExplanationContainer();\n    drawHandleNorth();\n\n    function brushmove() {\n      if (!d3.event.sourceEvent) return;\n      if (d3.event.sourceEvent.type === 'brush') return;\n      if (!d3.event.selection) return;\n\n      const d0 = d3.event.selection.map(scaleY.invert);\n      const d = d3.select(this).select('.selection');\n\n      d0[0] > 0 ? d.datum().value = d0[0] : d.datum().value = 0.01; // Change the value of the original data\n\n      update();\n    }\n\n    function brushend() {\n      if (!d3.event.sourceEvent) return;\n      if (d3.event.sourceEvent.type === 'brush') return;\n      if (!d3.event.selection) { // just in case of click with no move\n        barContainer.call(brushY.move, d => [d.value, 0].map(scaleY))\n      }\n    }\n\n    function update() {\n      barContainer\n        .call(brushY.move, d => [d.value, 0].map(scaleY))\n        .selectAll('.label-top, .label-answer-left, .handle-bar')\n        .attr('y', d => scaleY(d.value));\n      barContainer.selectAll('.label-top')\n        .text(d => d3.format('.0%')(d.value));\n\n      drawHandleNorth();\n    }\n\n    function drawHandleNorth() {\n      barContainer.selectAll('.handle--n')\n        .attr('height', 30);\n    }\n  }\n\n  initExplanationContainer() {\n    const {chartWidth, chartHeight} = this;\n\n    const scaleY = d3.scaleLinear()\n      .domain([0, this.maxScaleValue])\n      .rangeRound([chartHeight, 0]);\n\n    const explanationContainer = this.mainGroup.append('g')\n      .attr('class', 'explanation-container')\n      .attr('opacity', 1)\n      .data(this.props.data)\n      .attr('transform', d => `translate(140, ${scaleY(d.value) - 92})`)\n      .attr('dx', chartWidth / 2)\n      .attr('pointer-events', 'none')\n\n    explanationContainer.append('rect')\n      .attr('width', 334)\n      .attr('height', 60)\n      .attr('fill', '#ebebe5');\n\n    const textContainer = explanationContainer.append('text')\n      .attr('x', 8)\n      .attr('y', 24)\n      .attr('fill', 'black');\n    textContainer.append('tspan')\n      .text('Schätze, wie sich die Anzahl der Bauernhöfe');\n    textContainer.append('tspan')\n      .text('relativ zum Jahr 1985 verändert hat!')\n      .attr('dy', 26)\n      .attr('x', 8);\n  }\n\n  animateExplanationLabel() {\n    const {mainGroup, chartHeight, durations} = this;\n\n    const scaleY = d3.scaleLinear()\n      .domain([0, this.maxScaleValue])\n      .rangeRound([chartHeight, 0]);\n\n    const explanationContainer = mainGroup.selectAll('.explanation-container');\n\n    explanationContainer.transition()\n      .duration(durations.anim1)\n      .attr('transform', d => `translate(140, ${scaleY(d.random1) - 92})`)\n      .transition()\n      .duration(durations.anim2)\n      .attr('transform', d => `translate(140, ${scaleY(d.random2) - 92})`)\n      .transition()\n      .duration(durations.anim3)\n      .attr('transform', d => `translate(140, ${scaleY(d.value) - 92})`)\n      .transition()\n      .delay(200)\n      .duration(1500)\n      .attr('transform', 'translate(-38,-10)');\n\n    explanationContainer.select('rect')\n      .transition()\n      .attr('fill', '#ebebe5')\n      .transition()\n      .delay(durations.animSum)\n      .duration(1500)\n      .attr('fill', 'transparent');\n\n    const arrow = explanationContainer.append('polygon')\n      .attr('points', '0,15 20,30 18,20 45,22 43,15 45,8 18,10 20,0')\n      .attr('transform', 'translate(-27,86) rotate(-60)')\n      .attr('fill', 'white')\n      .attr('stroke', '#222')\n      .attr('stroke-width', 1);\n\n    arrow.transition()\n      .delay(durations.animSum + 300)\n      .duration(300)\n      .attr('opacity', 0)\n  }\n\n  animateBars() {\n    const {mainGroup, chartHeight, durations} = this;\n\n    const scaleY = d3.scaleLinear()\n      .domain([0, this.maxScaleValue])\n      .rangeRound([chartHeight, 0]);\n\n    mainGroup.selectAll('.selection')\n      .transition()\n      .duration(durations.anim1)\n      .attr('height', d => chartHeight - scaleY(d.random1))\n      .attr('y', d => scaleY(d.random1))\n      .transition()\n      .duration(durations.anim2)\n      .attr('height', d => chartHeight - scaleY(d.random2))\n      .attr('y', d => scaleY(d.random2))\n      .transition()\n      .duration(durations.anim3)\n      .attr('height', d => chartHeight - scaleY(d.value))\n      .attr('y', d => scaleY(d.value))\n\n    mainGroup.selectAll('.label-top')\n      .transition()\n      .duration(durations.anim1)\n      .attr('y', d => scaleY(d.random1))\n      .on(\"start\", function () {\n        d3.active(this)\n          .tween(\"text\", d => {\n            const that = d3.select(this);\n            const i = d3.interpolateNumber(that.text().replace(/%/g, \"\") / 100, d.random1);\n            return t => that.text(d3.format('.0%')(i(t)));\n          })\n      })\n      .transition()\n      .duration(durations.anim2)\n      .attr('y', d => scaleY(d.random2))\n      .on(\"start\", function () {\n        d3.active(this)\n          .tween(\"text\", d => {\n            const that = d3.select(this);\n            const i = d3.interpolateNumber(that.text().replace(/%/g, \"\") / 100, d.random2);\n            return t => that.text(d3.format('.0%')(i(t)));\n          })\n      })\n      .transition()\n      .duration(durations.anim3)\n      .attr('y', d => scaleY(d.value))\n      .on(\"start\", function () {\n        d3.active(this)\n          .tween(\"text\", d => {\n            const that = d3.select(this);\n            const i = d3.interpolateNumber(that.text().replace(/%/g, \"\") / 100, d.value);\n            return t => that.text(d3.format('.0%')(i(t)));\n          })\n      });\n\n    this.mainGroup.selectAll('.label-answer-left')\n      .classed('on-hover-only', false)\n      .transition()\n      .attr('opacity', 1)\n      .duration(durations.anim1)\n      .attr('y', d => scaleY(d.random1))\n      .transition()\n      .duration(durations.anim2)\n      .attr('y', d => scaleY(d.random2))\n      .transition()\n      .duration(durations.anim3)\n      .attr('y', d => scaleY(d.value))\n      .attr('opacity', 0)\n\n    this.mainGroup.selectAll('.handle-bar')\n      .classed('on-hover-only', false)\n      .transition()\n      .attr('opacity', 1)\n      .duration(durations.anim1)\n      .attr('y', d => scaleY(d.random1))\n      .transition()\n      .duration(durations.anim2)\n      .attr('y', d => scaleY(d.random2))\n      .transition()\n      .duration(durations.anim3)\n      .attr('y', d => scaleY(d.value))\n      .attr('opacity', 0)\n\n    setTimeout(() => {\n      this.mainGroup.selectAll('.handle-bar, .label-answer-left')\n        .classed('on-hover-only', true)\n    }, durations.animSum)\n  }\n\n  showAnswer() {\n    const {data} = this.props;\n    let chartHeight = 300;\n\n    const scaleY = d3.scaleLinear()\n      .domain([0, this.maxScaleValue])\n      .rangeRound([chartHeight, 0]);\n\n    this.mainGroup.selectAll('.selection')\n      .data(data)\n      .transition()\n      .duration(2000)\n      .attr('height', d => chartHeight - scaleY(d.maxInPct))\n      .attr('y', d => scaleY(d.maxInPct));\n\n    this.mainGroup.selectAll('.label-top')\n      .transition()\n      .duration(2000)\n      .attr('y', d => scaleY(d.maxInPct))\n      .on(\"start\", function () {\n        d3.active(this)\n          .tween(\"text\", d => {\n            const that = d3.select(this);\n            const i = d3.interpolateNumber(that.text().replace(/%/g, \"\") / 100, d.maxInPct);\n            return t => that.text(d3.format('.0%')(i(t)));\n          })\n      });\n\n    const textLeft = this.mainGroup.selectAll('.label-answer-left, .handle-bar')\n      .classed('header-small', false)\n      .classed('on-hover-only', false)\n      .attr('opacity', 1);\n\n    textLeft.selectAll('tspan').remove();\n    textLeft.append('tspan')\n      .attr('dy', 8)\n      .text(d => d3.format('.0%')(d.value));\n\n    this.mainGroup.selectAll('*').attr('pointer-events', 'none')\n  }\n\n  componentDidMount() {\n    this.drawChart();\n  }\n\n  componentDidUpdate() {\n    const showAnswer = this.props.showAnswer;\n    const isAnimating = this.props.isAnimating;\n\n    if (showAnswer) this.showAnswer();\n    if (!showAnswer && isAnimating) {\n      this.animateBars();\n      this.animateExplanationLabel();\n    }\n  }\n\n  render() {\n    return (\n      <div className='DraggableBarChart'>\n        <div className='chart-container'/>\n      </div>\n    )\n  }\n}","import * as React from \"react\";\nimport DraggableBarChart from \"./DraggableBarChart\";\nimport Button from \"react-bootstrap/Button\";\nimport DataService from \"../services/DataService\";\n\nexport default class QuizPage extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      quizStarted: false,\n      showAnswer: false,\n      isAnimating: false\n    };\n    this.componentRef = React.createRef();\n  }\n\n  componentDidMount() {\n    window.addEventListener('scroll', this.handleScroll);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('scroll', this.handleScroll);\n  }\n\n  handleScroll = e => {\n    const scrollTop = e.target.scrollingElement.scrollTop;\n    const offsetTop = this.componentRef.current.offsetTop;\n    const elementHeight = this.componentRef.current.offsetHeight;\n    const animStartPos = offsetTop + elementHeight * 0.75 - window.innerHeight;\n\n    if (scrollTop > animStartPos && scrollTop < offsetTop + elementHeight / 2) {\n      if (this.state.isAnimating !== true) {\n        this.setState({isAnimating: true});\n      }\n    } else {\n      if (this.state.isAnimating !== false) {\n        this.setState({isAnimating: false});\n      }\n    }\n  };\n\n  render() {\n    const data = DataService.getQuizData(this.props.data);\n    const showAnswer = this.state.showAnswer;\n\n    return (\n      <div className='QuizPage' ref={this.componentRef} onScroll={this.handleScroll}>\n        <h2>Quiz</h2>\n\n        <p>Ausgehend vom Jahr 1985, wo der Bestand 100% betrug: Wie viele kleine, mittlere und grosse Bauernhöfe gibt\n          es heute?</p>\n\n        <div>\n          <DraggableBarChart showAnswer={showAnswer}\n                             isAnimating={this.state.isAnimating}\n                             data={data}/>\n\n          <div className='toggle-container'>\n            <p className={showAnswer ? 'show' : 'hide'}>Tatsächlich ist es so, dass besonders kleine Betriebe leiden:\n              Ihr Land und die Höfe werden von grösseren Betrieben übernommen. Auch mittelgrosse Betriebe haben\n              Schwierigkeiten. Nur grosse und zusammengelegte Höfe können sich behaupten: Ihre Anzahl ist um das\n              Mehrfache gestiegen.</p>\n            <Button className={!showAnswer ? 'show fade-in' : 'hide'}\n                    onClick={() => this.setState({showAnswer: true})}\n                    variant=\"dark\">Antwort zeigen</Button>\n          </div>\n\n        </div>\n      </div>\n    )\n  }\n}","import * as React from 'react';\nimport * as d3 from 'd3';\nimport DataService from \"../services/DataService\";\n\nexport default class FarmsCountStackedAreaChart extends React.Component {\n\n  constructor(params) {\n    super(params);\n\n    this.width = 780;\n    this.height = 500;\n    this.margin = {top: 10, bottom: 80, left: 90, right: 70};\n    this.innerHeight = this.height - this.margin.top - this.margin.bottom;\n    this.innerWidth = this.width - this.margin.left - this.margin.right;\n    this.labelMap = DataService.getLabelMap();\n  }\n\n  /**\n   * Based on https://observablehq.com/@tmcw/stacked-area-chart\n   */\n  init() {\n    const {innerWidth, innerHeight, width, height, margin} = this;\n    const {data} = this.props;\n\n    const keys = DataService.getFilteredFarmsKeys(data);\n    const stack = d3.stack().keys(keys);\n    const series = stack(data);\n    const colorScale = d3.scaleOrdinal()\n      .range(['#c2eedc', '#7fd1af', '#1cb373', '#168c5a',\n        '#66bbff', '#1e8cd3',\n        '#ebb0dd', '#d674c0']);\n\n    const xScale = d3.scaleLinear()\n      .domain(d3.extent(data, d => d.year))\n      .range([0, innerWidth]);\n\n    const yScale = d3.scaleLinear()\n      .domain([0, d3.max(series, series => d3.max(series, d => d[1]))])\n      .range([innerHeight, 0]);\n\n    const area = d3.area()\n      .x(d => xScale(d.data.year))\n      .y0(d => yScale(d[0]))\n      .y1(d => yScale(d[1]));\n\n    const svg = d3.select('.FarmsCountStackedAreaChart')\n      .select('.chart-container')\n      .append('svg')\n      .attr('width', width)\n      .attr('height', height);\n\n    this.mainGroup = svg.append('g')\n      .attr('class', 'main')\n      .attr('transform', `translate(${margin.left}, ${margin.top})`);\n\n    // create the stacked area paths\n    this.mainGroup.append('g').attr('class', 'chart')\n      .selectAll('.area')\n      .data(series)\n      .enter().append('path')\n      .attr('class', 'area')\n      .attr('fill', d => colorScale(d.key))\n      .attr('d', area);\n\n    this.initAxes(xScale, yScale)\n    this.initLegend(keys, colorScale)\n  }\n\n  initAxes(xScale, yScale) {\n    const {innerWidth, innerHeight} = this;\n\n    const xAxis = d3.axisBottom()\n      .scale(xScale)\n      .tickFormat(d3.format(''));\n\n    const yAxis = d3.axisLeft()\n      .scale(yScale);\n\n    // x axis\n    this.mainGroup.append('g')\n      .attr('class', 'axis x')\n      .attr('transform', `translate(0, ${innerHeight})`)\n      .call(xAxis);\n\n    // x axis label\n    d3.select('g.axis.x')\n      .append('text')\n      .attr('class', 'header')\n      .attr('x', innerWidth / 2)\n      .attr('y', 50)\n      .text('Jahr')\n      .style('text-anchor', 'middle');\n\n    // generate y axis\n    this.mainGroup.append('g')\n      .attr('class', 'axis y')\n      .call(yAxis);\n\n    // y axis label\n    d3.select('.y.axis')\n      .append('text')\n      .attr('class', 'header')\n      .attr('x', -innerHeight / 2)\n      .attr('y', -70)\n      .attr('transform', 'rotate(-90)')\n      .text('Anz. Bauernhöfe')\n      .attr('text-anchor', 'middle');\n  }\n\n  initLegend(keys, colorScale) {\n    const lineHeight = 22;\n    const padding = 8;\n\n    const legendWidth = 100 + 2 * padding;\n    const legendHeight = keys.length * lineHeight + padding;\n\n    const legend = this.mainGroup.append('g')\n      .attr('class', 'legend')\n      .attr('width', legendWidth)\n      .attr('height', legendHeight)\n      .attr('transform', `translate(${this.innerWidth - legendWidth - 12},${padding - 18})`);\n\n    const legendEntry = legend.append('g')\n      .attr('class', 'entries')\n      .attr('transform', `translate(${padding},${padding-8})`)\n      .selectAll('rect')\n      .data(keys.reverse())\n      .enter();\n\n    legendEntry.append('rect')\n      .attr('y', (d, i) => lineHeight * i)\n      .attr('width', 12)\n      .attr('height', 12)\n      .attr('fill', d => colorScale(d));\n\n    legendEntry.append('text')\n      .attr('x', 20)\n      .attr('y', (d, i) => lineHeight * i + 10)\n      .text(d => this.labelMap[d]);\n  }\n\n  componentDidMount() {\n    this.init()\n  }\n\n  render() {\n    return (\n      <div className='FarmsCountStackedAreaChart'>\n        <h2>Gesamthafte Bauernhofsentwicklung</h2>\n        <div className='chart-container'/>\n        <p>Tendenz stark sinkend: Seit 1985 sind die Hälfte der Bauernhöfe verschwunden oder wurden in andere Höfe\n          integriert.</p>\n      </div>\n    )\n  }\n}","import * as React from \"react\";\nimport SvgImage from \"../res/imgs/SvgImage\";\nimport {Icons} from \"../res/imgs/Icons\";\n\n\nexport default class Footer extends React.Component {\n\n  render() {\n    return (\n      <div className='Footer'>\n        <h2>Credits</h2>\n        <p>Semesterarbeit für das Modul \"Informationsvisualisierung\" an der Fachhochschule Nordwestschweiz. <u>Konzept,\n          Design, Code:</u> Fabian Schwander <u>Dozent/Betreuung:</u> Marco Soldati</p>\n        <p>Daten zu Bauernhofsbeständen: Bundesamt für Statistik&nbsp;\n          <a target='_blank' rel=\"noopener noreferrer\"\n             href='https://www.bfs.admin.ch/bfs/de/home/statistiken/kataloge-datenbanken/tabellen.assetdetail.8346709.html'>></a>\n        </p>\n        <p>\n          Daten zu Anbaumöglichkeiten: Schweizer Bauernverband / Daniel Erdin, Leiter Agristat&nbsp;\n          <a target='_blank' rel='noreferrer noopener'\n             href='https://www.sbv-usp.ch/de/services/agristat/'>></a>\n        </p>\n\n        <div className='horizontal-container centered'>\n          <div>\n            <SvgImage className='farmOrig' src={Icons.farmOriginal} width={65} vbWidth={155} vbHeight={110}/>\n            <p>by Symbolon (modifiziert)</p>\n          </div>\n          <div>\n            <SvgImage className='cow' src={Icons.cow} width={40} vbWidth={40} vbHeight={27}/>\n            <p>by Dumitriu Robert</p>\n          </div>\n          <div>\n            <SvgImage className='wheat' src={Icons.wheat} width={45} vbWidth={10} vbHeight={28}/>\n            <p>by Rose Alice Design</p>\n          </div>\n        </div>\n\n        <p>...alle Icons vom the Noun Project&nbsp;\n          <a target='_blank' rel=\"noopener noreferrer\"\n             href='https://thenounproject.com/'>></a>\n        </p>\n\n      </div>\n    )\n  }\n}","import React from \"react\";\nimport cowImg from \"../res/imgs/cow.svg\";\nimport wheatImg from \"../res/imgs/wheat.svg\";\nimport {Image} from \"react-bootstrap\";\n\nexport default class GrowPossibilities extends React.Component {\n\n  render() {\n    return (\n      <div className='GrowPossibilities'>\n        <h2>Anbaumöglichkeiten pro Hektar</h2>\n\n        <div className='horizontal-container relations-container'>\n          <div>\n            {this.printIcons('cow', cowImg, 2)}\n            <p>In der Schweiz reicht ein Hektar Land zur Ernährung von rund 2 Kühen.</p>\n          </div>\n\n          <div>\n            {this.printIcons('wheat', wheatImg, 6)}\n            <p>Auf einem Hektar Ackerland können 6 Tonnen Weizen angebaut werden.</p>\n          </div>\n\n        </div>\n      </div>\n    )\n  }\n\n  printIcons(name, type, count) {\n    let container = [];\n    for (let i = 0; i < count; i++) {\n      container[i] = <Image src={type} key={name + i}/>\n    }\n    return <div className={name}>{container}</div>;\n  }\n}","import * as React from \"react\";\nimport DataService from \"./services/DataService\";\nimport RelativeLineChart from \"./components/RelativeLineChart\";\nimport Header from \"./components/Header\";\nimport Introduction from \"./components/Introduction\";\nimport QuizPage from \"./components/QuizPage\";\nimport FarmsCountStackedAreaChart from \"./components/FarmsCountStackedAreaChart\";\nimport Footer from \"./components/Footer\";\nimport GrowPossibilities from \"./components/GrowPossibilities\";\n\nclass App extends React.Component {\n\n  constructor(params) {\n    super(params);\n    this.state = {}\n  }\n\n  componentWillMount() {\n    this.loadData()\n  }\n\n  render() {\n    const {data, lineChartData, labelMap} = this.state;\n    const dataReady = data !== undefined;\n\n    return (\n      <div className=\"App\">\n        <Header/>\n        <GrowPossibilities/>\n        <Introduction/>\n        {dataReady ? <QuizPage data={data}/> : null}\n        {dataReady ? <FarmsCountStackedAreaChart data={data}/> : null}\n        {dataReady ? <RelativeLineChart data={lineChartData} labelMap={labelMap}/> : null}\n        <Footer/>\n      </div>\n    )\n  }\n\n  async loadData() {\n    const data = await DataService.getFullData();\n    const lineChartData = DataService.getNormalizedLineChartData(data);\n    const labelMap = DataService.getLabelMap()\n\n\n    this.setState({\n      data: data,\n      lineChartData: lineChartData,\n      labelMap: labelMap\n    })\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './shared.scss';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}