{"version":3,"sources":["res/data/farm-sizes.csv","services/DataService.js","components/FarmSizeRelationsChart.js","components/FarmsCountChart.js","res/imgs/SvgImage.js","res/imgs/Icons.js","components/Header.js","components/DraggableBarChart.js","components/QuizPage.js","App.js","index.js","res/imgs/cow.svg","res/imgs/wheat.svg"],"names":["module","exports","__webpack_require__","p","DataService","data","yearMin","yearMax","length","minSmall","area_size_0_1","area_size_1_3","area_size_3_5","area_size_5_10","minMedium","area_size_20_30","area_size_10_20","minLarge","area_size_50_n","area_size_30_50","maxSmall","maxMedium","maxLarge","value","label","size","minYearData","maxYearData","minYear","year","maxYear","random1","random2","maxInPct","activeIndex","i","d3","dataSource","d","total_farms_count","area_valley_in_percent","area_mountain_in_percent","Object","keys","filter","FarmSizeRelationsChart","params","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","activeYear","min","max","margin","top","right","bottom","left","width","height","getCompareYearData","props","processedData","map","colorScale","range","yScale","domain","oldData","xScale","rangeRound","scaleWidth","bandwidth","paddingInner","paddingOuter","selectAll","remove","svg","append","attr","mainGroup","barGroup","enter","concat","text","ticks","select","style","sectorWidth","barWidth","formatInPct","pctValue","drawChart","initLabels","slider","document","getElementById","parseInt","setState","options","react","key","id","labels","push","_this2","className","type","list","onChange","setActiveYear","getSliderDataListOptions","getSliderLabels","React","FarmsCountChart","innerHeight","innerWidth","labelMap","getLabelMap","getFilteredFarmsKeys","series","stack","area","x","y0","y1","initAxes","initLegend","xAxis","scale","tickFormat","yAxis","legendHeight","legend","padding","legendEntry","reverse","init","SvgImage","background","viewBox","_this$style","_this$props","fill","xmlns","xmlnsXlink","stroke","strokeWidth","fillRule","src","Icons","farmSmall","react_default","a","createElement","farmMedium","farmLarge","Header","printIcons","cowImg","wheatImg","SvgImage_SvgImage","name","count","container","Image","DraggableBarChart","showAnswer","chartWidth","chartHeight","maxScaleValue","Math","round","durations","anim1","anim2","anim3","animSum","scaleX","scaleY","brushY","extent","barsGap","on","sourceEvent","selection","d0","invert","datum","barContainer","move","drawHandleNorth","textLeft","initExplanationContainer","explanationContainer","textContainer","transition","duration","delay","_this5","tween","that","replace","t","_this3","_this4","setTimeout","classed","_this6","isAnimating","animateBars","animateExplanationLabel","QuizPage","handleScroll","e","scrollTop","target","scrollingElement","offsetTop","componentRef","current","elementHeight","offsetHeight","quizStarted","window","addEventListener","removeEventListener","getQuizData","ref","onScroll","DraggableBarChart_DraggableBarChart","Button_default","onClick","variant","App","loadData","dataReady","undefined","Header_Header","QuizPage_QuizPage","FarmSizeRelationsChart_FarmSizeRelationsChart","FarmsCountChart_FarmsCountChart","getFullData","ReactDOM","render","src_App"],"mappings":"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","file":"static/js/main.78c1afb4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/farm-sizes.bfe448e9.csv\";","import * as d3 from \"d3\";\nimport dataSource from \"../res/data/farm-sizes.csv\";\n\nexport default class DataService {\n\n  static getQuizData(data) {\n    const yearMin = data[0];\n    const yearMax = data[data.length - 1];\n\n    let minSmall = yearMin.area_size_0_1\n      + yearMin.area_size_1_3\n      + yearMin.area_size_3_5\n      + yearMin.area_size_5_10;\n\n    let minMedium = yearMin.area_size_20_30 + yearMin.area_size_10_20;\n\n    let minLarge = yearMin.area_size_50_n + yearMin.area_size_30_50;\n\n    let maxSmall = yearMax.area_size_0_1\n      + yearMax.area_size_1_3\n      + yearMax.area_size_3_5\n      + yearMax.area_size_5_10;\n\n    let maxMedium = yearMax.area_size_20_30 + yearMax.area_size_10_20;\n\n    let maxLarge = yearMax.area_size_50_n + yearMax.area_size_30_50;\n\n    return [\n      {\n        value: 1,\n        label: \"Kleine Bauernhöfe\",\n        size: \"bis 20 ha\",\n        minYearData: minSmall,\n        maxYearData: maxSmall,\n        minYear: yearMin.year,\n        maxYear: yearMax.year,\n        random1: 1.4,\n        random2: 0.1,\n        maxInPct: maxSmall / minSmall\n      },\n      {\n        value: 1,\n        label: \"Mittlere Bauernhöfe\",\n        size: \"20 bis 50 ha\",\n        minYearData: minMedium,\n        maxYearData: maxMedium,\n        minYear: yearMin.year,\n        maxYear: yearMax.year,\n        random1: 0.6,\n        random2: 3.5,\n        maxInPct: maxMedium / minMedium\n      },\n      {\n        value: 1,\n        label: \"Grosse Bauernhöfe\",\n        size: \"ab 50 ha\",\n        minYearData: minLarge,\n        maxYearData: maxLarge,\n        minYear: yearMin.year,\n        maxYear: yearMax.year,\n        random1: 1.2,\n        random2: 3.0,\n        maxInPct: maxLarge / minLarge\n      }\n    ]\n  }\n\n  static getCompareYearData(data, year) {\n    let activeIndex = 0;\n\n    for (let i = 0; i < data.length; i++) {\n      if (data[i].year < year) {\n        // setting yer on last available data entry\n        activeIndex = i;\n      } else if (data[i].year === year) {\n        // returning when exact same year was found\n        activeIndex = i;\n        break;\n      }\n    }\n\n    const yearMin = data[0];\n    const yearMax = data[activeIndex];\n\n    return [\n      {\n        size: \"0-1\",\n        label: \"0–1 ha\",\n        minYearData: yearMin.area_size_0_1,\n        maxYearData: yearMax.area_size_0_1,\n        minYear: yearMin.year,\n        maxYear: yearMax.year,\n        maxInPct: yearMax.area_size_0_1 / yearMin.area_size_0_1\n      },\n      {\n        size: \"1-3\",\n        label: \"1–3 ha\",\n        minYearData: yearMin.area_size_1_3,\n        maxYearData: yearMax.area_size_1_3,\n        minYear: yearMin.year,\n        maxYear: yearMax.year,\n        maxInPct: yearMax.area_size_1_3 / yearMin.area_size_1_3\n      },\n      {\n        size: \"3-5\",\n        label: \"3–5 ha\",\n        minYearData: yearMin.area_size_3_5,\n        maxYearData: yearMax.area_size_3_5,\n        minYear: yearMin.year,\n        maxYear: yearMax.year,\n        maxInPct: yearMax.area_size_3_5 / yearMin.area_size_3_5\n      },\n      {\n        size: \"5-10\",\n        label: \"5–10 ha\",\n        minYearData: yearMin.area_size_5_10,\n        maxYearData: yearMax.area_size_5_10,\n        minYear: yearMin.year,\n        maxYear: yearMax.year,\n        maxInPct: yearMax.area_size_5_10 / yearMin.area_size_5_10\n      },\n      {\n        size: \"10-20\",\n        label: \"10–20 ha\",\n        minYearData: yearMin.area_size_10_20,\n        maxYearData: yearMax.area_size_10_20,\n        minYear: yearMin.year,\n        maxYear: yearMax.year,\n        maxInPct: yearMax.area_size_10_20 / yearMin.area_size_10_20\n      },\n      {\n        size: \"20-30\",\n        label: \"20–30 ha\",\n        minYearData: yearMin.area_size_20_30,\n        maxYearData: yearMax.area_size_20_30,\n        minYear: yearMin.year,\n        maxYear: yearMax.year,\n        maxInPct: yearMax.area_size_20_30 / yearMin.area_size_20_30\n      },\n      {\n        size: \"30-50\",\n        label: \"30–50 ha\",\n        minYearData: yearMin.area_size_30_50,\n        maxYearData: yearMax.area_size_30_50,\n        minYear: yearMin.year,\n        maxYear: yearMax.year,\n        maxInPct: yearMax.area_size_30_50 / yearMin.area_size_30_50\n      },\n      {\n        size: \"50+\",\n        label: \"50 ha+\",\n        minYearData: yearMin.area_size_50_n,\n        maxYearData: yearMax.area_size_50_n,\n        minYear: yearMin.year,\n        maxYear: yearMax.year,\n        maxInPct: yearMax.area_size_50_n / yearMin.area_size_50_n\n      }\n    ];\n  }\n\n  static getFullData() {\n    return d3.csv(dataSource,\n      d => ({\n        year: +d.year,\n        total_farms_count: +d.total_farms_count,\n        area_valley_in_percent: +d.area_valley_in_percent,\n        area_mountain_in_percent: +d.area_mountain_in_percent,\n        area_size_0_1: +d.area_size_0_1,\n        area_size_1_3: +d.area_size_1_3,\n        area_size_3_5: +d.area_size_3_5,\n        area_size_5_10: +d.area_size_5_10,\n        area_size_10_20: +d.area_size_10_20,\n        area_size_20_30: +d.area_size_20_30,\n        area_size_30_50: +d.area_size_30_50,\n        area_size_50_n: +d.area_size_50_n\n      }))\n  }\n\n  static getLabelMap() {\n    return {\n      year: 'Jahr',\n      total_farms_count: 'Total Anz. Farmen',\n      area_valley_in_percent: 'Talgebiet in %',\n      area_mountain_in_percent: 'Berggebiet in %',\n      area_size_0_1: '< 1 ha',\n      area_size_1_3: '1 bis 3 ha',\n      area_size_3_5: '3 bis 5 ha',\n      area_size_5_10: '5 bis 10 ha',\n      area_size_10_20: '10 bis 20 ha',\n      area_size_20_30: '20 bis 30 ha',\n      area_size_30_50: '30 bis 50 ha',\n      area_size_50_n: '> 50 ha'\n    };\n  }\n\n  static getFilteredFarmsKeys(data) {\n    return Object.keys(data[0]).filter(d =>\n      d === 'area_size_0_1' ||\n      d === 'area_size_1_3' ||\n      d === 'area_size_3_5' ||\n      d === 'area_size_5_10' ||\n      d === 'area_size_10_20' ||\n      d === 'area_size_20_30' ||\n      d === 'area_size_30_50' ||\n      d === 'area_size_50_n');\n  }\n}","import * as React from \"react\";\nimport * as d3 from \"d3\";\nimport DataService from \"../services/DataService\";\n\nexport default class FarmSizeRelationsChart extends React.Component {\n\n  constructor(params) {\n    super(params);\n    this.state = {\n      activeYear: 2017,\n      min: 1985,\n      max: 2017,\n    };\n    this.margin = {top: 20, right: 60, bottom: 60, left: 100};\n    this.width = 800 - this.margin.left - this.margin.right;\n    this.height = 400 - this.margin.top - this.margin.bottom;\n  }\n\n  /**\n   * Based on https://bl.ocks.org/mbostock/3887051\n   */\n  drawChart() {\n    const data = DataService.getCompareYearData(this.props.data, this.state.activeYear);\n\n    this.processedData = [\n      data.map(d => d.minYearData),\n      data.map(d => d.maxYearData)\n    ];\n\n    this.colorScale = d3.scaleOrdinal()\n      .range(['#c2eedc', '#7fd1af', '#1cb373', '#168c5a',\n        '#66bbff', '#1e8cd3',\n        '#ebb0dd', '#d674c0']);\n\n    this.yScale = d3.scaleLinear()\n      .domain([0, d3.max(this.processedData, oldData => d3.max(oldData))])\n      .range([this.height, 0]);\n\n    this.xScale = d3.scaleBand()\n      .domain(data.map(d => d.label))\n      .rangeRound([0, this.width]);\n\n    this.scaleWidth = d3.scaleBand()\n      .domain(d3.range(this.processedData.length))\n      .range([0, this.xScale.bandwidth()])\n      .paddingInner(0.02)\n      .paddingOuter(0.2);\n\n    const {width, height, margin, xScale, yScale, scaleWidth, colorScale, processedData} = this;\n\n    d3.select(\".chartContainer\").selectAll(\"svg\").remove('svg');\n\n    this.svg = d3.select(\".chartContainer\").append(\"svg\")\n      .attr(\"width\", width + margin.left + margin.right)\n      .attr(\"height\", height + margin.top + margin.bottom);\n\n    const mainGroup = this.svg.append(\"g\")\n      .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n    this.mainGroup = mainGroup;\n\n    const barGroup = mainGroup.append(\"g\")\n      .attr('class', 'bars-container')\n      .selectAll(\"g\")\n      .data(processedData)\n      .enter().append(\"g\")\n      .attr('class', (d, i) => `bars${i}`)\n      .attr(\"transform\", (d, i) => \"translate(\" + scaleWidth(i) + \",0)\")\n\n    barGroup.selectAll(\"rect\")\n      .data(d => d)\n      .enter().append('g')\n      .append(\"rect\")\n      .attr(\"width\", scaleWidth.bandwidth())\n      .attr(\"height\", d => height - yScale(d))\n      .attr(\"x\", (d, i) => xScale(data[i].label))\n      .attr(\"y\", d => yScale(d))\n      .attr(\"fill\", d => colorScale(d));\n\n    barGroup.append('text')\n      .text((d, i) => {\n        switch (i) {\n          case 0:\n            return data[0].minYear;\n          case 1:\n            return data[0].maxYear;\n          default:\n            return '?';\n        }\n      })\n      .attr('class', 'header-small')\n      .attr('x', scaleWidth.bandwidth() / 2)\n      .attr('y', height - 6)\n      .attr('text-anchor', 'middle');\n\n    mainGroup.append('g')\n      .attr('class', 'x-axis')\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(d3.axisBottom(xScale));\n\n    mainGroup.append('g')\n      .attr('class', 'y-axis')\n      .call(d3.axisLeft(yScale).ticks(5));\n\n    // y axis label\n    mainGroup.append('text')\n      .attr('class', 'header')\n      .text('Anz. Bauernhöfe')\n      .attr('text-anchor', 'middle')\n      .attr('transform', `translate(-65,${height / 2}) rotate(-90)`)\n\n    // x axis label\n    mainGroup.select('.x-axis')\n      .append('text')\n      .attr('class', 'header')\n      .attr('x', width / 2)\n      .attr('y', 50)\n      .text('Hofgrössen in Hektar')\n      .style('text-anchor', 'middle');\n  }\n\n  initLabels() {\n    const data = DataService.getCompareYearData(this.props.data, this.state.activeYear);\n    const {xScale, yScale, scaleWidth} = this;\n\n    let sectorWidth = xScale.bandwidth();\n    let barWidth = scaleWidth.bandwidth() / 2;\n\n    const formatInPct = d3.format('.0%');\n\n    d3.select('.FarmSizeRelationsChart')\n      .select('.bars1')\n      .selectAll('g')\n      .append('text')\n      .attr('x', (d, i) => sectorWidth * i + barWidth)\n      .attr('y', d => yScale(d) - 4)\n      .attr('text-anchor', 'middle')\n      .text((d, i) => {\n        const pctValue = -1 + data[i].maxInPct;\n        if (pctValue >= 0) {\n          return \"+\" + formatInPct(pctValue)\n        } else {\n          return \"–\" + formatInPct(pctValue * -1);\n        }\n      })\n  }\n\n  componentDidMount() {\n    this.drawChart();\n    this.initLabels();\n  }\n\n  componentDidUpdate() {\n    this.drawChart();\n    this.initLabels();\n  }\n\n  setActiveYear() {\n    let slider = document.getElementById('yearSlider');\n    let activeYear = parseInt(slider.value);\n    this.setState({activeYear: activeYear})\n  }\n\n  getSliderDataListOptions() {\n    const data = this.props.data;\n    const options = data.map(d => {\n      return <option value={d.year}\n                     key={d.year}\n                     label={d.year % 5 === 0 ? d.year : ''}\n      >{d.year % 5 === 0 ? d.year : ''}</option>\n    });\n    return <datalist id=\"tickMarks\">{options}</datalist>\n  }\n\n  getSliderLabels() {\n    const data = this.props.data;\n    const labels = [];\n    for (let i = data[0].year; i < data[data.length - 1].year; i++) {\n      if (i % 5 === 0) {\n        labels.push(<li key={i}>{i}</li>)\n      }\n    }\n    return <ul>{labels}</ul>\n  }\n\n  render() {\n    return <div className='FarmSizeRelationsChart'>\n      <h2>Anzahl Bauernhöfe im Vergleich zu 1985</h2>\n\n      <div className='chartContainer'/>\n\n      <div className='sliderContainer'>\n        <input className=\"slider\"\n               id='yearSlider'\n               type=\"range\"\n               min={this.state.min}\n               max={this.state.max}\n               value={this.state.activeYear}\n               list='tickMarks'\n               onChange={() => this.setActiveYear()}/>\n        {this.getSliderDataListOptions()}\n        {this.getSliderLabels()}\n      </div>\n    </div>\n  }\n}","import * as React from 'react';\nimport * as d3 from 'd3';\nimport DataService from \"../services/DataService\";\n\nexport default class FarmsCountChart extends React.Component {\n\n  constructor(params) {\n    super(params);\n\n    this.width = 780;\n    this.height = 500;\n    this.margin = {\n      top: 10,\n      bottom: 60,\n      left: 90,\n      right: 70\n    };\n    this.innerHeight = this.height - this.margin.top - this.margin.bottom;\n    this.innerWidth = this.width - this.margin.left - this.margin.right;\n    this.labelMap = DataService.getLabelMap();\n  }\n\n  /**\n   * Based on https://observablehq.com/@tmcw/stacked-area-chart\n   */\n  init() {\n    const {innerWidth, innerHeight, width, height, margin} = this;\n    const {data} = this.props;\n\n    const keys = DataService.getFilteredFarmsKeys(data);\n    const stack = d3.stack().keys(keys);\n    const series = stack(data);\n    const colorScale = d3.scaleOrdinal()\n      .range(['#c2eedc', '#7fd1af', '#1cb373', '#168c5a',\n        '#66bbff', '#1e8cd3',\n        '#ebb0dd', '#d674c0']);\n\n    const xScale = d3.scaleLinear()\n      .domain(d3.extent(data, d => d.year))\n      .range([0, innerWidth]);\n\n    const yScale = d3.scaleLinear()\n      .domain([0, d3.max(series, series => d3.max(series, d => d[1]))])\n      .range([innerHeight, 0]);\n\n    const area = d3.area()\n      .x(d => xScale(d.data.year))\n      .y0(d => yScale(d[0]))\n      .y1(d => yScale(d[1]));\n\n    const svg = d3.select('.FarmsCountChart')\n      .append('svg')\n      .attr('width', width)\n      .attr('height', height);\n\n    this.mainGroup = svg.append('g')\n      .attr('class', 'main')\n      .attr('transform', `translate(${margin.left}, ${margin.top})`);\n\n    // create the stacked area paths\n    this.mainGroup.append('g').attr('class', 'chart')\n      .selectAll('.area')\n      .data(series)\n      .enter().append('path')\n      .attr('class', 'area')\n      .attr('fill', d => colorScale(d.key))\n      .attr('d', area);\n\n    this.initAxes(xScale, yScale)\n    this.initLegend(keys, colorScale)\n  }\n\n  initAxes(xScale, yScale) {\n    const {innerWidth, innerHeight} = this;\n\n    const xAxis = d3.axisBottom()\n      .scale(xScale)\n      .tickFormat(d3.format(''));\n\n    const yAxis = d3.axisLeft()\n      .scale(yScale);\n\n    // x axis\n    this.mainGroup.append('g')\n      .attr('class', 'axis x')\n      .attr('transform', `translate(0, ${innerHeight})`)\n      .call(xAxis);\n\n    // x axis label\n    d3.select('g.axis.x')\n      .append('text')\n      .attr('class', 'header')\n      .attr('x', innerWidth / 2)\n      .attr('y', 50)\n      .text('Jahr')\n      .style('text-anchor', 'middle');\n\n    // generate y axis\n    this.mainGroup.append('g')\n      .attr('class', 'axis y')\n      .call(yAxis);\n\n    // y axis label\n    d3.select('.y.axis')\n      .append('text')\n      .attr('class', 'header')\n      .attr('x', -innerHeight / 2)\n      .attr('y', -70)\n      .attr('transform', 'rotate(-90)')\n      .text('Anz. Bauernhöfe')\n      .attr('text-anchor', 'middle');\n  }\n\n  initLegend(keys, colorScale) {\n    const lineHeight = 22;\n    const padding = 8;\n\n    const legendWidth = 100 + 2 * padding;\n    const legendHeight = keys.length * lineHeight + padding;\n\n    const legend = this.mainGroup.append('g')\n      .attr('class', 'legend')\n      .attr('width', legendWidth)\n      .attr('height', legendHeight)\n      .attr('transform', `translate(${this.innerWidth - legendWidth -12},${padding - 18})`);\n\n    legend.append('rect')\n      .attr('class', 'background')\n      .attr('width', legendWidth)\n      .attr('height', legendHeight)\n      .attr('fill', 'white');\n\n    const legendEntry = legend.append('g')\n      .attr('class', 'entries')\n      .attr('transform', `translate(${padding},${padding})`)\n      .selectAll('rect')\n      .data(keys.reverse())\n      .enter();\n\n    legendEntry.append('rect')\n      .attr('y', (d, i) => lineHeight * i)\n      .attr('width', 12)\n      .attr('height', 12)\n      .attr('fill', d => colorScale(d));\n\n    legendEntry.append('text')\n      .attr('x', 20)\n      .attr('y', (d, i) => lineHeight * i + 10)\n      .text(d => this.labelMap[d]);\n  }\n\n  componentDidMount() {\n    this.init()\n  }\n\n  render() {\n    return (\n      <div className='FarmsCountChart'>\n        <h2>Veränderungsverlauf aller Bauernhofgrössen</h2>\n      </div>\n    )\n  }\n}","import * as React from \"react\";\n\nexport default class SvgImage extends React.Component {\n\n  constructor(params) {\n    super(params);\n\n    this.style = {\n      background: '#fff',\n      viewBox: \"0 0 155 143\"\n    }\n  }\n\n  render() {\n    const {style, style: {className, viewBox}} = this;\n    const {width, fill} = this.props;\n\n    return (\n        <svg\n          width={width}\n          style={style}\n          height={width}\n          viewBox={viewBox}\n          xmlns=\"http://www.w3.org/2000/svg\"\n          className={`icon ${className || \"\"}`}\n          xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n        >\n          <g id=\"farm\" stroke=\"none\" strokeWidth=\"1\" fill={fill} fillRule=\"evenodd\">{this.props.src}</g>\n        </svg>)\n\n  }\n}","import React from \"react\";\n\nexport class Icons {\n\n  static farmSmall = <path d=\"M124.793388,134.91954 C125.694215,134.91954 126.144628,134.468811 126.144628,133.567354 L121.640496,130.412251 L96.6706259,130.409582 L96.6706259,105.531026 L120.891125,105.531026 L121.805293,105.531026 L121.640496,130.412251 L126.144628,133.567354 L126.287141,105.531026 L126.287141,105.476754 L126.314108,105.476754 L126.287141,105.531026 L131.100679,105.531026 C131.791024,105.531026 132.22159,104.782079 131.880912,104.186902 L129.254366,99.4969435 L121.50057,85.4523937 C118.067722,79.2283615 112.581817,74.2769952 106.046912,71.5163868 C102.120575,69.8475393 97.961427,69 93.721379,69 L61.6841622,69 C61.6122513,69 61.5412392,69.0180905 61.4693283,69.0271357 C57.382091,69.0271357 53.3029437,69.8122629 49.4934623,71.3725674 L49.1168288,71.525432 C42.4390004,74.2679499 36.8362403,79.2645425 33.3404703,85.6061628 L25.8284751,99.216541 L25.6765633,99.496039 C25.6765633,99.5050842 25.6675744,99.5050842 25.6675744,99.5141295 L23.1129388,104.195948 C22.7812496,104.791125 23.2208051,105.531026 23.9021612,105.531026 L28.70671,105.531026 L28.6887323,105.485799 C28.6977211,105.485799 28.6977211,105.485799 28.70671,105.485799 L28.70671,105.531026 L28.70671,132.664561 C28.70671,133.909187 29.7107663,134.91954 30.9476342,134.91954 L93.5514895,134.91954 L94.4297017,134.91954 C114.67216,134.91954 124.793388,134.91954 124.793388,134.91954 Z M33.1876596,102.608507 L33.8150825,101.472425 L40.3949323,89.5471755 C43.0035011,84.8210357 47.1806271,81.0862546 52.1649532,79.0483612 L52.5325979,78.894592 C58.3322141,76.5138839 64.9740871,76.5500649 70.7476356,78.9940897 C75.6151065,81.0600234 79.7113327,84.7486737 82.2749572,89.3943109 L88.9348079,101.472425 L90.0287529,103.438861 C90.0647084,103.502177 90.1096527,103.565494 90.1456082,103.628811 C90.1815636,103.692128 90.2175191,103.746399 90.2624634,103.808811 C90.3972964,103.997857 90.5402194,104.178762 90.702019,104.340671 C90.8629197,104.503486 91.042697,104.647305 91.2305643,104.782984 C91.2844975,104.819165 91.3294418,104.846301 91.3743861,104.882482 C91.5532646,104.991025 91.7330419,105.089618 91.9209092,105.18007 C91.9478758,105.189115 91.9748424,105.207206 92.001809,105.216251 C92.064731,105.243387 92.1276531,105.270523 92.1896763,105.288613 L92.1896763,130.410486 L75.9926389,130.410486 L75.9926389,108.296675 C75.9926389,107.051145 74.9894814,106.041695 73.7517146,106.041695 L49.0008725,106.041695 C47.7631056,106.041695 46.7599482,107.051145 46.7599482,108.296675 L46.7599482,130.409582 L33.1876596,130.409582 L33.1876596,102.608507 Z M51,110.4 L59,110.4 L59,130.4 L51,130.4 L51,110.4 Z M63.49,110.4 L71.49,110.4 L71.49,130.4 L63.49,130.4 L63.49,110.4 Z\" id=\"Shape\" fill=\"\" fillRule=\"nonzero\"></path>\n\n  static farmMedium = <path d=\"M44.8946875,87 C43.8475738,87 42.9990506,86.1759069 43.0000008,85.1598637 L43.0000008,75.8401363 C43.0000008,74.8240931 43.848524,74 44.8946875,74 L53.1053133,74 C54.1514768,74 55,74.8240931 55,75.8401363 L55,85.1598637 C55,86.1759069 54.152427,87 53.1053133,87 L44.8946875,87 Z M94.0725415,128 L81.4297017,128 L80.5514895,128 L17.9476342,128 C16.7107663,128 15.70671,126.988547 15.70671,125.742566 L15.70671,90.5707888 L15.70671,90.5255133 C15.6977211,90.5255133 15.6977211,90.5255133 15.6887323,90.5255133 L15.70671,90.5707888 L10.9021612,90.5707888 C10.2208051,90.5707888 9.78124961,89.8300825 10.1129388,89.2342576 L12.6675744,84.5473434 C12.6675744,84.5382883 12.6765633,84.5382883 12.6765633,84.5292333 L12.8284751,84.249431 L20.3404703,70.6242383 C23.8362403,64.2757152 29.4390004,59.273684 36.1168288,56.5281809 L36.4934623,56.3751499 C40.3029437,54.813147 44.382091,54.0271653 48.4693283,54.0271653 C48.5412392,54.0181102 48.6122513,54 48.6841622,54 L80.721379,54 C84.961427,54 89.1205753,54.8484619 93.0469119,56.5191258 C99.5818174,59.282739 105.067722,64.2394949 108.50057,70.4703018 L116.254366,84.5301388 L118.880912,89.2252025 C119.22159,89.8210274 118.791024,90.5707888 118.100679,90.5707888 L113.287141,90.5707888 L113.314108,90.5164582 L113.287141,90.5164582 L113.287141,90.5707888 L113.287141,95.9350236 C111.737461,96.2329361 110.239916,96.6748244 108.805293,97.2443895 L108.805293,90.5707888 L107.891125,90.5707888 L83.6706259,90.5707888 L83.6706259,123.485133 L93.1242161,123.485133 C93.3048923,125.036269 93.6213004,126.547564 94.0725415,128 Z M20.1876596,87.6450894 L20.1876596,123.485133 L33.7599482,123.485133 L33.7599482,101.348156 C33.7599482,100.10127 34.7631056,99.0907222 36.0008725,99.0907222 L60.7517146,99.0907222 C61.9894814,99.0907222 62.9926389,100.10127 62.9926389,101.348156 L62.9926389,123.486038 L79.1896763,123.486038 L79.1896763,90.3281124 C79.1276531,90.3100022 79.064731,90.2828369 79.001809,90.2556717 C78.9748424,90.2466166 78.9478758,90.2285064 78.9209092,90.2194513 C78.7330419,90.1289004 78.5532646,90.0301999 78.3743861,89.9215389 C78.3294418,89.8853185 78.2844975,89.8581533 78.2305643,89.8219329 C78.042697,89.6861066 77.8629197,89.5421306 77.702019,89.379139 C77.5402194,89.2170529 77.3972964,89.0359512 77.2624634,88.8466998 C77.2175191,88.7842197 77.1815636,88.7298891 77.1456082,88.6665035 C77.1096527,88.6031179 77.0647084,88.5397323 77.0287529,88.4763466 L75.9348079,86.5077702 L69.2749572,74.4165096 C66.7113327,69.7658158 62.6151065,66.0731504 57.7476356,64.0049681 C51.9740871,61.558283 45.3322141,61.5220626 39.5325979,63.9053621 L39.1649532,64.0592986 C34.1806271,66.0994102 30.0035011,69.8382565 27.3949323,74.5695406 L20.8150825,86.5077702 L20.1876596,87.6450894 Z M118,125 C115.238517,125 113,122.761236 113,119.999535 C113,117.237834 115.238517,115 118,115 C120.761483,115 123,117.238764 123,119.999535 C123,122.761236 120.761483,125 118,125 Z M142.730002,138.561634 C143.983828,138.561634 145,139.555059 145,140.780817 C145,142.006575 143.983828,143 142.730002,143 L80.2699981,143 C79.0161724,143 78,142.006575 78,140.780817 C78,139.555059 79.0161724,138.561634 80.2699981,138.561634 L105.644261,138.561634 C99.6127857,134.702766 95.6218505,128.074592 95.6218505,120.556252 C95.6218505,108.66987 105.588717,99 117.840151,99 C130.091585,99 140.059362,108.67076 140.059362,120.556252 C140.059362,128.074592 136.067517,134.702766 130.036041,138.561634 L142.730002,138.561634 Z M101.978391,120.557143 C101.978391,129.016387 109.09433,135.899148 117.840151,135.899148 C126.586883,135.899148 133.702821,129.017277 133.702821,120.557143 C133.702821,112.097008 126.586883,105.215137 117.840151,105.215137 C109.09433,105.215137 101.978391,112.097008 101.978391,120.557143 Z M71.8368056,139 C73.0321181,139 74,139.895307 74,141 C74,142.104693 73.03125,143 71.8359375,143 L67.1640625,143 C65.96875,143 65,142.104693 65,141 C65,139.895307 65.96875,139 67.1640625,139 L71.8368056,139 Z M38,103.5 L38,123.5 L46,123.5 L46,103.5 L38,103.5 Z M50.49,103.5 L50.49,123.5 L58.49,123.5 L58.49,103.5 L50.49,103.5 Z\" id=\"Path-2\" fill=\"\" fillRule=\"nonzero\"></path>\n\n  static farmLarge = <path d=\"M63.3946875,88.5 L71.6053133,88.5 C72.652427,88.5 73.5,87.6759069 73.5,86.6598637 L73.5,77.3401363 C73.5,76.3240931 72.6514768,75.5 71.6053133,75.5 L63.3946875,75.5 C62.348524,75.5 61.5000008,76.3240931 61.5000008,77.3401363 L61.5000008,86.6598637 C61.4990506,87.6759069 62.3475738,88.5 63.3946875,88.5 Z M44.3946875,88.5 C43.3475738,88.5 42.4990506,87.6759069 42.5000008,86.6598637 L42.5000008,77.3401363 C42.5000008,76.3240931 43.348524,75.5 44.3946875,75.5 L52.6053133,75.5 C53.6514768,75.5 54.5,76.3240931 54.5,77.3401363 L54.5,86.6598637 C54.5,87.6759069 53.652427,88.5 52.6053133,88.5 L44.3946875,88.5 Z M104.072541,128 L91.4297017,128 L90.5514895,128 L27.9476342,128 C26.7107663,128 25.70671,126.988547 25.70671,125.742566 L25.70671,85.5707888 L25.70671,85.5255133 C25.6977211,85.5255133 25.6977211,85.5255133 25.6887323,85.5255133 L25.70671,85.5707888 L20.9021612,85.5707888 C20.2208051,85.5707888 19.7812496,84.8300825 20.1129388,84.2342576 L22.6675744,79.5473434 C22.6675744,79.5382883 22.6765633,79.5382883 22.6765633,79.5292333 L22.8284751,79.249431 L30.3404703,65.6242383 C33.8362403,59.2757152 39.4390004,54.273684 46.1168288,51.5281809 L46.4934623,51.3751499 C50.3029437,49.813147 54.382091,49.0271653 58.4693283,49.0271653 C58.5412392,49.0181102 58.6122513,49 58.6841622,49 L90.721379,49 C94.961427,49 99.1205753,49.8484619 103.046912,51.5191258 C109.581817,54.282739 115.067722,59.2394949 118.50057,65.4703018 L126.254366,79.5301388 L128.880912,84.2252025 C129.22159,84.8210274 128.791024,85.5707888 128.100679,85.5707888 L123.287141,85.5707888 L123.314108,85.5164582 L123.287141,85.5164582 L123.287141,85.5707888 L123.287141,95.9350236 C121.737461,96.2329361 120.239916,96.6748244 118.805293,97.2443895 L118.805293,85.5707888 L117.891125,85.5707888 L93.6706259,85.5707888 L93.6706259,123.485133 L103.124216,123.485133 C103.304892,125.036269 103.6213,126.547564 104.072541,128 Z M30.1876596,82.6450894 L30.1876596,123.485133 L43.7599482,123.485133 L43.7599482,101.348156 C43.7599482,100.10127 44.7631056,99.0907222 46.0008725,99.0907222 L70.7517146,99.0907222 C71.9894814,99.0907222 72.9926389,100.10127 72.9926389,101.348156 L72.9926389,123.486038 L89.1896763,123.486038 L89.1896763,85.3281124 C89.1276531,85.3100022 89.064731,85.2828369 89.001809,85.2556717 C88.9748424,85.2466166 88.9478758,85.2285064 88.9209092,85.2194513 C88.7330419,85.1289004 88.5532646,85.0301999 88.3743861,84.9215389 C88.3294418,84.8853185 88.2844975,84.8581533 88.2305643,84.8219329 C88.042697,84.6861066 87.8629197,84.5421306 87.702019,84.379139 C87.5402194,84.2170529 87.3972964,84.0359512 87.2624634,83.8466998 C87.2175191,83.7842197 87.1815636,83.7298891 87.1456082,83.6665035 C87.1096527,83.6031179 87.0647084,83.5397323 87.0287529,83.4763466 L85.9348079,81.5077702 L79.2749572,69.4165096 C76.7113327,64.7658158 72.6151065,61.0731504 67.7476356,59.0049681 C61.9740871,56.558283 55.3322141,56.5220626 49.5325979,58.9053621 L49.1649532,59.0592986 C44.1806271,61.0994102 40.0035011,64.8382565 37.3949323,69.5695406 L30.8150825,81.5077702 L30.1876596,82.6450894 Z M60.49,103.5 L60.49,123.5 L68.49,123.5 L68.49,103.5 L60.49,103.5 Z M48.2,103.5 L48.2,123.5 L56.2,123.5 L56.2,103.5 L48.2,103.5 Z M128,125 C125.238517,125 123,122.761236 123,119.999535 C123,117.237834 125.238517,115 128,115 C130.761483,115 133,117.238764 133,119.999535 C133,122.761236 130.761483,125 128,125 Z M152.730002,138.561634 C153.983828,138.561634 155,139.555059 155,140.780817 C155,142.006575 153.983828,143 152.730002,143 L90.2699981,143 C89.0161724,143 88,142.006575 88,140.780817 C88,139.555059 89.0161724,138.561634 90.2699981,138.561634 L115.644261,138.561634 C109.612786,134.702766 105.62185,128.074592 105.62185,120.556252 C105.62185,108.66987 115.588717,99 127.840151,99 C140.091585,99 150.059362,108.67076 150.059362,120.556252 C150.059362,128.074592 146.067517,134.702766 140.036041,138.561634 L152.730002,138.561634 Z M111.978391,120.557143 C111.978391,129.016387 119.09433,135.899148 127.840151,135.899148 C136.586883,135.899148 143.702821,129.017277 143.702821,120.557143 C143.702821,112.097008 136.586883,105.215137 127.840151,105.215137 C119.09433,105.215137 111.978391,112.097008 111.978391,120.557143 Z M81.8368056,139 C83.0321181,139 84,139.895307 84,141 C84,142.104693 83.03125,143 81.8359375,143 L77.1640625,143 C75.96875,143 75,142.104693 75,141 C75,139.895307 75.96875,139 77.1640625,139 L81.8368056,139 Z M5.50867247,111.730587 C5.61904307,111.863775 5.80504512,112.037813 6.06328008,112.233675 C6.83019694,112.815356 8.02465155,113.434345 9.50276562,113.995303 C12.8000543,115.246655 16.9880492,116.03605 20.9091078,116.06444 L20.872907,121.064308 C10.983938,120.992709 0.508695652,117.017258 0.508695652,112 L3.00869565,112 L0.508695661,112.000215 L0.500000009,11.0002152 L0.508695658,11.0002145 C0.508695652,4.83936809 13.98232,1.5 31.2521739,1.5 C48.5220279,1.5 61.9956522,4.83936809 61.9956522,11 L61.9956522,45 L56.9956522,45 L56.9956522,16.6331982 C51.5553753,19.1675367 42.1611539,20.5 31.2521739,20.5 C20.3377036,20.5 10.939517,19.1661952 5.50048467,16.6293708 L5.50867247,111.730587 Z M5.50869564,111.999785 L5.50867247,111.730587 C5.48877601,111.706577 5.47133736,111.683895 5.45637642,111.662652 C5.46646146,111.676972 5.50866663,111.791156 5.50869564,111.999785 Z M6.4921282,11.567749 C7.67399862,12.2602908 9.52114384,12.937932 11.8824347,13.5231657 C16.9326029,14.7748238 23.8502747,15.5 31.2521739,15.5 C38.6540731,15.5 45.571745,14.7748238 50.6219132,13.5231657 C52.983204,12.937932 54.8303492,12.2602908 56.0122196,11.567749 C56.3636925,11.3617961 56.6329514,11.1678044 56.8180697,11 C56.6329514,10.8321956 56.3636925,10.6382039 56.0122196,10.432251 C54.8303492,9.73970921 52.983204,9.06206802 50.6219132,8.47683431 C45.571745,7.22517624 38.6540731,6.5 31.2521739,6.5 C23.8502747,6.5 16.9326029,7.22517624 11.8824347,8.47683431 C9.52114384,9.06206802 7.67399862,9.73970921 6.4921282,10.432251 C6.14065534,10.6382039 5.87139645,10.8321956 5.68627814,11 C5.87139645,11.1678044 6.14065534,11.3617961 6.4921282,11.567749 Z\" id=\"Path-2\" fill=\"\" fillRule=\"nonzero\"></path>\n}","import * as React from \"react\";\nimport SvgImage from \"../res/imgs/SvgImage\";\nimport cowImg from \"../res/imgs/cow.svg\";\nimport wheatImg from \"../res/imgs/wheat.svg\";\nimport {Image} from \"react-bootstrap\";\nimport {Icons} from \"../res/imgs/Icons\";\n\nexport default class Header extends React.Component {\n\n  render() {\n    return (\n      <div className='Header'>\n        <h1>Strukturwandel in der Landwirtschaft</h1>\n\n        <p>Seit Jahren spricht man über einen Rückgang von Bauernhöfen: Für viele Bäuerinnen und Bauern lohnt sich\n          offenbar der Landwirtschaftsbetrieb nicht mehr und sie geben ihre Höfe auf.</p>\n        <p>Die folgenden Visualisierungen zeigen, wie sich die Schweizer Landwirtschaft in den letzten 35 Jahren\n          tatsächlich verändert hat.</p>\n\n        <div>\n          <h2>Anbaumöglichkeiten pro Hektar</h2>\n\n          <div className='horizontal-container'>\n            <div>\n              {this.printIcons('cow', cowImg, 2)}\n              <p>In der Schweiz reicht ein Hektar Land zur Ernährung von rund 2 Kühen.</p>\n            </div>\n\n            <div>\n              {this.printIcons('wheat', wheatImg, 6)}\n              <p>Auf einem Hektar Ackerland können 6 Tonnen Weizen angebaut werden.</p>\n            </div>\n\n          </div>\n        </div>\n\n        <h2>Grössenkategorien</h2>\n\n        <div className='horizontal-container top'>\n          <SvgImage src={Icons.farmSmall} width={'90px'} fill={'#4ec291'}/>\n          <SvgImage src={Icons.farmMedium} width={'100px'} fill={'#42a3f1'}/>\n          <SvgImage src={Icons.farmLarge} width={'110px'} fill={'#e396d1'}/>\n        </div>\n\n        <div className='horizontal-container bottom'>\n          <div>\n            <h3>kleine Betriebe</h3>\n            <p>Beuernhöfe, die eine Betriebsfläche von weniger als 10 Hektar haben.</p>\n          </div>\n          <div>\n            <h3>mittlere Betriebe</h3>\n            <p>Mittelgrosse Höfe haben eine Fläche zwischen 10 und 30 Hektar.</p>\n          </div>\n          <div>\n            <h3>Grossbetriebe</h3>\n            <p>Die grössten Betriebe haben eine Fläche von 30 Hektar oder mehr.</p>\n          </div>\n        </div>\n\n        <div className='capacity-container'>\n\n          <div className='horizontal-container centered'>\n            <p className='color-small'>0 bis 20 Kühe</p>\n            <div className='arrow'>\n              <i className='up'/>\n              <div className='line'/>\n            </div>\n            <p className='color-medium'>20 bis 50 Kühe</p>\n            <div className='arrow'>\n              <i className='up'/>\n              <div className='line'/>\n            </div>\n            <p className='color-large'>50 Kühe und mehr</p>\n          </div>\n\n          <div className='horizontal-container'>\n            <div className='relations-container'>\n              <p>In Kleinbetrieben können demnach bis zu 20 Kühe pro Hof gehalten werden.</p>\n              {this.printIcons('cowImg', cowImg, 20)}\n            </div>\n            <div className='relations-container'>\n              <p>Auf Grossbetrieben können Herden von 60 Tieren oder mehr gehalten.</p>\n              {this.printIcons('cowImg', cowImg, 60)}\n            </div>\n          </div>\n\n          <div className='horizontal-container centered'>\n            <p className='color-small'>0 bis 60 t</p>\n            <div className='arrow'>\n              <i className='up'/>\n              <div className='line'/>\n            </div>\n            <p className='color-medium'>60 bis 180 t</p>\n            <div className='arrow'>\n              <i className='up'/>\n              <div className='line'/>\n            </div>\n            <p className='color-large'>180 t und mehr</p>\n          </div>\n\n          <div className='horizontal-container'>\n            <div className='relations-container'>\n              <p>Kleinbetriebe reichen um bis zu 60 Tonnen Weizen anzubauen.</p>\n              {this.printIcons('wheatImg', wheatImg, 60)}\n            </div>\n            <div className='relations-container'>\n              <p>Grossbetriebe ermöglichen den Anbau von über 180 Tonnen.</p>\n              {this.printIcons('wheatImg', wheatImg, 180)}\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  printIcons(name, type, count) {\n    let container = [];\n    for (let i = 0; i < count; i++) {\n      container[i] = <Image src={type} key={name + i}/>\n    }\n    return <div className={name}>{container}</div>;\n  }\n}","import * as React from 'react';\nimport * as d3 from 'd3';\n\nexport default class DraggableBarChart extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      showAnswer: props.showAnswer\n    };\n    this.chartWidth = 500;\n    this.chartHeight = 300;\n\n    this.maxScaleValue = Math.round(d3.max(this.props.data, d => d.maxInPct)) * 1.2;\n    this.durations = {\n      anim1: 1000,\n      anim2: 1500,\n      anim3: 2000,\n      animSum: 4500\n    }\n  }\n\n  /**\n   * Based on https://bl.ocks.org/AlainRo/9264cd08e341f2c92f020c39642c34d1\n   */\n  drawChart() {\n    const {data} = this.props;\n    const {chartHeight, chartWidth} = this;\n\n    let barsGap = 22;\n\n    let margin = {\n      top: 20,\n      right: 30,\n      bottom: 50,\n      left: 50,\n    };\n\n    const scaleX = d3.scaleBand()\n      .domain(data.map(d => d.label))\n      .rangeRound([0, chartWidth]);\n\n    const scaleY = d3.scaleLinear()\n      .domain([0, this.maxScaleValue])\n      .rangeRound([chartHeight, 0]);\n\n    const x = d3.scaleLinear()\n      .domain([0, data.length])\n      .rangeRound([0, chartWidth]);\n\n    const colorScale = d3.scaleOrdinal()\n      .range(['#4ec291', '#42a3f1', '#e396d1']);\n\n    const svg = d3.select('.chart-container')\n      .append('svg')\n      .attr('width', chartWidth + margin.left + margin.right)\n      .attr('height', chartHeight + margin.top + margin.bottom);\n\n    const brushY = d3.brushY()\n      .extent((d, i) => [[x(i) + barsGap / 2, 0], [x(i) + x(1) - barsGap / 2, chartHeight]])\n      .on('brush', brushmove)\n      .on('end', brushend);\n\n    svg.append('defs')\n      .append('pattern')\n      .attr('id', 'dashed-fill')\n      .attr('width', 8)\n      .attr('height', 8)\n      .attr('patternUnits', 'userSpaceOnUse')\n      .append('rect')\n      .attr('width', 4)\n      .attr('height', 8)\n      .attr('transform', 'translate(0,0)');\n\n    this.mainGroup = svg.append('g')\n      .attr('transform', `translate(${margin.left},${margin.top})`);\n\n    const barContainer = this.mainGroup.selectAll('.bar')\n      .data(data)\n      .enter()\n      .append('g')\n      .attr('id', (d, i) => 'bar' + i)\n      .attr('class', 'bar')\n      .call(brushY)\n      .call(brushY.move, d => [d.value, 0].map(scaleY));\n\n    this.mainGroup.selectAll('.selection')\n      .data(data)\n      .attr('fill', (d, i) => colorScale(i))\n      .attr('fill-opacity', 1)\n      .attr('height', d => chartHeight - scaleY(d.value))\n      .attr('y', d => scaleY(d.value));\n\n    barContainer.append('rect')\n      .attr('class', 'handle-bar')\n      .attr('width', scaleX.bandwidth() - barsGap)\n      .attr('height', 2)\n      .attr('y', d => scaleY(d.value))\n      .attr('x', (d, i) => x(i) + barsGap / 2)\n      .attr('fill', 'url(#dashed-fill)');\n\n    barContainer.append('text')\n      .attr('text-anchor', 'middle')\n      .attr('class', 'label-top')\n      .attr('y', d => scaleY(d.value))\n      .attr('x', (d, i) => x(i) + x(0.5))\n      .attr('dy', -4)\n      .style('fill', 'currentColor')\n      .text(d => d3.format('.0%')(d.value));\n\n    barContainer.append('text')\n      .attr('text-anchor', 'middle')\n      .attr('class', 'x-axis')\n      .attr('y', chartHeight)\n      .attr('x', (d, i) => x(i) + x(0.5))\n      .attr('dy', 22)\n      .attr('fill', 'currentColor')\n      .text((d, i) => data[i].label);\n\n    const textLeft = barContainer.append('text')\n      .attr('class', 'label-answer-left header-small')\n      .attr('text-anchor', 'end')\n      .attr('transform', 'translate(6,-2)')\n      .attr('y', d => scaleY(d.value))\n      .attr('x', (d, i) => x(i))\n      .attr('fill', 'currentColor');\n\n    textLeft.append('tspan')\n      .attr('x', (d, i) => x(i))\n      .text(\"deine\");\n    textLeft.append('tspan')\n      .attr('x', (d, i) => x(i))\n      .attr('dy', 12)\n      .text(\"Antwort\");\n\n    this.initExplanationContainer();\n    drawHandleNorth();\n\n    function brushmove() {\n      if (!d3.event.sourceEvent) return;\n      if (d3.event.sourceEvent.type === 'brush') return;\n      if (!d3.event.selection) return;\n\n      const d0 = d3.event.selection.map(scaleY.invert);\n      const d = d3.select(this).select('.selection');\n\n      d0[0] > 0 ? d.datum().value = d0[0] : d.datum().value = 0.01; // Change the value of the original data\n\n      update();\n    }\n\n    function brushend() {\n      if (!d3.event.sourceEvent) return;\n      if (d3.event.sourceEvent.type === 'brush') return;\n      if (!d3.event.selection) { // just in case of click with no move\n        barContainer.call(brushY.move, d => [d.value, 0].map(scaleY))\n      }\n    }\n\n    function update() {\n      barContainer\n        .call(brushY.move, d => [d.value, 0].map(scaleY))\n        .selectAll('.label-top, .label-answer-left, .handle-bar')\n        .attr('y', d => scaleY(d.value));\n      barContainer.selectAll('.label-top')\n        .text(d => d3.format('.0%')(d.value));\n\n      drawHandleNorth();\n    }\n\n    function drawHandleNorth() {\n      barContainer.selectAll('.handle--n')\n        .attr('height', 20)\n        .attr('dy', -10)\n    }\n  }\n\n  initExplanationContainer() {\n    const {chartWidth, chartHeight} = this;\n\n    const scaleY = d3.scaleLinear()\n      .domain([0, this.maxScaleValue])\n      .rangeRound([chartHeight, 0]);\n\n    const containerWidth = 250;\n    const containerHight = 58;\n\n    const explanationContainer = this.mainGroup.append('g')\n      .attr('class', 'explanation-container')\n      .attr('opacity', 1)\n      .data(this.props.data)\n      .attr('transform', d => `translate(190, ${scaleY(d.value) - 46})`)\n      .attr('dx', chartWidth / 2)\n      .attr('pointer-events', 'none')\n\n    explanationContainer.append('rect')\n      .attr('width', containerWidth)\n      .attr('height', containerHight)\n      .attr('fill', '#222');\n\n    const textContainer = explanationContainer.append('text')\n      .attr('x', 8)\n      .attr('y', 24)\n      .attr('fill', '#fff');\n    textContainer.append('tspan')\n      .text('Schätze, wie sich die Anzahl ');\n    textContainer.append('tspan')\n      .text('der Bauernhöfe verändert hat!')\n      .attr('dy', 20)\n      .attr('x', 8);\n  }\n\n  animateExplanationLabel() {\n    const {mainGroup, chartHeight, durations} = this;\n\n    const scaleY = d3.scaleLinear()\n      .domain([0, this.maxScaleValue])\n      .rangeRound([chartHeight, 0]);\n\n    const explanationContainer = mainGroup.selectAll('.explanation-container');\n\n    explanationContainer.transition()\n      .duration(durations.anim1)\n      .attr('transform', d => `translate(190, ${scaleY(d.random1) - 46})`)\n      .transition()\n      .duration(durations.anim2)\n      .attr('transform', d => `translate(190, ${scaleY(d.random2) - 46})`)\n      .transition()\n      .duration(durations.anim3)\n      .attr('transform', d => `translate(190, ${scaleY(d.value) - 46})`)\n      .transition()\n      .delay(200)\n      .duration(1500)\n      .attr('transform', 'translate(-38,-16)');\n\n    explanationContainer.select('rect')\n      .transition()\n      .attr('fill', '#222')\n      .transition()\n      .delay(4000)\n      .duration(1000)\n      .attr('fill', 'transparent');\n    explanationContainer.select('text')\n      .transition()\n      .attr('fill', '#fff')\n      .transition()\n      .delay(4000)\n      .duration(1000)\n      .attr('fill', 'black')\n\n    const arrow = explanationContainer.append('polygon')\n      .attr('points', '0,15 20,30 18,20 45,22 43,15 45,8 18,10 20,0')\n      .attr('transform', 'translate(-50,32) rotate(-10)')\n      .attr('fill', 'white')\n      .attr('stroke', 'black')\n      .attr('stroke-width', 1);\n\n    arrow.transition()\n      .delay(durations.animSum + 300)\n      .duration(300)\n      .attr('opacity', 0)\n  }\n\n  animateBars() {\n    const {mainGroup, chartHeight, durations} = this;\n\n    const scaleY = d3.scaleLinear()\n      .domain([0, this.maxScaleValue])\n      .rangeRound([chartHeight, 0]);\n\n    mainGroup.selectAll('.selection')\n      .transition()\n      .duration(durations.anim1)\n      .attr('height', d => chartHeight - scaleY(d.random1))\n      .attr('y', d => scaleY(d.random1))\n      .transition()\n      .duration(durations.anim2)\n      .attr('height', d => chartHeight - scaleY(d.random2))\n      .attr('y', d => scaleY(d.random2))\n      .transition()\n      .duration(durations.anim3)\n      .attr('height', d => chartHeight - scaleY(d.value))\n      .attr('y', d => scaleY(d.value))\n\n    mainGroup.selectAll('.label-top')\n      .transition()\n      .duration(durations.anim1)\n      .attr('y', d => scaleY(d.random1))\n      .on(\"start\", function () {\n        d3.active(this)\n          .tween(\"text\", d => {\n            const that = d3.select(this);\n            const i = d3.interpolateNumber(that.text().replace(/%/g, \"\") / 100, d.random1);\n            return t => that.text(d3.format('.0%')(i(t)));\n          })\n      })\n      .transition()\n      .duration(durations.anim2)\n      .attr('y', d => scaleY(d.random2))\n      .on(\"start\", function () {\n        d3.active(this)\n          .tween(\"text\", d => {\n            const that = d3.select(this);\n            const i = d3.interpolateNumber(that.text().replace(/%/g, \"\") / 100, d.random2);\n            return t => that.text(d3.format('.0%')(i(t)));\n          })\n      })\n      .transition()\n      .duration(durations.anim3)\n      .attr('y', d => scaleY(d.value))\n      .on(\"start\", function () {\n        d3.active(this)\n          .tween(\"text\", d => {\n            const that = d3.select(this);\n            const i = d3.interpolateNumber(that.text().replace(/%/g, \"\") / 100, d.value);\n            return t => that.text(d3.format('.0%')(i(t)));\n          })\n      });\n\n    this.mainGroup.selectAll('.label-answer-left')\n      .transition()\n      .attr('opacity', 1)\n      .duration(durations.anim1)\n      .attr('y', d => scaleY(d.random1))\n      .transition()\n      .duration(durations.anim2)\n      .attr('y', d => scaleY(d.random2))\n      .transition()\n      .duration(durations.anim3)\n      .attr('y', d => scaleY(d.value))\n      .attr('opacity', 0)\n\n    this.mainGroup.selectAll('.handle-bar')\n      .transition()\n      .attr('opacity', 1)\n      .duration(durations.anim1)\n      .attr('y', d => scaleY(d.random1))\n      .transition()\n      .duration(durations.anim2)\n      .attr('y', d => scaleY(d.random2))\n      .transition()\n      .duration(durations.anim3)\n      .attr('y', d => scaleY(d.value))\n      .attr('opacity', 0)\n\n    setTimeout(() => {\n      this.mainGroup.selectAll('.handle-bar, .label-answer-left')\n        .classed('on-hover-only', true)\n    }, durations.animSum)\n  }\n\n  showAnswer() {\n    const {data} = this.props;\n    let chartHeight = 300;\n\n    const scaleY = d3.scaleLinear()\n      .domain([0, this.maxScaleValue])\n      .rangeRound([chartHeight, 0]);\n\n    this.mainGroup.selectAll('.selection')\n      .data(data)\n      .transition()\n      .duration(2000)\n      .attr('height', d => chartHeight - scaleY(d.maxInPct))\n      .attr('y', d => scaleY(d.maxInPct));\n\n    this.mainGroup.selectAll('.label-top')\n      .transition()\n      .duration(2000)\n      .attr('y', d => scaleY(d.maxInPct))\n      .on(\"start\", function () {\n        d3.active(this)\n          .tween(\"text\", d => {\n            const that = d3.select(this);\n            const i = d3.interpolateNumber(that.text().replace(/%/g, \"\") / 100, d.maxInPct);\n            return t => that.text(d3.format('.0%')(i(t)));\n          })\n      });\n\n    const textLeft = this.mainGroup.selectAll('.label-answer-left, .handle-bar')\n      .classed('header-small', false)\n      .classed('on-hover-only', false)\n      .attr('opacity', 1);\n\n    textLeft.selectAll('tspan').remove();\n    textLeft.append('tspan')\n      .attr('dy', 8)\n      .text(d => d3.format('.0%')(d.value));\n\n    this.mainGroup.selectAll('*').attr('pointer-events', 'none')\n  }\n\n  componentDidMount() {\n    this.drawChart();\n  }\n\n  componentDidUpdate() {\n    const showAnswer = this.props.showAnswer;\n    const isAnimating = this.props.isAnimating;\n\n    if (showAnswer) this.showAnswer();\n    if (!showAnswer && isAnimating) {\n      this.animateBars();\n      this.animateExplanationLabel();\n    }\n  }\n\n  render() {\n    return (\n      <div className='DraggableBarChart'>\n        <div className='chart-container'/>\n      </div>\n    )\n  }\n}","import * as React from \"react\";\nimport DraggableBarChart from \"./DraggableBarChart\";\nimport Button from \"react-bootstrap/Button\";\nimport DataService from \"../services/DataService\";\n\nexport default class QuizPage extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      quizStarted: false,\n      showAnswer: false,\n      isAnimating: false\n    };\n    this.componentRef = React.createRef();\n  }\n\n  componentDidMount() {\n    window.addEventListener('scroll', this.handleScroll);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('scroll', this.handleScroll);\n  }\n\n  handleScroll = e => {\n    const scrollTop = e.target.scrollingElement.scrollTop;\n    const offsetTop = this.componentRef.current.offsetTop;\n    const elementHeight = this.componentRef.current.offsetHeight;\n\n    if (scrollTop > offsetTop - 400 && scrollTop < offsetTop + elementHeight / 2) {\n      if(this.state.isAnimating !== true) {\n        this.setState({isAnimating: true});\n      }\n    } else {\n      if(this.state.isAnimating !== false) {\n        this.setState({isAnimating: false});\n      }\n    }\n  };\n\n  render() {\n    const data = DataService.getQuizData(this.props.data);\n    const showAnswer = this.state.showAnswer;\n\n    return (\n      <div className='QuizPage' ref={this.componentRef} onScroll={this.handleScroll}>\n        <h2>Quiz</h2>\n\n        <p>Ausgehend vom Jahr 1985, wo der Bestand 100% betrug: Wie viele kleinere, mittlere und grosse Bauernhöfe gibt\n          es heute?</p>\n\n        <div>\n          <DraggableBarChart showAnswer={showAnswer}\n                             isAnimating={this.state.isAnimating}\n                             data={data}/>\n\n          <p className={showAnswer ? 'show' : 'hide'}>Tatsächlich ist es so, dass besonders unter den kleineren\n            Bauernhöfen ein regelrechtes Massensterben beobachtet werden kann. Auch mittelgrosse Betriebe haben\n            Schwierigkeiten. Nur grosse oder zusammengelegte Höfe können sich behaupten: Ihre Anzahl ist um das\n            Mehrfache\n            gestiegen.</p>\n        </div>\n\n        <Button className={!showAnswer ? 'show fade-in' : 'hide'}\n                onClick={() => this.setState({showAnswer: true})}\n                variant=\"dark\">Antwort zeigen</Button>\n      </div>\n    )\n  }\n}","import * as React from \"react\";\nimport DataService from \"./services/DataService\";\nimport FarmSizeRelationsChart from \"./components/FarmSizeRelationsChart\";\nimport FarmsCountChart from \"./components/FarmsCountChart\";\nimport Header from \"./components/Header\";\nimport QuizPage from \"./components/QuizPage\";\n\nclass App extends React.Component {\n\n  constructor(params) {\n    super(params);\n    this.state = {}\n  }\n\n  componentWillMount() {\n    this.loadData()\n  }\n\n  render() {\n    const {data} = this.state;\n    const dataReady = data !== undefined;\n\n    return (\n      <div className=\"App\">\n        <Header/>\n        {dataReady ? <QuizPage data={data}/> : null}\n        {dataReady ? <FarmSizeRelationsChart data={data}/> : null}\n        {dataReady ? <FarmsCountChart data={data}/> : null}\n      </div>\n    )\n  }\n\n  async loadData() {\n    const data = await DataService.getFullData();\n    this.setState({data: data})\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './shared.scss';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"static/media/cow.693a9c19.svg\";","module.exports = __webpack_public_path__ + \"static/media/wheat.4e4ef96c.svg\";"],"sourceRoot":""}