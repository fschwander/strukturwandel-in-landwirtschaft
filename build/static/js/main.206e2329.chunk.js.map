{"version":3,"sources":["res/imgs/cow.svg","res/imgs/wheat.svg","res/data/farm-sizes.csv","components/DraggableBarChart.js","components/QuizPage.js","services/DataService.js","components/FarmsCountChart.js","components/FarmSizeRelationsChart.js","res/imgs/FarmImg.js","components/Header.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","DraggableBarChart","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","showAnswer","maxScaleValue","Math","round","d3","data","d","maxInPct","margin","scaleX","domain","map","label","rangeRound","scaleY","x","length","svg","append","attr","brushY","extent","i","barsGap","on","sourceEvent","type","selection","d0","invert","select","datum","value","barContainer","move","selectAll","text","drawHandleNorth","mainGroup","concat","enter","bandwidth","style","textLeft","classed","colorScale","range","transition","duration","formatInPct","_this2","tween","that","replace","t","remove","drawChart","react","className","React","QuizPage","setState","DraggableBarChart_DraggableBarChart","Button_default","a","variant","onClick","DataService","yearMin","yearMax","minSmall","area_size_0_1","area_size_1_3","area_size_3_5","area_size_5_10","minMedium","area_size_20_30","area_size_10_20","minLarge","area_size_50_n","area_size_30_50","maxSmall","maxMedium","maxLarge","size","minYearData","maxYearData","minYear","year","maxYear","dataSource","total_farms_count","area_valley_in_percent","area_mountain_in_percent","keys","filter","FarmsCountChart","params","width","height","top","bottom","left","right","innerHeight","innerWidth","labelMap","getLabelMap","getFilteredFarmsKeys","series","stack","xScale","yScale","area","y0","y1","key","initAxes","initLegend","xAxis","scale","tickFormat","yAxis","legendHeight","legend","legendEntry","reverse","init","FarmSizeRelationsChart","processedData","oldData","scaleWidth","paddingInner","paddingOuter","barGroup","ticks","sectorWidth","barWidth","console","log","pctValue","fullData","legendEntries","_loop","j","initLabels","FarmImg","background","viewBox","_this$style","_this$props","fill","xmlns","xmlnsXlink","id","stroke","stroke-width","fill-rule","Header","FarmImg_FarmImg","printIcons","cowImg","wheatImg","name","count","container","Image","src","App","initData","_this$state","reducedData","reducedDataIsLoaded","undefined","fullDataIsLoaded","Header_Header","QuizPage_QuizPage","FarmSizeRelationsChart_FarmSizeRelationsChart","FarmsCountChart_FarmsCountChart","getFullData","getReducedData","ReactDOM","render","react_default","createElement","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.206e2329.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cow.693a9c19.svg\";","module.exports = __webpack_public_path__ + \"static/media/wheat.4e4ef96c.svg\";","module.exports = __webpack_public_path__ + \"static/media/farm-sizes.bfe448e9.csv\";","import * as React from 'react';\nimport * as d3 from 'd3';\n\nexport default class DraggableBarChart extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      showAnswer: props.showAnswer\n    };\n    this.maxScaleValue = Math.round(d3.max(this.props.data, d => d.maxInPct)) * 1.2;\n  }\n\n  /**\n   * Based on https://bl.ocks.org/AlainRo/9264cd08e341f2c92f020c39642c34d1\n   */\n  drawChart() {\n    const {data} = this.props;\n\n    let barsGap = 22;\n    let chartWidth = 500,\n      chartHeight = 300;\n    let margin = {\n      top: 20,\n      right: 30,\n      bottom: 50,\n      left: 50,\n    };\n\n    const scaleX = d3.scaleBand()\n      .domain(data.map(d => d.label))\n      .rangeRound([0, chartWidth])\n\n    const scaleY = d3.scaleLinear()\n      .domain([0, this.maxScaleValue])\n      .rangeRound([chartHeight, 0]);\n\n    const x = d3.scaleLinear()\n      .domain([0, data.length])\n      .rangeRound([0, chartWidth]);\n\n    const svg = d3.select('.chart-container')\n      .append('svg')\n      .attr('width', chartWidth + margin.left + margin.right)\n      .attr('height', chartHeight + margin.top + margin.bottom);\n\n    const brushY = d3.brushY()\n      .extent((d, i) => [[x(i) + barsGap / 2, 0], [x(i) + x(1) - barsGap / 2, chartHeight]])\n      .on('brush', brushmove)\n      .on('end', brushend);\n\n    svg.append('defs')\n      .append('pattern')\n      .attr('id', 'dashed-fill')\n      .attr('width', 8)\n      .attr('height', 8)\n      .attr('patternUnits', 'userSpaceOnUse')\n      .append('rect')\n      .attr('width', 4)\n      .attr('height', 8)\n      .attr('transform', 'translate(0,0)');\n\n    this.mainGroup = svg.append('g')\n      .attr('transform', `translate(${margin.left},${margin.top})`);\n\n    const barContainer = this.mainGroup.selectAll('.bar')\n      .data(data)\n      .enter()\n      .append('g')\n      .attr('id', (d, i) => 'bar' + i)\n      .attr('class', 'bar')\n      .call(brushY)\n      .call(brushY.move, d => [d.value, 0].map(scaleY));\n\n    d3.selectAll('.selection').attr('fill', '#b9b7ac')\n      .attr('fill-opacity', 1);\n\n    barContainer.append('rect')\n      .attr('class', 'handle-bar on-hover-only')\n      .attr('width', scaleX.bandwidth() - barsGap)\n      .attr('height', 2)\n      .attr('y', d => scaleY(d.value))\n      .attr('x', (d, i) => x(i) + barsGap / 2)\n      .attr('fill', 'url(#dashed-fill)');\n    drawHandleNorth();\n\n    barContainer.append('text')\n      .attr('text-anchor', 'middle')\n      .attr('class', 'label-top')\n      .attr('y', d => scaleY(d.value))\n      .attr('x', (d, i) => x(i) + x(0.5))\n      .attr('dy', -4)\n      .style('fill', 'currentColor')\n      .text(d => d3.format('.0%')(d.value));\n\n    barContainer.append('text')\n      .attr('text-anchor', 'middle')\n      .attr('class', 'x-axis')\n      .attr('y', chartHeight)\n      .attr('x', (d, i) => x(i) + x(0.5))\n      .attr('dy', 22)\n      .attr('fill', 'currentColor')\n      .text((d, i) => data[i].label);\n\n    const textLeft = barContainer.append('text')\n      .attr('class', 'label-answer-left header-small')\n      .classed('on-hover-only', true)\n      .attr('text-anchor', 'end')\n      .attr('transform', 'translate(6,-2)')\n      .attr('y', d => scaleY(d.value))\n      .attr('x', (d, i) => x(i))\n      .attr('fill', 'currentColor');\n\n    textLeft.append('tspan')\n      .attr('x', (d, i) => x(i))\n      .text(\"deine\");\n    textLeft.append('tspan')\n      .attr('x', (d, i) => x(i))\n      .attr('dy', 12)\n      .text(\"Antwort\");\n\n    function brushmove() {\n      if (!d3.event.sourceEvent) return;\n      if (d3.event.sourceEvent.type === 'brush') return;\n      if (!d3.event.selection) return;\n\n      const d0 = d3.event.selection.map(scaleY.invert);\n      const d = d3.select(this).select('.selection');\n\n      d0[0] > 0 ? d.datum().value = d0[0] : d.datum().value = 0.01; // Change the value of the original data\n\n      update();\n    }\n\n    function brushend() {\n      if (!d3.event.sourceEvent) return;\n      if (d3.event.sourceEvent.type === 'brush') return;\n      if (!d3.event.selection) { // just in case of click with no move\n        barContainer.call(brushY.move, d => [d.value, 0].map(scaleY))\n      }\n    }\n\n    function update() {\n      barContainer\n        .call(brushY.move, d => [d.value, 0].map(scaleY))\n        .selectAll('.label-top, .label-answer-left')\n        .attr('y', d => scaleY(d.value));\n\n      barContainer\n        .selectAll('.label-top')\n        .text(d => d3.format('.0%')(d.value));\n\n      barContainer.selectAll('.handle-bar')\n        .attr('y', d => scaleY(d.value));\n      drawHandleNorth();\n    }\n\n    function drawHandleNorth() {\n      barContainer.selectAll('.handle--n')\n        .attr('height', 20)\n        .attr('dy', -10)\n    }\n  }\n\n  showAnswer() {\n    const {data} = this.props;\n    let chartHeight = 300;\n\n    const scaleY = d3.scaleLinear()\n      .domain([0, this.maxScaleValue])\n      .rangeRound([chartHeight, 0]);\n\n    const colorScale = d3.scaleOrdinal()\n      .range(['#4ec291', '#42a3f1', '#e396d1']);\n\n    this.mainGroup.selectAll('.selection')\n      .data(data)\n      .transition()\n      .duration(2000)\n      .attr('height', d => chartHeight - scaleY(d.maxInPct))\n      .attr('y', d => scaleY(d.maxInPct))\n      .attr('fill', (d, i) => colorScale(i));\n\n    const formatInPct = d3.format(\".0%\");\n\n    this.mainGroup.selectAll('.label-top')\n      .transition()\n      .duration(2000)\n      .attr('y', d => scaleY(d.maxInPct))\n      .on(\"start\", function () {\n        d3.active(this)\n          .tween(\"text\", d => {\n            const that = d3.select(this);\n            const i = d3.interpolateNumber(that.text().replace(/%/g, \"\") / 100, d.maxInPct);\n            return t => that.text(formatInPct(i(t)));\n          })\n      });\n\n    const textLeft = this.mainGroup.selectAll('.label-answer-left, .handle-bar')\n      .classed('header-small', false)\n      .classed('on-hover-only', false);\n\n    textLeft.selectAll('tspan').remove();\n    textLeft.append('tspan')\n      .attr('dy', 8)\n      .text(d => formatInPct(d.value));\n\n    this.mainGroup.selectAll('*').attr('pointer-events', 'none')\n  }\n\n  componentDidMount() {\n    this.drawChart();\n  }\n\n  componentDidUpdate() {\n    if (this.props.showAnswer) this.showAnswer();\n  }\n\n  render() {\n    return (\n      <div className='DraggableBarChart'>\n        <div className='chart-container'/>\n      </div>\n    )\n  }\n}","import * as React from \"react\";\nimport DraggableBarChart from \"./DraggableBarChart\";\nimport Button from \"react-bootstrap/Button\";\n\nexport default class QuizPage extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      showAnswer: false\n    }\n  }\n\n  showAnswer() {\n    this.setState({showAnswer: true})\n  }\n\n\n  render() {\n    const showAnswer = this.state.showAnswer;\n\n    return (\n      <div className='QuizPage'>\n        <h2>Quiz</h2>\n\n        <p>Ausgehend vom Jahr 1985, wo der Bestand 100% betrug: Wie viele kleinere, mittlere und grosse Bauernhöfe gibt es heute?</p>\n\n        <p>Schätze, wie sich die Anzahl der Bauernhöfe verändert hat.</p>\n\n        <DraggableBarChart showAnswer={this.state.showAnswer}\n                           data={this.props.data}/>\n        <p className={showAnswer ? 'show' : 'hide'}>Tatsächlich ist es so, dass besonders unter den kleineren\n          Bauernhöfen ein regelrechtes Massensterben beobachtet werden kann. Auch mittelgrosse Betriebe haben\n          Schwierigkeiten. Nur grosse oder zusammengelegte Höfe können sich behaupten: Ihre Anzahl ist um das Mehrfache\n          gestiegen.</p>\n        <Button className={showAnswer ? 'hide' : 'show'} variant=\"dark\"\n                onClick={() => this.showAnswer()}>Antwort zeigen</Button>\n      </div>\n    )\n  }\n}","import * as d3 from \"d3\";\nimport dataSource from \"../res/data/farm-sizes.csv\";\n\nexport default class DataService {\n\n  static getReducedData(data) {\n    const yearMin = data[0];\n    const yearMax = data[data.length - 1];\n\n    let minSmall = yearMin.area_size_0_1\n      + yearMin.area_size_1_3\n      + yearMin.area_size_3_5\n      + yearMin.area_size_5_10;\n\n    let minMedium = yearMin.area_size_20_30 + yearMin.area_size_10_20;\n\n    let minLarge = yearMin.area_size_50_n + yearMin.area_size_30_50;\n\n    let maxSmall = yearMax.area_size_0_1\n      + yearMax.area_size_1_3\n      + yearMax.area_size_3_5\n      + yearMax.area_size_5_10;\n\n    let maxMedium = yearMax.area_size_20_30 + yearMax.area_size_10_20;\n\n    let maxLarge = yearMax.area_size_50_n + yearMax.area_size_30_50;\n\n    return [\n      {\n        value: 1,\n        label: \"Kleine Bauernhöfe\",\n        size: \"bis 20 ha\",\n        minYearData: minSmall,\n        maxYearData: maxSmall,\n        minYear: yearMin.year,\n        maxYear: yearMax.year,\n        maxInPct: maxSmall / minSmall\n      },\n      {\n        value: 1,\n        label: \"Mittlere Bauernhöfe\",\n        size: \"20 bis 50 ha\",\n        minYearData: minMedium,\n        maxYearData: maxMedium,\n        minYear: yearMin.year,\n        maxYear: yearMax.year,\n        maxInPct: maxMedium / minMedium\n      },\n      {\n        value: 1,\n        label: \"Grosse Bauernhöfe\",\n        size: \"ab 50 ha\",\n        minYearData: minLarge,\n        maxYearData: maxLarge,\n        minYear: yearMin.year,\n        maxYear: yearMax.year,\n        maxInPct: maxLarge / minLarge\n      }\n    ]\n  }\n\n  static getFullData() {\n    return d3.csv(dataSource,\n      d => ({\n        year: +d.year,\n        total_farms_count: +d.total_farms_count,\n        area_valley_in_percent: +d.area_valley_in_percent,\n        area_mountain_in_percent: +d.area_mountain_in_percent,\n        area_size_0_1: +d.area_size_0_1,\n        area_size_1_3: +d.area_size_1_3,\n        area_size_3_5: +d.area_size_3_5,\n        area_size_5_10: +d.area_size_5_10,\n        area_size_10_20: +d.area_size_10_20,\n        area_size_20_30: +d.area_size_20_30,\n        area_size_30_50: +d.area_size_30_50,\n        area_size_50_n: +d.area_size_50_n\n      }))\n  }\n\n  static getLabelMap() {\n    return {\n      year: 'Jahr',\n      total_farms_count: 'Total Anz. Farmen',\n      area_valley_in_percent: 'Talgebiet in %',\n      area_mountain_in_percent: 'Berggebiet in %',\n      area_size_0_1: '< 1 ha',\n      area_size_1_3: '1 bis 3 ha',\n      area_size_3_5: '3 bis 5 ha',\n      area_size_5_10: '5 bis 10 ha',\n      area_size_10_20: '10 bis 20 ha',\n      area_size_20_30: '20 bis 30 ha',\n      area_size_30_50: '30 bis 50 ha',\n      area_size_50_n: '> 50 ha'\n    };\n  }\n\n  static getFilteredFarmsKeys(data) {\n    return Object.keys(data[0]).filter(d =>\n      d === 'area_size_0_1' ||\n      d === 'area_size_1_3' ||\n      d === 'area_size_3_5' ||\n      d === 'area_size_5_10' ||\n      d === 'area_size_10_20' ||\n      d === 'area_size_20_30' ||\n      d === 'area_size_30_50' ||\n      d === 'area_size_50_n');\n  }\n}","import * as React from 'react';\nimport * as d3 from 'd3';\nimport DataService from \"../services/DataService\";\n\nexport default class FarmsCountChart extends React.Component {\n\n  constructor(params) {\n    super(params);\n\n    this.width = 780;\n    this.height = 500;\n    this.margin = {\n      top: 0,\n      bottom: 60,\n      left: 90,\n      right: 70\n    };\n    this.innerHeight = this.height - this.margin.top - this.margin.bottom;\n    this.innerWidth = this.width - this.margin.left - this.margin.right;\n    this.labelMap = DataService.getLabelMap();\n  }\n\n  /**\n   * Based on https://observablehq.com/@tmcw/stacked-area-chart\n   */\n  init() {\n    const {innerWidth, innerHeight, width, height, margin} = this;\n    const {data} = this.props;\n\n    const keys = DataService.getFilteredFarmsKeys(data);\n    const stack = d3.stack().keys(keys);\n    const series = stack(data);\n    const colorScale = d3.scaleOrdinal()\n      .range(['#c2eedc', '#7fd1af', '#1cb373', '#168c5a',\n        '#66bbff', '#1e8cd3',\n        '#ebb0dd', '#d674c0']);\n\n    const xScale = d3.scaleLinear()\n      .domain(d3.extent(data, d => d.year))\n      .range([0, innerWidth]);\n\n    const yScale = d3.scaleLinear()\n      .domain([0, d3.max(series, series => d3.max(series, d => d[1]))])\n      .range([innerHeight, 0]);\n\n    const area = d3.area()\n      .x(d => xScale(d.data.year))\n      .y0(d => yScale(d[0]))\n      .y1(d => yScale(d[1]));\n\n    const svg = d3.select('.FarmsCountChart')\n      .append('svg')\n      .attr('width', width)\n      .attr('height', height);\n\n    this.mainGroup = svg.append('g')\n      .attr('class', 'main')\n      .attr('transform', `translate(${margin.left}, ${margin.top})`);\n\n    // create the stacked area paths\n    this.mainGroup.append('g').attr('class', 'chart')\n      .selectAll('.area')\n      .data(series)\n      .enter().append('path')\n      .attr('class', 'area')\n      .attr('fill', d => colorScale(d.key))\n      .attr('d', area);\n\n    this.initAxes(xScale, yScale)\n    this.initLegend(keys, colorScale)\n  }\n\n  initAxes(xScale, yScale) {\n    const {innerWidth, innerHeight} = this;\n\n    const xAxis = d3.axisBottom()\n      .scale(xScale)\n      .tickFormat(d3.format(''));\n\n    const yAxis = d3.axisLeft()\n      .scale(yScale);\n\n    // x axis\n    this.mainGroup.append('g')\n      .attr('class', 'axis x')\n      .attr('transform', `translate(0, ${innerHeight})`)\n      .call(xAxis);\n\n    // x axis label\n    d3.select('g.axis.x')\n      .append('text')\n      .attr('class', 'header')\n      .attr('x', innerWidth / 2)\n      .attr('y', 50)\n      .text('Jahr')\n      .style('text-anchor', 'middle');\n\n    // generate y axis\n    this.mainGroup.append('g')\n      .attr('class', 'axis y')\n      .call(yAxis);\n\n    // y axis label\n    d3.select('.y.axis')\n      .append('text')\n      .attr('class', 'header')\n      .attr('x', -innerHeight / 2)\n      .attr('y', -70)\n      .attr('transform', 'rotate(-90)')\n      .text('Anz. Bauernhöfe')\n      .attr('text-anchor', 'middle');\n  }\n\n  initLegend(keys, colorScale) {\n    const lineHeight = 22;\n    const padding = 8;\n\n    const legendWidth = 100 + 2 * padding;\n    const legendHeight = keys.length * lineHeight + padding;\n\n    const legend = this.mainGroup.append('g')\n      .attr('class', 'legend')\n      .attr('width', legendWidth)\n      .attr('height', legendHeight)\n      .attr('transform', `translate(${this.innerWidth - legendWidth - 48},${padding})`);\n\n    legend.append('rect')\n      .attr('class', 'background')\n      .attr('width', legendWidth)\n      .attr('height', legendHeight)\n      .attr('fill', 'white');\n\n    const legendEntry = legend.append('g')\n      .attr('class', 'entries')\n      .attr('transform', `translate(${padding},${padding})`)\n      .selectAll('rect')\n      .data(keys.reverse())\n      .enter();\n\n    legendEntry.append('rect')\n      .attr('y', (d, i) => lineHeight * i)\n      .attr('width', 12)\n      .attr('height', 12)\n      .attr('fill', d => colorScale(d));\n\n    legendEntry.append('text')\n      .attr('x', 20)\n      .attr('y', (d, i) => lineHeight * i + 10)\n      .text(d => this.labelMap[d]);\n  }\n\n  componentDidMount() {\n    this.init()\n  }\n\n  render() {\n    return (\n      <div className='FarmsCountChart'>\n        <h2>Veränderungsverlauf aller Bauernhofgrössen</h2>\n      </div>\n    )\n  }\n}","import * as React from \"react\";\nimport * as d3 from \"d3\";\n\nexport default class FarmSizeRelationsChart extends React.Component {\n\n  /**\n   * Based on https://bl.ocks.org/mbostock/3887051\n   */\n  drawChart() {\n    const {data} = this.props;\n\n    const margin = {top: 0, right: 60, bottom: 40, left: 100};\n\n    this.width = 660 - margin.left - margin.right;\n    this.height = 300 - margin.top - margin.bottom;\n\n    this.processedData = [\n      this.props.data.map(d => d.minYearData),\n      this.props.data.map(d => d.maxYearData)\n    ];\n\n    this.colorScale = [\n      d3.scaleOrdinal().range(['#7fd1af', '#1cb373']),\n      d3.scaleOrdinal().range(['#66bbff', '#1e8cd3']),\n      d3.scaleOrdinal().range(['#ebb0dd', '#d674c0'])\n    ];\n\n    this.yScale = d3.scaleLinear()\n      .domain([0, d3.max(this.processedData, oldData => d3.max(oldData))])\n      .range([this.height, 0]);\n\n    this.xScale = d3.scaleBand()\n      .domain(data.map(d => d.label))\n      .rangeRound([0, this.width]);\n\n    this.scaleWidth = d3.scaleBand()\n      .domain(d3.range(this.processedData.length))\n      .range([0, this.xScale.bandwidth()])\n      .paddingInner(0.02)\n      .paddingOuter(0.2);\n\n    const {width, height, xScale, yScale, scaleWidth, colorScale, processedData} = this;\n\n    const svg = d3.select(\".FarmSizeRelationsChart\").append(\"svg\")\n      .attr(\"width\", width + margin.left + margin.right)\n      .attr(\"height\", height + margin.top + margin.bottom);\n\n    const mainGroup = svg.append(\"g\")\n      .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n    this.mainGroup = mainGroup;\n\n    const barGroup = mainGroup.append(\"g\")\n      .attr('class', 'bars-container')\n      .selectAll(\"g\")\n      .data(processedData)\n      .enter().append(\"g\")\n      .attr('class', (d, i) => `bars${i}`)\n      .attr(\"transform\", (d, i) => \"translate(\" + scaleWidth(i) + \",0)\")\n\n    barGroup.selectAll(\"rect\")\n      .data(d => d)\n      .enter().append('g')\n      .append(\"rect\")\n      .attr(\"width\", scaleWidth.bandwidth())\n      .attr(\"height\", d => height - yScale(d))\n      .attr(\"x\", (d, i) => xScale(data[i].label))\n      .attr(\"y\", d => yScale(d))\n      .attr(\"fill\", (d, i) => {\n        const scale = colorScale[i];\n        return scale(d)\n      });\n\n\n    barGroup.append('text')\n      .text((d, i) => {\n        switch (i) {\n          case 0:\n            return data[0].minYear;\n          case 1:\n            return data[0].maxYear;\n          default:\n            return '?';\n        }\n      })\n      .attr('class', 'header-small')\n      .attr('x', scaleWidth.bandwidth() / 2)\n      .attr('y', height - 12)\n      .attr('text-anchor', 'middle');\n\n    mainGroup.append('g')\n      .attr('class', 'x-axis')\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(d3.axisBottom(xScale));\n\n    mainGroup.append('g')\n      .attr('class', 'y-axis')\n      .call(d3.axisLeft(yScale).ticks(5));\n\n    mainGroup.append('text')\n      .attr('class', 'header')\n      .text('Anz. Bauernhöfe')\n      .attr('text-anchor', 'middle')\n      .attr('transform', `translate(-70,${height / 2}) rotate(-90)`)\n  }\n\n  initLabels() {\n    const {data} = this.props;\n    const {xScale, yScale, scaleWidth} = this;\n\n    let sectorWidth = xScale.bandwidth();\n    let barWidth = scaleWidth.bandwidth() / 2;\n    console.log(data);\n    const formatInPct = d3.format('.0%');\n\n    d3.select('.FarmSizeRelationsChart')\n      .select('.bars1')\n      .selectAll('g')\n      .append('text')\n      .attr('x', (d, i) => sectorWidth * i + barWidth)\n      .attr('y', d => yScale(d) - 4)\n      .attr('text-anchor', 'middle')\n      .text((d, i) => {\n        const pctValue = -1 + data[i].maxInPct;\n        if (pctValue >= 0) {\n          return \"+\" + formatInPct(pctValue)\n        } else {\n          return \"–\" + formatInPct(pctValue * -1);\n        }\n      })\n  }\n\n  initLegend() {\n    const {fullData} = this.props;\n\n    const legendEntries = [fullData[0].year, fullData[fullData.length - 1].year];\n\n    const lineHeight = 24;\n    const padding = 18;\n\n    const legendWidth = 70 + 2 * padding;\n    const legendHeight = legendEntries.length * lineHeight + padding;\n\n    const legend = this.mainGroup.append('g')\n      .attr('class', 'legend')\n      .attr('width', legendWidth)\n      .attr('height', legendHeight)\n      .attr('transform', `translate(${this.width - legendWidth - padding},${padding})`);\n\n    legend.append('rect')\n      .attr('class', 'background')\n      .attr('width', legendWidth)\n      .attr('height', legendHeight)\n      .attr('fill', 'white');\n\n    const legendEntry = legend.append('g')\n      .attr('class', 'entries')\n      .attr('transform', `translate(${padding},${padding})`)\n      .selectAll('rect')\n      .data(legendEntries)\n      .enter();\n\n    for (let j = 0; j < this.colorScale.length; j++) {\n      const scale = this.colorScale[j];\n\n      legendEntry.append('rect')\n        .attr('x', j * 14)\n        .attr('y', (d, i) => lineHeight * i)\n        .attr('width', 12)\n        .attr('height', 12)\n        .attr('fill', (d, i) => scale(i));\n    }\n\n    legendEntry.append('text')\n      .attr('x', 48)\n      .attr('y', (d, i) => lineHeight * i + 10)\n      .text((d, i) => legendEntries[i]);\n\n  }\n\n  componentDidMount() {\n    this.drawChart();\n    // this.initLegend();\n    this.initLabels();\n  }\n\n  render() {\n    return <div className='FarmSizeRelationsChart'>\n      <h2>Anzahl Bauernhöfe im Vergleich 1985 zu 2017</h2>\n    </div>\n  }\n}","import * as React from \"react\";\n\nexport default class FarmImg extends React.Component {\n\n  constructor(params) {\n    super(params);\n\n    this.style = {\n      background: '#fff',\n      viewBox: \"0 0 155 113\"\n    }\n  }\n\n  render() {\n    const {style, style: {background, className, viewBox}} = this;\n    const {width, fill} = this.props;\n\n    return (\n        <svg\n          width={width}\n          style={style}\n          height={width}\n          viewBox={viewBox}\n          xmlns=\"http://www.w3.org/2000/svg\"\n          className={`icon ${className || \"\"}`}\n          xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n        >\n          <g id=\"farm\" stroke=\"none\" stroke-width=\"1\" fill={fill} fill-rule=\"evenodd\">\n            <path d=\"M42.0525781,44 C40.9182049,44 39.9989715,43.1125151 40.0000009,42.0183148 L40.0000009,31.9816852 C40.0000009,30.8874849 40.9192343,30 42.0525781,30 L50.9474227,30 C52.0807666,30 53,30.8874849 53,31.9816852 L53,42.0183148 C53,43.1125151 52.0817959,44 50.9474227,44 L42.0525781,44 Z M82.293522,89 L81.3186259,89 L11.8226032,89 C10.4495663,89 9.33497164,87.8792002 9.33497164,86.4985194 L9.33497164,47.5243876 L9.33497164,47.4742175 C9.32499317,47.4742175 9.32499317,47.4742175 9.31501471,47.4742175 L9.33497164,47.5243876 L4.00148168,47.5243876 C3.24511397,47.5243876 2.757167,46.7036049 3.12537238,46.0433665 L5.96125236,40.8497589 C5.96125236,40.8397249 5.97123082,40.8397249 5.97123082,40.8296909 L6.13986689,40.5196398 L14.4788707,25.4214532 C18.3594961,18.3866034 24.5790738,12.8438119 31.992076,9.80149776 L32.4101737,9.63192286 C36.6390475,7.9010548 41.1672753,7.03010205 45.7044837,7.03010205 C45.7843114,7.02006804 45.8631413,7 45.942969,7 L81.5072189,7 C86.2140612,7 90.8310973,7.94018746 95.1896912,9.79146374 C102.444036,12.853846 108.533893,18.3464673 112.34467,25.2508749 L120.952094,40.8306943 L123.867802,46.0333325 C124.245986,46.6935709 123.768017,47.5243876 123.001671,47.5243876 L117.658203,47.5243876 L117.688138,47.4641835 L117.658203,47.4641835 L117.658203,47.5243876 L117.658203,53.4685397 C115.937915,53.7986589 114.275503,54.2883189 112.68294,54.9194587 L112.68294,47.5243876 L111.66813,47.5243876 L84.7811535,47.5243876 L84.7811535,83.9970387 L95.275506,83.9970387 C95.4760732,85.715866 95.8273152,87.3905436 96.3282341,89 L82.293522,89 Z M14.3092368,44.2823964 L14.3092368,83.9970387 L29.3757223,83.9970387 L29.3757223,59.4668755 C29.3757223,58.0851913 30.4893191,56.9653949 31.8633538,56.9653949 L59.3390593,56.9653949 C60.7130941,56.9653949 61.8266909,58.0851913 61.8266909,59.4668755 L61.8266909,83.9980421 L79.8068883,83.9980421 L79.8068883,47.2554759 C79.7380369,47.2354078 79.6681877,47.2053058 79.5983384,47.1752037 C79.568403,47.1651697 79.5384676,47.1451017 79.5085322,47.1350677 C79.2999823,47.0347275 79.100413,46.9253567 78.9018415,46.8049485 C78.8519492,46.7648124 78.8020568,46.7347104 78.742186,46.6945743 C78.5336361,46.544064 78.3340668,46.3845231 78.1554523,46.2039108 C77.9758399,46.0243019 77.8171823,45.8236215 77.6675053,45.6139106 C77.617613,45.5446759 77.5776991,45.4844717 77.5377852,45.4142336 C77.4978714,45.3439955 77.447979,45.2737574 77.4080652,45.2035192 L76.1936859,43.0221238 L68.8006406,29.6236999 C65.9547822,24.4702283 61.4075953,20.3783559 56.0042561,18.0865862 C49.5950875,15.3753946 42.2219991,15.3352586 35.783893,17.976212 L35.3757738,18.1467903 C29.8427145,20.4074545 25.2057215,24.5505005 22.3099707,29.7932748 L15.0057337,43.0221238 L14.3092368,44.2823964 Z M56.85043,80.4429896 L56.85043,61.9693595 L38.5409431,61.9693595 L56.85043,80.4429896 Z M53.3469906,83.9950319 L34.3509853,64.8280512 L34.3509853,83.9950319 L53.3469906,83.9950319 Z M123.5,86 C120.462369,86 118,83.5373593 118,80.4994882 C118,77.4616172 120.462369,75 123.5,75 C126.537631,75 129,77.4626407 129,80.4994882 C129,83.5373593 126.537631,86 123.5,86 Z M150.492838,101.057274 C151.87766,101.057274 153,102.163588 153,103.528637 C153,104.893686 151.87766,106 150.492838,106 L81.5071621,106 C80.1223397,106 79,104.893686 79,103.528637 C79,102.163588 80.1223397,101.057274 81.5071621,101.057274 L109.532467,101.057274 C102.870838,96.759898 98.4629393,89.3785227 98.4629393,81.0058265 C98.4629393,67.7687188 109.471121,57 123.002555,57 C136.533989,57 147.543176,67.7697101 147.543176,81.0058265 C147.543176,89.3785227 143.134272,96.759898 136.472643,101.057274 L150.492838,101.057274 Z M105.483597,81.0068179 C105.483597,90.4273402 113.342991,98.0922333 123.002555,98.0922333 C132.663124,98.0922333 140.522519,90.4283315 140.522519,81.0068179 C140.522519,71.5853042 132.663124,63.9214024 123.002555,63.9214024 C113.342991,63.9214024 105.483597,71.5853042 105.483597,81.0068179 Z M71.5964506,101 C72.9245756,101 74,102.119134 74,103.5 C74,104.880866 72.9236111,106 71.5954861,106 L66.4045139,106 C65.0763889,106 64,104.880866 64,103.5 C64,102.119134 65.0763889,101 66.4045139,101 L71.5964506,101 Z\" id=\"Path-2\" fill-rule=\"nonzero\"></path>\n          </g>\n        </svg>)\n\n  }\n}","import * as React from \"react\";\nimport FarmImg from \"../res/imgs/FarmImg\";\nimport cowImg from \"../res/imgs/cow.svg\";\nimport wheatImg from \"../res/imgs/wheat.svg\";\nimport {Image} from \"react-bootstrap\";\n\nexport default class Header extends React.Component {\n\n  render() {\n    return (\n      <div className='Header'>\n        <h1>Das grosse Bauernsterben?</h1>\n\n        <p>Immer wieder liest man davon, dass für die Schweizer Bäuerinnen und Bauer die Existenz gefährdet ist:\n          Für viele Betriebe lohnt sich die Landwirtschft nicht mehr und sie verschwinden.</p>\n\n        <h2>Grössenkategorien</h2>\n\n        <div className='horizontal-container top'>\n            <FarmImg width={'80px'} fill={'#4ec291'}/>\n            <FarmImg width={'100px'} fill={'#42a3f1'}/>\n            <FarmImg width={'120px'} fill={'#e396d1'}/>\n        </div>\n\n        <div className='horizontal-container bottom'>\n          <div>\n            <h3>kleine Höfe</h3>\n            <p>Beuernhöfe, die eine Betriebsfläche von weniger als 10 Hektare haben.</p>\n          </div>\n          <div>\n            <h3>mittlere Höfe</h3>\n            <p>Mittelgrosse Höfe haben eine Fläche zwischen 10 und 30 Hektaren.</p>\n          </div>\n          <div>\n            <h3>grosse Höfe</h3>\n            <p>Die grössten Betriebe haben eine Fläche von 30 Hektaren oder mehr.</p>\n          </div>\n        </div>\n\n        <h2>Anbaumöglichkeiten pro Hektar</h2>\n\n        <h3>Kühe</h3>\n        <p>In der Schweiz reicht ein Hektar zum ernähren von rund 2 Kühen.</p>\n\n        <div className='horizontal-container'>\n          <div className='relations-container'>\n            <p>In Kleinbetrieben können demnach bis zu 20 Kühe pro Hof gehalten werden.</p>\n            {this.printIcons('cowImg', cowImg, 20)}\n          </div>\n          <div className='relations-container'>\n            <p>Auf Grossbetrieben werden beachtliche Herden von 60 Tieren oder mehr gehalten.</p>\n            {this.printIcons('cowImg', cowImg, 60)}\n          </div>\n        </div>\n\n        <h3>Weizen</h3>\n        <p>Auf einem Hektar Ackerland können 6 Tonnen Weizen angebaut werden.</p>\n\n\n        <div className='horizontal-container'>\n          <div className='relations-container'>\n            <p>Kleinbetriebe reichen demnach um bis zu 60 Tonnen Weizen anzubauen.</p>\n            {this.printIcons('wheatImg', wheatImg, 60)}\n          </div>\n          <div className='relations-container'>\n            <p>Grossbetriebe ermöglichen den Anbau von über 180 Tonnen.</p>\n            {this.printIcons('wheatImg', wheatImg, 180)}\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  printIcons(name, type, count) {\n    let container = [];\n    for (let i = 0; i < count; i++) {\n      container[i] = <Image src={type} />\n    }\n    return <div className={name}>{container}</div>;\n  }\n}","import QuizPage from \"./components/QuizPage\";\nimport * as React from \"react\";\nimport DataService from \"./services/DataService\";\nimport FarmsCountChart from \"./components/FarmsCountChart\";\nimport FarmSizeRelationsChart from \"./components/FarmSizeRelationsChart\";\nimport Header from \"./components/Header\";\n\nclass App extends React.Component {\n\n  constructor(params) {\n    super(params);\n\n    this.state = {}\n  }\n\n  componentWillMount() {\n    this.initData()\n  }\n\n  render() {\n    const {reducedData, fullData} = this.state;\n\n    let reducedDataIsLoaded = reducedData !== undefined;\n    let fullDataIsLoaded = fullData !== undefined;\n\n    return (\n      <div className=\"App\">\n        <Header />\n        {reducedDataIsLoaded ? <QuizPage data={reducedData}/> : null}\n        {reducedDataIsLoaded && fullDataIsLoaded ?\n          <FarmSizeRelationsChart fullData={fullData} data={reducedData}/> : null}\n        {fullDataIsLoaded ? <FarmsCountChart data={fullData}/> : null}\n      </div>\n    )\n  }\n\n  async initData() {\n    const fullData = await DataService.getFullData();\n    const reducedData = DataService.getReducedData(fullData);\n\n    this.setState({\n      reducedData: reducedData,\n      fullData: fullData\n    })\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './shared.scss';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}